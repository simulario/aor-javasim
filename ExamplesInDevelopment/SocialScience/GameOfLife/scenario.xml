<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-8-4.xsd"
    xmlns="http://aor-simulation.org"
    xmlns:aors="http://aor-simulation.org"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    version="0.8.4"
    scenarioName="GameOfLife">
    
    <SimulationParameters simulationSteps="10000" stepDuration="100" timeUnit="ms" stepTimeDelay="100"/>
    
    <SimulationModel modelName="Board" autoKinematics="true">
        <documentation>
            <dc:creator>Sebastian Mucha</dc:creator>
            <dc:created>May 11th, 2010</dc:created>
            <dc:description>
                This simulation models the classical Game of Life introduced by John Horton Conway.
            </dc:description>
        </documentation>
        
        <SpaceModel geometry="Euclidean">
            <TwoDimensionalGrid xMax="50" yMax="50">
                <!-- Number of active neighbors of a cell -->
                <GridCellProperty type="Integer" name="activeNeighbors"/>
                
                <!-- Cell status -->
                <GridCellProperty type="Integer" name="status"/>
                
                <!-- Temporary cell status -->
                <GridCellProperty type="Integer" name="nextStatus"/>
                
                <!-- Determines the status of a cell specified by its coordinates -->
                <GridCellFunction name="cellStatus" resultType="Integer">
                    <Parameter name="x" type="int"/>
                    <Parameter name="y" type="int"/>
                    
                    <Body language="Java">
                        <![CDATA[                    
                            return Simulator.spaceModel.getGridCell(x,y).getStatus();
                        ]]>
                    </Body>
                    <Body language="JavaScript">
                        <![CDATA[                    
                            return gameoflife.controller.Simulator.spaceModel.getGridCell(x,y).getStatus();
                        ]]>
                    </Body>
                </GridCellFunction>
                
                <!-- Determines the number of active neighbors in a cells direct neighborhood -->
                <GridCellFunction name="activeNeighbors" resultType="Integer">
                	<Body language="Java">
                	    <![CDATA[
                            int activeNeighborsCount = 0;
                            int posX = (int) this.getPosX();
                            int posY = (int) this.getPosY();
                            int xMax = (int) Simulator.spaceModel.getXMax();
                            int yMax = (int) Simulator.spaceModel.getYMax();
                            for (int x = posX-1; x <= posX+1; x++)
                            	for (int y = posY-1; y <= posY+1; y++)
                            		if (x >= 1 && x <= xMax && y >= 1 && y <= yMax 
                            				&& !(x == posX && y == posY)) {
                            			activeNeighborsCount += this.cellStatus(x,y);
                            		}
                            return activeNeighborsCount; 
                        ]]>
                	</Body>
                    <Body language="JavaScript">
                        <![CDATA[
                            var activeNeighborsCount = 0;
                            var posX = this.getPosX();
                            var posY = this.getPosY();
                            var xMax = gameoflife.controller.Simulator.spaceModel.getXMax();
                            var yMax = gameoflife.controller.Simulator.spaceModel.getYMax();
                            for (var x = posX-1; x <= posX+1; x++)
                            	for (var y = posY-1; y <= posY+1; y++)
                            		if (x >= 1 && x <= xMax && y >= 1 && y <= yMax 
                            				&& !(x == posX && y == posY)) {
                            			activeNeighborsCount += this.cellStatus(x,y);
                            		}
                            return activeNeighborsCount; 
                        ]]>
                    </Body>
                </GridCellFunction>
                
                <!-- Determines the new status of a cell with respect to its active neighbors -->
                <GridCellFunction name="newCellStatus" resultType="Integer">
                    <Body language="Java">
                        <![CDATA[                    
                            if (this.getStatus() == 0 && this.getActiveNeighbors() == 3)
                                return 1;
                            else if (this.getStatus() == 1 && this.getActiveNeighbors() < 2)
                                return 0;
                            else if (this.getStatus() == 1 && (this.getActiveNeighbors() == 2 || this.getActiveNeighbors() == 3))
                                return 1;
                            else if (this.getStatus() == 1 && this.getActiveNeighbors() > 3)
                                return 0;
                            else
                                return 0;
                        ]]>
                    </Body>
                    <Body language="JavaScript">
                        <![CDATA[                    
                            if (this.getStatus() == 0 && this.getActiveNeighbors() == 3)
                                return 1;
                            else if (this.getStatus() == 1 && this.getActiveNeighbors() < 2)
                                return 0;
                            else if (this.getStatus() == 1 && (this.getActiveNeighbors() == 2 || this.getActiveNeighbors() == 3))
                                return 1;
                            else if (this.getStatus() == 1 && this.getActiveNeighbors() > 3)
                                return 0;
                            else
                                return 0;
                        ]]>
                    </Body>
                </GridCellFunction>
                
            </TwoDimensionalGrid>
        </SpaceModel>
        
        <EnvironmentRules>
            <EnvironmentRule name="ComputeNextGeneration_EnvRule">
                <ON-EACH-SIMULATION-STEP/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateGridCells gridCellVariable="gc">
                        	<Slot property="activeNeighbors">
                        	    <ValueExpr language="Java"> <![CDATA[gc.activeNeighbors()]]></ValueExpr>
                        	    <ValueExpr language="JavaScript"><![CDATA[gc.activeNeighbors()]]></ValueExpr>
                        	</Slot>
                        	<Slot property="nextStatus">
                        	    <ValueExpr language="Java"><![CDATA[gc.newCellStatus()]]></ValueExpr>
                        	    <ValueExpr language="JavaScript"><![CDATA[gc.newCellStatus()]]></ValueExpr>
                        	</Slot>
                            <Slot property="status">
                                <ValueExpr language="Java"><![CDATA[gc.getNextStatus()]]></ValueExpr>
                                <ValueExpr language="JavaScript"><![CDATA[gc.getNextStatus()]]></ValueExpr>
                            </Slot>
                        </UpdateGridCells>                        
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
        </EnvironmentRules>
        
    </SimulationModel>
    
    <InitialState>        
        <GridCells>
            <!-- Glidergun -->
            <GridCellSet startX="1" endX="50" startY="1" endY="50">
                <Slot property="status" value="0"/>
            </GridCellSet>
            
            <GridCellSet startX="2" endX="3" startY="44" endY="45">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCellSet startX="12" endX="12" startY="43" endY="45">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCell x="13" y="46">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCell x="13" y="42">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCellSet startX="14" endX="15" startY="47" endY="47">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCellSet startX="14" endX="15" startY="41" endY="41">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCell x="16" y="44">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCell x="17" y="46">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCell x="17" y="42">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCellSet startX="18" endX="18" startY="43" endY="45">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCell x="19" y="44">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCellSet startX="22" endX="23" startY="45" endY="47">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCell x="24" y="44">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCell x="24" y="48">
                <Slot property="status" value="1"/>
            </GridCell>
            
            <GridCellSet startX="26" endX="26" startY="48" endY="49">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCellSet startX="26" endX="26" startY="43" endY="44">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <GridCellSet startX="36" endX="37" startY="46" endY="47">
                <Slot property="status" value="1"/>
            </GridCellSet>
            
            <!-- Randomly initialized board -->
            <!--
            <GridCellSet startX="1" endX="50" startY="1" endY="50">
                <Slot property="status">
                    <RandomVariable>
                        <UniformInt lowerBound="0" upperBound="1"/>
                    </RandomVariable>
                </Slot>
            </GridCellSet>
            -->
        </GridCells>   
    </InitialState>
    
    <UserInterface>
        <AnimationUI>
            <Views>
                <SpaceView canvasColor="darkgrey">
                    <TwoDimensionalGridSpaceView2D stroke="black" strokeWidth="1px">
                        <GridCellPropertyVisualizationMap cellViewProperty="fill" property="status" mapType="equalityCaseWise" a0="0" v0="white" a1="1" v1="red"/>
                    </TwoDimensionalGridSpaceView2D>
                </SpaceView>
            </Views>
        </AnimationUI>       
    </UserInterface>
</SimulationScenario>
