<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario version="0.8.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://aor-simulation.org ../../../../ext/aorsl/AORSL-0-8-3.xsd"
	xmlns="http://aor-simulation.org" xmlns:aors="http://aor-simulation.org"
	xmlns:dc="http://purl.org/dc/elements/1.1/" scenarioName="InventorySimulation"
	scenarioTitle="An Inventory Siumulation">

	<SimulationParameters simulationSteps="70" stepDuration="12" timeUnit="h" randomSeed="10" />

	<SimulationModel modelName="InventorySimulation" modelTitle="Inventory Simulation">

	<documentation>
		<dc:creator>Martin MÃ¼ller</dc:creator>
		<dc:created>2010-03-20</dc:created>
		<dc:source>InventorySimulation</dc:source>
		<dc:description>An Inventory Siumulation</dc:description>
		<processModelDiagram></processModelDiagram>
	</documentation>

	<Statistics>
		<Variable name="losses" dataType="Integer"/>
		<Variable name="averageLoss" displayName="average loss per week" dataType="Float">
			<Source computeOnlyAtEnd="true">
				<ValueExpr language="Java">((float)SimStatistics.losses.getValue() / (SimParameter.SIMULATION_STEPS/2)) * 7</ValueExpr>
			</Source>
		</Variable>
		<Variable name="lossesOverWholePeriod" displayName="losses over the whole period" dataType="Integer">
			<Source computeOnlyAtEnd="true">
				<ValueExpr language="Java">SimStatistics.losses.getValue()</ValueExpr>
			</Source>
		</Variable>
	</Statistics>
		
    <EntityTypes>
			
    	<ExogenousEventType name="PurchaseEvent">
    		<Periodicity><ValueExpr language="Java">2</ValueExpr></Periodicity>
    	</ExogenousEventType>
    	
    	<ExogenousEventType name="ReviewEvent">
    		<Periodicity><ValueExpr language="Java">2</ValueExpr></Periodicity>
    	</ExogenousEventType>
    	
    	<ExogenousEventType name="CalculateVolumeEvent">
    		<Periodicity><ValueExpr language="Java">2</ValueExpr></Periodicity>
    	</ExogenousEventType>
    	
    	<CausedEventType name="DeliveryEvent"/>
			
		<ObjectType name="StoreHouseSystem">
			<Attribute name="inStock" type="Integer"/>
			<Attribute name="isRefillOrdered" type="Boolean"/>
			<Attribute name="orderVolume" type="Integer"/>
			<Attribute name="lostInStep" type="Integer"/>
			<Attribute name="buyalVolume" type="Integer"/>
		</ObjectType>

	</EntityTypes>

	<EnvironmentRules>
			<EnvironmentRule name="PurchaseEventRuleEnoughInStock">
				<documentation>
					<dc:description>handles a request, enough in stock</dc:description>
				</documentation>
				<WHEN eventType="PurchaseEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<IF language="Java">s.getInStock() &gt;= s.getBuyalVolume()</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateObject objectVariable="s">
							<Slot property="inStock">
								<ValueExpr language="Java">s.getInStock() - s.getBuyalVolume()</ValueExpr>
							</Slot>
						</UpdateObject>
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>

			<EnvironmentRule name="PurchaseEventRuleLosses">
				<documentation>
					<dc:description>handles a request, but not enough in stock</dc:description>
				</documentation>
				<WHEN eventType="PurchaseEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<IF language="Java">s.getInStock() &lt; s.getBuyalVolume()</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateObject objectVariable="s">
							<Slot property="lostInStep"><ValueExpr language="Java">s.getBuyalVolume() - s.getInStock()</ValueExpr></Slot>
							<Slot property="inStock"><ValueExpr language="Java">0</ValueExpr></Slot>
						</UpdateObject>
						<UpdateStatisticsVariable variable="losses">
							<ValueExpr language="Java">SimStatistics.losses.getValue() + s.getLostInStep()</ValueExpr>
						</UpdateStatisticsVariable>
						
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>

			<EnvironmentRule name="ReviewRuleNoOrder">
				<documentation>
					<dc:description>applied when there is enaugh in stock</dc:description>
				</documentation>
				<WHEN eventType="ReviewEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<IF language="Java">(s.getInStock() &gt;= 11) || s.isIsRefillOrdered()</IF>
				<THEN></THEN>
			</EnvironmentRule>

			<EnvironmentRule name="ReviewRuleOrderNeeded">
				<documentation>
					<dc:description>applied when we have to order</dc:description>
				</documentation>
				<WHEN eventType="ReviewEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<IF language="Java">(s.getInStock() &lt; 11) &amp;&amp; !s.isIsRefillOrdered()</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateObject objectVariable="s">
							<Slot property="isRefillOrdered" value="true" />
							<Slot property="orderVolume"><ValueExpr language="Java">20 - s.getInStock()</ValueExpr></Slot>
						</UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="DeliveryEvent">
							<Delay>
								<DiscreteRandomVariable>
									<UniformInt lowerBound="1" upperBound="10" />
								</DiscreteRandomVariable>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>

			<EnvironmentRule name="DeliveryEventRule">
				<documentation>
					<dc:description>applied every time a delivery takes place</dc:description>
				</documentation>
				<WHEN eventType="DeliveryEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<DO>
					<UPDATE-ENV>
						<UpdateObject objectVariable="s">
							<Slot property="isRefillOrdered" value="false" />
							<Slot property="inStock"><ValueExpr language="Java">s.getInStock() + s.getOrderVolume()</ValueExpr></Slot>
						</UpdateObject>
					</UPDATE-ENV>
				</DO>
			</EnvironmentRule>

			<EnvironmentRule name="CalculateVolumeEventRule">
				<documentation>
					<dc:description>to calc buyal volume for next step</dc:description>
				</documentation>
				<WHEN eventType="CalculateVolumeEvent"/>
				<FOR objectType="StoreHouseSystem" objectVariable="s" objectIdRef="1" />
				<DO>
					<UPDATE-ENV>
						<UpdateObject objectVariable="s">
							<Slot property="buyalVolume"><RandomVariable><NormalInt mean="5" standardDeviation="1"></NormalInt></RandomVariable></Slot>
							<Slot property="lostInStep" value="0" />
						</UpdateObject>
					</UPDATE-ENV>
				</DO>
			</EnvironmentRule>

	</EnvironmentRules>


	</SimulationModel>
	<InitialState>
		<Object type="StoreHouseSystem" name="SHS1" id="1">
			<Slot xsi:type="aors:SimpleSlot" property="inStock" value="18"/>
			<Slot xsi:type="aors:SimpleSlot" property="isRefillOrdered" value="false"/>
			<Slot xsi:type="aors:SimpleSlot" property="orderVolume" value="0"/>
			<Slot xsi:type="aors:SimpleSlot" property="buyalVolume" value="0"/>
			<Slot xsi:type="aors:SimpleSlot" property="lostInStep" value="0"/>
		</Object>
		<ExogenousEvent type="CalculateVolumeEvent"  occurrenceTime="1"/>
		<ExogenousEvent type="PurchaseEvent"  occurrenceTime="2"/>
		<ExogenousEvent type="ReviewEvent"  occurrenceTime="3"/>
  	</InitialState>

</SimulationScenario>
