<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://aor-simulation.org ../../../../ext/aorsl/AORSL-0-8-3.xsd"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns="http://aor-simulation.org"
 xmlns:aors="http://aor-simulation.org"
 version="0.8.3"
 scenarioName="dumpTruckAssignment"
 scenarioTitle="Six dump trucks are used to haul coal from the entrance of a small mine to the railroad.">

	<SimulationParameters simulationSteps="300" stepDuration="1" timeUnit="min" randomSeed="100"/>

	<SimulationModel modelName="dumpTruckAssignment"
		modelTitle="Six dump trucks are used to haul coal from the entrance of a small mine to the railroad.">

		<documentation>
			<dc:creator>Martin MÃ¼ller</dc:creator>
		  <dc:contributor>Jens Werner</dc:contributor>
			<dc:created>2009-01-03</dc:created>
		  <dc:modified>2009-01-05</dc:modified>
			<dc:description>Six dump trucks are used to haul coal from the entrance of a small mine	to the railroad.</dc:description>
		</documentation>

		<Statistics>
			<Variable name="busyLoader1" dataType="Integer" initialValue="0"/>
			<Variable name="busyLoader2" dataType="Integer" initialValue="0"/>
			<Variable name="busyScale" dataType="Integer" initialValue="0"/>

			<Variable name="percentageBusyLoader1" displayName="percentage of usage of loader 1" dataType="Float">
				<Source computeOnlyAtEnd="true">
					<ValueExpr language="Java">((float)SimStatistics.busyLoader1.getValue() /
						SimParameter.SIMULATION_STEPS)*100</ValueExpr>
				</Source>
			</Variable>
			<Variable name="percentageBusyLoader2" displayName="percentage of usage of loader 2" dataType="Float">
				<Source computeOnlyAtEnd="true">
					<ValueExpr language="Java">((float)SimStatistics.busyLoader2.getValue() /
						SimParameter.SIMULATION_STEPS)*100</ValueExpr>
				</Source>
			</Variable>
			<Variable name="percentageBusyScale" displayName="percentage of usage of the scale"	dataType="Float">
				<Source computeOnlyAtEnd="true">
					<ValueExpr language="Java">((float)SimStatistics.busyScale.getValue() /
						SimParameter.SIMULATION_STEPS)*100</ValueExpr>
				</Source>
			</Variable>
		</Statistics>
		
		<EntityTypes>
			
			<ExogenousEventType name="StartEvent" periodicity="1">
			  <StopCondition language="Java">getNextOccurrenceTime() > 6</StopCondition>
			</ExogenousEventType>
			
			<CausedEventType name="ArrivalAtScaleEvent"/>
			<CausedEventType name="ArrivalAtLoaderEvent"/>
			
			<ObjectType name="Truck" />

		</EntityTypes>
		
		
		<EnvironmentRules>

			<EnvironmentRule name="StartEventRule">
				<documentation>
					<dc:description>a truck is scheduled for arrival at the loaders for the first time</dc:description>
				</documentation>
				<WHEN eventType="StartEvent"/>
				<DO>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="ArrivalAtLoaderEvent">
							<Delay>
								<ValueExpr language="Java">3</ValueExpr>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>


			<EnvironmentRule name="ArrivalAtLoaderEventRuleQueueTwoShorter">
				<documentation>
					<dc:description>trucks arrive at the loaders and queue2 is shorter</dc:description>
				</documentation>
				<WHEN eventType="ArrivalAtLoaderEvent"/>
				<FOR objectVariable="p" objectName="Loader1Queue" objectType="Collection" />
				<FOR objectVariable="q" objectName="Loader2Queue" objectType="Collection" />
				<IF language="Java">p.size() &gt;= q.size()</IF>
				<THEN>
					<UPDATE-ENV>
						<Create>
							<Object type="Truck" addToCollection="Loader2Queue"/>
						</Create>
						<RemoveObjectFromCollection collectionName="ScaleQueue" itemObjectVariable="o" destroyObject="true" />
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="ArrivalAtScaleEvent">
							<Delay>
							  <DiscreteRandomVariable><UniformInt lowerBound="1" upperBound="5" /></DiscreteRandomVariable>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>

			<EnvironmentRule name="ArrivalAtLoaderEventRuleQueueOneShorter">
				<documentation>
					<dc:description>trucks arrive at the loaders and queue1 is shorter</dc:description>
				</documentation>
				<WHEN eventType="ArrivalAtLoaderEvent"/>
				<FOR objectVariable="p" objectName="Loader1Queue" objectType="Collection" />
				<FOR objectVariable="q" objectName="Loader2Queue" objectType="Collection" />
				<IF language="Java">p.size() &lt; q.size()</IF>
				<THEN>
					<UPDATE-ENV>
						<Create>
							<Object type="Truck" addToCollection="Loader1Queue"/>
						</Create>
						<RemoveObjectFromCollection collectionName="ScaleQueue" itemObjectVariable="o" destroyObject="true" />
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="ArrivalAtScaleEvent">
							<Delay>
							  <DiscreteRandomVariable><UniformInt lowerBound="1" upperBound="5" /></DiscreteRandomVariable>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>
			
			<EnvironmentRule name="ArrivalAtScaleEventEventRuleQueueOneShorter">
				<documentation>
					<dc:description>trucks arrive at the scale</dc:description>
				</documentation>
				<WHEN eventType="ArrivalAtScaleEvent"/>
				<FOR objectVariable="p" objectName="Loader1Queue" objectType="Collection" />
				<FOR objectVariable="q" objectName="Loader2Queue" objectType="Collection" />
				<IF language="Java">p.size() &lt; q.size()</IF>
				<THEN>
					<UPDATE-ENV>
						<RemoveObjectFromCollection collectionName="Loader2Queue" itemObjectVariable="o" destroyObject="true" />
						<Create>
							<Object type="Truck" addToCollection="ScaleQueue"/>
						</Create>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="ArrivalAtLoaderEvent">
							<Delay>
							  <DiscreteRandomVariable><UniformInt lowerBound="0" upperBound="99" /></DiscreteRandomVariable>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>

			<EnvironmentRule name="ArrivalAtScaleEventEventRuleQueueTwoShorter">
				<documentation>
					<dc:description>trucks arrive at the scale</dc:description>
				</documentation>
				<WHEN eventType="ArrivalAtScaleEvent"/>
				<FOR objectVariable="p" objectName="Loader1Queue" objectType="Collection" />
				<FOR objectVariable="q" objectName="Loader2Queue" objectType="Collection" />
				<IF language="Java">p.size() &gt;= q.size()</IF>
				<THEN>
					<UPDATE-ENV>
						<RemoveObjectFromCollection collectionName="Loader1Queue" itemObjectVariable="o" destroyObject="true" />
						<Create>
							<Object type="Truck" addToCollection="ScaleQueue"/>
						</Create>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="ArrivalAtLoaderEvent">
							<Delay>
							  <DiscreteRandomVariable><UniformInt lowerBound="0" upperBound="99" /></DiscreteRandomVariable>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>

			<!-- start updating stats -->
			<EnvironmentRule name="CheckBusyEventRuleLoader1Busy">
				<documentation>
					<dc:description>loader 1 is busy</dc:description>
				</documentation>
			  <ON-EACH-SIMULATION-STEP/>
				<FOR objectVariable="q" objectName="Loader1Queue" objectType="Collection" />
				<IF language="Java">q.size() &gt; 0</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateStatisticsVariable variable="busyLoader1">
							<ValueExpr language="Java">SimStatistics.busyLoader1.getValue() +	1</ValueExpr>
						</UpdateStatisticsVariable>
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>
			
			<EnvironmentRule name="CheckBusyEventRuleLoader2Busy">
				<documentation>
					<dc:description>loader 2 is busy</dc:description>
				</documentation>
				<ON-EACH-SIMULATION-STEP/>
				<FOR objectVariable="q" objectName="Loader2Queue" objectType="Collection" />
				<IF language="Java">q.size() &gt; 0</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateStatisticsVariable variable="busyLoader1">
							<ValueExpr language="Java">SimStatistics.busyLoader2.getValue() +	1</ValueExpr>
						</UpdateStatisticsVariable>
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>
			
			<EnvironmentRule name="CheckBusyEventRuleScaleBusy">
				<documentation>
					<dc:description>scale is busy</dc:description>
				</documentation>
				<ON-EACH-SIMULATION-STEP/>
				<FOR objectType="Collection" objectName="ScaleQueue" objectVariable="q" />
				<IF language="Java">q.size() &gt; 0</IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateStatisticsVariable variable="busyScale">
							<ValueExpr language="Java">SimStatistics.busyScale.getValue() + 1</ValueExpr>
						</UpdateStatisticsVariable>
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>
			<!-- end updating stats -->

		</EnvironmentRules>
		
		<Collections>
			<Collection id="1" itemType="Truck" type="FIFO_QUEUE" name="Loader1Queue" />
			<Collection id="2" itemType="Truck" type="FIFO_QUEUE" name="Loader2Queue" />
			<Collection id="3" itemType="Truck" type="FIFO_QUEUE" name="ScaleQueue" />
		</Collections>

	</SimulationModel>


	<InitialState>
		
		<!-- init the queues 
		<Collection id="1" name="Loader1Queue" type="FIFO_QUEUE" itemType="Truck" objectVariable="p" />
		<Collection id="2" name="Loader2Queue" type="FIFO_QUEUE" itemType="Truck" objectVariable="q" />
		<Collection id="3" name="ScaleQueue" type="FIFO_QUEUE" itemType="Truck" objectVariable="s" /> -->
		
		<!-- six trucks so six events -->
		<ExogenousEvent type="StartEvent" occurrenceTime="1"/>

	</InitialState>

</SimulationScenario>
