<?xml version="1.0" standalone="yes"?>
<!--
*************************************************************************************************************
* Agent-Object-Relationship (AOR) Simulation
* Ontologically well-founded and closer-to-reality simulation of complex discrete event scenarios
*
* AOR-JSim v.2
*
* Copyright (C) 2008 AOR Team: Daniel Draeger, Adrian Giurca, Emilian Pascalau, Andreas Post, Marco Pehla,
* Gerd Wagner, Jens Werner, Mircea Diaconescu
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*************************************************************************************************************
-->
<!--
* @author Mircea Diaconescu
* @since July 21, 2009
* @version: 2.0
-->
<project name="AORS OpenGL visualization module" default="build" basedir=".">
	<description>
        This ANT file builds an executeable JAR archive from the OpenGL visualization module
        and copy it to the plugins directory.
    </description>

	<import file="../build.xml" />

	<property name="jar.filename" value="visOpenGLModule.jar" />
	<property name="dist.dir" value="./dist" />

	<property name="class.dir" value="${dist.dir}" />
	<property name="src.dir" value="." />
	<property name="lib.dir" value="./lib" />
	<property name="native.lib.dir" value="./lib/native" />
	<property name="lib.dir" value="${dist.dir}/lib" />
	<property name="native.lib.dir" value="${dist.dir}/lib/native" />
	<property name="include.dir" value="../../../" />
	<property name="modules.dir" value="../../../../modules" />

	<path id="classpath">
		<fileset dir="${aors.lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="clean" description="cleans the project">
		<!-- remove all created dirs/files -->
		<echo message="Cleaning, please wait..." />
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${dist.dir}" />
		</delete>

		<!-- write the message to the property file and delete the old content -->
		<echo file="./properties.xml" append="no">&lt;!-- Warning: please do not edit this file, it is written automatically by the ANT tasks --&gt;</echo>
	</target>

	<target name="compile" depends="compileAORS">
		<echo message="Compile visualization module sources, please wait..." />
		<javac destdir="${class.dir}" classpathref="classpath" debug="true">
			<src path="${include.dir}/aors" />
			<include name="module/visopengl/**" />
			<compilerarg value="-Xlint" />
		</javac>
		<echo message="Visualization sources were compiled with success." />
	</target>

	<target name="createStructure">
		<echo message="Creating the required structure, please wait..." />
		<copy todir="${dist.dir}" overwrite="true">
			<fileset dir=".">
				<filename name="properties.xml" />
			</fileset>
		</copy>

		<mkdir dir="${dist.dir}/${lib.dir}" />
		<copy todir="${dist.dir}/${lib.dir}" overwrite="true">
			<fileset dir="${lib.dir}" includes="jogl.jar,gluegen-rt.jar,nativewindow.jar,newt.jar" />
		</copy>

		<mkdir dir="${dist.dir}/aors/module/visopengl/lang/resources" />
		<copy todir="${dist.dir}/aors/module/visopengl/lang/resources">
			<fileset dir="./lang/resources" includes="*.properties" />
		</copy>


		<echo message="Required structure was created." />
	</target>

	<target name="buildJar">
		<echo message="Build jar file, please wait..." />
		<jar destfile="${dist.dir}/${jarFilename}" basedir="${class.dir}" includes="aors/module/visopengl/**,aors/module/*.class,lib/**, aors/module/visopengl/lang/resources/*.properties,properties.xml">
		</jar>
	</target>

	<target name="copyJarToModulesDir">
		<copy todir="${modules.dir}" overwrite="true">
			<fileset dir="${dist.dir}">
				<filename name="${jarFilename}" />
			</fileset>
		</copy>
	</target>

	<target name="updatePropertyFile">
		<echo message="Create property file content, please wait..." />
		<!-- write the property file headers -->
		<echo file="${dist.dir}/properties.xml" append="no">&lt;!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"&gt;${line.separator}</echo>

		<!-- write the property file content -->
		<echoxml file="${dist.dir}/properties.xml" append="yes">
			<properties>
				<comment>This is the property file for the OpenGL visualization module.</comment>
				<entry key="name">OpenGL visualization.</entry>
				<entry key="gui-title">Visualization</entry>
				<entry key="gui-module-class">aors.module.visopengl.gui.TabVisualizationGL</entry>
				<entry key="base-module-class">aors.module.visopengl.Visualization</entry>
				<entry key="os-version">${os}</entry>
				<entry key="os-bits-version">${osBits}</entry>
			</properties>
		</echoxml>
	</target>

	<target name="build">
		<echo message="Build visualization module: Win23, Win64, Linux32, Linux64..." />
		<antcall target="build_win32" />
		<antcall target="build_win64" />
		<antcall target="build_linux32" />
		<antcall target="build_linux64" />
		<echo message="All versions of visualization module were builded!" />
	</target>

	<target name="build_win32" depends="compile" description="Build the OpenGL visualization module - Windows 32bit version.">
		<antcall target="createStructure" />

		<!-- copy the windows 32 bits libraries -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/32/windows" includes="gluegen-rt.dll,jogl_gl2.dll,nativewindow_awt.dll,jogl_cg.dll,newt.dll,nativewindow_jvm.dll" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="windows" />
			<param name="osBits" value="32" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_win32.jar" />
		</antcall>

		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_win32.jar" />
		</antcall>

		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_win32.jar (Windows 32bits version) was successfully completed." />
	</target>

	<target name="build_linux32" depends="compile" description="Build the OpenGL visualization module - Linux 32bits version.">
		<antcall target="createStructure" />

		<!-- copy the 32 bits libraries -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/32/linux" includes="libgluegen-rt.so,libjogl_gl2.so,libnativewindow_awt.so,libjogl_cg.so,libnativewindow_jvm.so,libnativewindow_x11.so" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="linux" />
			<param name="osBits" value="32" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_linux32.jar" />
		</antcall>
		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_linux32.jar" />
		</antcall>

		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_linux32.jar (Linux 32bits version) was successfully completed." />
	</target>

	<target name="build_mac32" depends="compile" description="Build the OpenGL visualization module - MacOS 32bits version.">
		<antcall target="createStructure" />

		<!-- copy the 32 bits libraries -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/32/mac" includes="" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="mac" />
			<param name="osBits" value="32" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_mac32.jar" />
		</antcall>
		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_mac32.jar" />
		</antcall>

		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_mac32.jar (MacOS 32bits version) was successfully completed." />
	</target>


	<target name="build_win64" depends="compile" description="Build the OpenGL visualization module - Windows 64bits version.">
		<antcall target="createStructure" />

		<!-- copy the 64 bits libraries -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/64/windows" includes="gluegen-rt.dll,jogl_gl2.dll,nativewindow_awt.dll,jogl_cg.dll,newt.dll,nativewindow_jvm.dll" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="windows" />
			<param name="osBits" value="64" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_win64.jar" />
		</antcall>

		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_win64.jar" />
		</antcall>

		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_win64.jar (Windows 64bits version) was successfully completed." />
	</target>

	<target name="build_linux64" depends="compile" description="Build the OpenGL visualization module - Linux 64bits version.">
		<antcall target="createStructure" />

		<!-- copy the 64 bits libs -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/64/linux" includes="libgluegen-rt.so,libjogl_gl2.so,libnativewindow_awt.so,libjogl_cg.so,libnativewindow_jvm.so,libnativewindow_x11.so" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="linux" />
			<param name="osBits" value="64" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_linux64.jar" />
		</antcall>
		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_linux64.jar" />
		</antcall>
		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_linux64.jar (Linux 64bits version) was successfully completed." />
	</target>

	<target name="build_mac64" depends="compile" description="Build the OpenGL visualization module - MacOS 64bits version.">
		<antcall target="createStructure" />

		<!-- copy the 64 bits libs -->
		<mkdir dir="${dist.dir}/${native.lib.dir}" />
		<copy todir="${dist.dir}/${native.lib.dir}" overwrite="true">
			<fileset dir="${native.lib.dir}/64/mac" includes="" />
		</copy>

		<!-- update the property file of the module -->
		<antcall target="updatePropertyFile">
			<param name="os" value="mac" />
			<param name="osBits" value="64" />
		</antcall>

		<antcall target="buildJar">
			<param name="jarFilename" value="visOpenGLModule_mac64.jar" />
		</antcall>
		<antcall target="copyJarToModulesDir">
			<param name="jarFilename" value="visOpenGLModule_mac64.jar" />
		</antcall>
		<antcall target="clean" />

		<echo message="Creation and deploy of visOpenGLModule_mac64.jar (Linux 64bits version) was successfully completed." />
	</target>

</project>
