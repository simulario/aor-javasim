<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:ers="http://aor-simulation.org" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:h="http://www.w3.org/1999/xhtml" targetNamespace="http://aor-simulation.org"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="Views.xsd"/>
	<!-- =================================================================== -->
	<xs:element name="StatisticsUI">
	<!-- =================================================================== -->
		<xs:complexType>
			<xs:sequence>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<xs:element name="StatisticsVariableUI" minOccurs="0" maxOccurs="unbounded">
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="ers:Label"/>
							<xs:element ref="ers:Hint"/>
							<xs:element name="Format" minOccurs="0">
								<xs:complexType>
									<xs:group ref="ers:Units.elemGrp"/>
									<xs:attribute name="decimalPlaces" type="xs:nonNegativeInteger" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="variable" type="ers:CanonicalName" use="required"/>
						<xs:attribute name="comparisonGroup" type="ers:CanonicalName" use="optional">
							<xs:annotation>
								<xs:documentation>Allows to assign a user-defined comparison group name to a variable, such that all variables with this comparison group name will be charted in a single comparison chart.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="showChart" type="xs:boolean" use="optional">
							<xs:annotation>
								<xs:documentation>Allows to specify that the variable's time series should be shown in a chart. It makes only sense for variables that have distinct values at different simulations steps such that their temporal variation is of interest. </xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<xs:element name="FrequencyDistributionChart" minOccurs="0" maxOccurs="unbounded">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
					<xs:annotation>
						<xs:documentation>Shows the relative frequencies of object property values for the population/extension of an object type at the end of a simulation run. For a property of type Float, value intervals have to be defined with the help of the intervalSize attribute.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="objectPropertyStatisticsVariable" type="ers:CanonicalName" use="required">
							<xs:annotation><xs:documentation>Refers to a statistics variable that is bound to an object property as its <h:code>Source</h:code>. </xs:documentation></xs:annotation>
						</xs:attribute>
						<xs:attribute name="minValue" type="xs:double" use="optional"/>
						<xs:attribute name="maxValue" type="xs:double" use="optional"/>
						<xs:attribute name="intervalSize" type="xs:double" use="optional">
							<xs:annotation>
								<xs:documentation>The <h:code>intervalSize</h:code> attribute allows to define a sequence of intervals based on <h:code>minValue</h:code> and <h:code>maxValue</h:code>. E.g., the attribute settings minValue="10" intervalSize="2" maxValue="16" defines the 3 intervals (10,12], (12,14] and (14,16]. </xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="chartType" use="optional">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="BAR"/>
									<xs:enumeration value="PIE"/>
									<xs:enumeration value="PIE3D"/>
									<xs:enumeration value="AREA"/>
									<xs:enumeration value="LINE"/>
									<xs:enumeration value="STEP"/>
									<xs:enumeration value="STEP_AREA"/>
								</xs:restriction>
							</xs:simpleType>							
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:group name="Units.elemGrp">
		<xs:choice>
			<xs:element name="Currency" type="ers:CurrencySymbol" minOccurs="0"/>
			<xs:element name="Length" type="ers:LengthUnit" minOccurs="0"/>
			<xs:element name="Weight" type="ers:WeightUnit" minOccurs="0"/>
			<xs:element name="Time" type="ers:TimeUnit" minOccurs="0"/>
			<xs:element name="Area" type="ers:AreaUnit" minOccurs="0"/>
			<xs:element name="Volume" type="ers:VolumeUnit" minOccurs="0"/>
			<xs:element name="Math" type="ers:MathUnit" minOccurs="0"/>
			<xs:element name="Physics" type="ers:PhysicalUnit" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<!-- =================================================================== -->
	<xs:element name="InitialStateUI">
	<!-- =================================================================== -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:GlobalVariableUI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ers:EventUI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ers:ObjectUI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ers:AgentUI" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="EventUI">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:PropertyUI" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="eventType" type="ers:CanonicalName"/>
			<xs:attributeGroup ref="ers:EntityUI.attributes"/>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:attributeGroup name="EntityUI.attributes">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:attribute name="nmrOfInstances" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:integer">
					<xs:minInclusive value="1"/>
					<xs:maxInclusive value="7"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="ObjectUI">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:PropertyUI" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="objectType" type="ers:CanonicalName"/>
			<xs:attributeGroup ref="ers:EntityUI.attributes"/>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="AgentUI">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:PropertyUI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ers:SelfBeliefPropertyUI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="ers:BeliefEntityUI" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="agentType" type="ers:CanonicalName"/>
			<xs:attributeGroup ref="ers:EntityUI.attributes"/>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="PropertyUI" type="ers:PropertyUI.type"/>
	<xs:element name="SelfBeliefPropertyUI" type="ers:PropertyUI.type"/>
	<xs:element name="BeliefPropertyUI" type="ers:PropertyUI.type"/>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:complexType name="PropertyUI.type">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:sequence>
			<xs:element ref="ers:Label"/>
			<xs:element ref="ers:Hint"/>
			<xs:element ref="ers:Unit" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="property" type="ers:CanonicalName" use="required"/>
		<xs:attributeGroup ref="ers:PropertyAndVariable.attrGrp"/>
	</xs:complexType>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:attributeGroup name="PropertyAndVariable.attrGrp">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:attribute name="readonly" type="xs:boolean" use="optional"/>
		<xs:attribute name="inputFieldLength" use="optional">
			<xs:annotation><xs:documentation>The length of the property input field in cm. </xs:documentation></xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:float">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="widget" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Slider"/>
					<!--<xs:enumeration value="Meter"/>-->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="sliderStepSize" use="optional">
			<xs:annotation><xs:documentation>The step size of a slider. </xs:documentation></xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:float">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="Unit">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:group ref="ers:Units.elemGrp"/>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="Label">
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:Text" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="Hint">
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:Text" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="FlyOver">
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:Text" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="GlobalVariableUI">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:sequence>
					<xs:element ref="ers:Label"/>
					<xs:element ref="ers:Hint"/>
					<xs:element ref="ers:Unit" minOccurs="0"/>
				</xs:sequence>
			</xs:sequence>
			<xs:attribute name="variable" type="ers:CanonicalName" use="required"/>
			<xs:attributeGroup ref="ers:PropertyAndVariable.attrGrp"/>
		</xs:complexType>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:element name="BeliefEntityUI">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ers:BeliefPropertyUI" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="beliefEntityType" type="ers:CanonicalName"/>
			<xs:attributeGroup ref="ers:EntityUI.attributes"/>
		</xs:complexType>
	</xs:element>
	<!-- =================================================================== -->
	<xs:element name="AnimationUI" type="ers:AnimationUI.type"/>
	<!-- =================================================================== -->
	<xs:complexType name="AnimationUI.type">
	  <xs:sequence>
	    <xs:element name="DisplayDescription" minOccurs="0">
	    	<xs:complexType>
	    		<xs:sequence>
	    			<xs:element ref="ers:HtmlText" maxOccurs="unbounded"/>
	    		</xs:sequence>
	    	</xs:complexType>
	    </xs:element>
	    <!-- <xs:element ref="ers:Scales" minOccurs="0"/> -->
	    <xs:element name="Views">
	      <xs:complexType>
	        <xs:sequence>
	          <xs:element ref="ers:SpaceView"  minOccurs="0"/>
	          <xs:element ref="ers:ObjectView" minOccurs="0" maxOccurs="unbounded"/>
	          <xs:element ref="ers:PhysicalObjectView" minOccurs="0" maxOccurs="unbounded"/>
	          <xs:element ref="ers:EventAppearance" minOccurs="0" maxOccurs="unbounded"/>
	        </xs:sequence>
	      </xs:complexType>
	    </xs:element>
	  </xs:sequence>
	  <xs:attribute name="introSoundFile" type="xs:anyURI" use="optional">
	    <xs:annotation><xs:documentation>The sound file can be mp3 or midi, as identified by its extension (.mp3 or .mid). The file is searched first in the project folder under "media/sounds". If the file is not found in this folder, then it is searched in the global media/sounds folder. If still not found, then no sound is played. Note that the path is relative to the media/sounds folder. </xs:documentation></xs:annotation>
	  </xs:attribute>
	</xs:complexType>
  
	<!-- =================================================================== -->
	<xs:element name="ReactionRuleUI">
	<!-- =================================================================== -->
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ActionEventUI" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="ers:PropertyUI" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="actionEventType" type="ers:CanonicalName" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="OutMessageEventUI" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="ers:PropertyUI" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="messageType" type="ers:CanonicalName" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="rule" type="ers:CanonicalName" use="required">
				<xs:annotation><xs:documentation>The name of the affected rule. </xs:documentation></xs:annotation>
			</xs:attribute>
			<xs:attribute name="activationMode" use="optional">
				<xs:annotation><xs:documentation>Defines the way in which a reaction rule is activated or used when the agent is controlled by a human user. In case of "suspend", the rule is not used/executed at all. In case of "entryform", the rule is used in combination with an entry form that allows the user to enter a value for a paramter of the rule's action. In case of "activate", the rule is applied by the simulator, but has to be activated by the user for being fired (by a mouse-click or another kind of activation). </xs:documentation></xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="suspend"/>
						<xs:enumeration value="entryform"/>
						<xs:enumeration value="activate"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- =================================================================== -->
    
  <xs:element name="KeyboardEvent">
    <xs:complexType>
      <xs:attribute name="keyIdentifier" type="ers:KeyIdentifiers.type" use="required"/>
      <xs:attribute name="shiftKey" type="xs:boolean" use="optional"/>
      <xs:attribute name="ctrlKey" type="xs:boolean" use="optional"/>
      <!--									
        <xs:attribute name="altKey" type="xs:boolean" use="optional">
        <xs:annotation><xs:documentation>On Macintosh systems this key modifier corresponds to the Option key modifier. </xs:documentation></xs:annotation>
        </xs:attribute>
      -->									
    </xs:complexType>
  </xs:element>
  
  <xs:simpleType name="KeyIdentifiers.type">
    <xs:annotation><xs:documentation>See http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#keyset-keyidentifiers </xs:documentation></xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Down"/>
      <xs:enumeration value="Left"/>
      <xs:enumeration value="Right"/>
      <xs:enumeration value="Up"/>
      <xs:enumeration value="Enter">
        <xs:annotation><xs:documentation>This key identifier shall be also used for the Return (Macintosh numpad) key. </xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="F1"/>
      <xs:enumeration value="F2"/>
      <xs:enumeration value="F3"/>
      <xs:enumeration value="F4"/>
      <xs:enumeration value="F5"/>
      <xs:enumeration value="F6"/>
      <xs:enumeration value="F7"/>
      <xs:enumeration value="F8"/>
      <xs:enumeration value="F9"/>
      <xs:enumeration value="F10"/>
      <xs:enumeration value="F11"/>
      <xs:enumeration value="F12"/>
      <xs:enumeration value="Insert"/>
      <xs:enumeration value="Del">
        <xs:annotation><xs:documentation>This key identifier shall be also used for the key labeled 'delete' MacOS keyboards when modified by the 'Fn' key.</xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Backspace">
        <xs:annotation><xs:documentation>This key identifier shall be also used for the key labeled 'delete' MacOS keyboards when not modified by the 'Fn' key.</xs:documentation></xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PageDown"/>
      <xs:enumeration value="PageUp"/>
      <xs:enumeration value="Tab"/>
      <xs:enumeration value="Esc"/>
      <xs:enumeration value="Spacebar"/>
      <xs:enumeration value="#"/>
      <xs:enumeration value="+"/>
      <xs:enumeration value="-"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="5"/>
      <xs:enumeration value="6"/>
      <xs:enumeration value="7"/>
      <xs:enumeration value="8"/>
      <xs:enumeration value="9"/>
      <xs:enumeration value="0"/>
      <xs:enumeration value="A"/>
      <xs:enumeration value="B"/>
      <xs:enumeration value="C"/>
      <xs:enumeration value="D"/>
      <xs:enumeration value="E"/>
      <xs:enumeration value="F"/>
      <xs:enumeration value="G"/>
      <xs:enumeration value="H"/>
      <xs:enumeration value="I"/>
      <xs:enumeration value="J"/>
      <xs:enumeration value="K"/>
      <xs:enumeration value="L"/>
      <xs:enumeration value="M"/>
      <xs:enumeration value="N"/>
      <xs:enumeration value="O"/>
      <xs:enumeration value="P"/>
      <xs:enumeration value="Q"/>
      <xs:enumeration value="R"/>
      <xs:enumeration value="S"/>
      <xs:enumeration value="T"/>
      <xs:enumeration value="U"/>
      <xs:enumeration value="V"/>
      <xs:enumeration value="W"/>
      <xs:enumeration value="X"/>
      <xs:enumeration value="Y"/>
      <xs:enumeration value="Z"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:element name="MouseEvent" type="ers:MouseEvent.type"/>
  <xs:complexType name="MouseEvent.type">
    <xs:attribute name="targetType" type="ers:CanonicalName" use="optional"/>
    <xs:attribute name="targetIdRef" type="xs:long" use="optional"/>
    <xs:attribute name="targetName" type="xs:string" use="optional"/>
    <xs:attribute name="mouseEventType" type="ers:MouseEventType.type" use="required"/>
    <xs:attribute name="eventVariable" type="ers:CanonicalName" use="optional"/>
  </xs:complexType>
	
  <xs:simpleType name="MouseEventType.type">
		<xs:annotation><xs:documentation>See http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#events-mouseevents </xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="click"/>
			<xs:enumeration value="dblclick"/>
			<xs:enumeration value="mousedown"/>
			<xs:enumeration value="mouseup"/>
		</xs:restriction>
	</xs:simpleType>

</xs:schema>