<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario version="0.8.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://aor-simulation.org ../../../ext/aorsl/ersl/ERSL-0-8-3.xsd"
	xmlns="http://aor-simulation.org" xmlns:aors="http://aor-simulation.org"
	xmlns:dc="http://purl.org/dc/elements/1.1/" scenarioName="DriveThruRestaurant"
	scenarioTitle="A drive-through restaurant with a menu board, a kitchen and a pickup window"
	simulationManagerDirectory="../../..">
	<SimulationParameters simulationSteps="10000" stepDuration="1" timeUnit="s"/>
	<SimulationModel modelName="DriveThruRestaurant" modelTitle="A drive-through restaurant with a menu board, a kitchen and a pickup window">
		<documentation>
			<dc:created>20090331</dc:created>
			<dc:creator>Oana Nicolae</dc:creator>
			<dc:contributor>Gerd Wagner</dc:contributor>
			<dc:modified>20100228</dc:modified>
			<dc:source>"Introduction to Simulation" by R.G. Ingalls. In: Proceedings of the 2008 Winter Simulation Conference. URL: http://www.informs-sim.org/wsc08papers/005.pdf.</dc:source>
			<aors:description xmlns="http://www.w3.org/1999/xhtml">As a car enters from the street, the driver, who we will call Fred, decides whether or not to get in line. If Fred decides to leave the restaurant, he leaves as a dissatisfied customer. If Fred decides to get in line, then he waits until the menu board is available. At that time, Fred gives the order to the order taker. After the order is taken, then two things occur simultaneously: <ol><li>Fred moves forward if there is room, otherwise he has to wait at the menu board until there is room to move forward.</li><li>The order is sent electronically back to the kitchen where it is prepared as soon as the cook is available.</li></ol> As soon as Fred reaches the pickup window, then he pays and picks up his food, if it is ready. If the food is not ready, then Fred has to wait until his order is prepared.</aors:description>
			<processModelDiagram>DriveThruRestaurant.png</processModelDiagram>
		</documentation>

		<Statistics>
			<Variable name="numberOfCustomers" dataType="Integer" />
			<Variable name="numberOfLostCustomers" dataType="Integer" />		
			<Variable name="revenue" dataType="Float" />
			<Variable name="cumulativeResponseTime" dataType="Float" />
			<Variable name="nrOfDepartures" dataType="Float" />
			<Variable name="meanResponseTime" dataType="Float">
				<Source computeOnlyAtEnd="true">
					<ValueExpr language="Java">SimStatistics.cumulativeResponseTime.getValue() / SimStatistics.nrOfDepartures.getValue()</ValueExpr>
				</Source>
			</Variable>		
			<Variable name="menuBoardUtilization" dataType="Float">
				<Source aggregationFunction="avg">
          <ObjectProperty property="utilization" objectType="MenuBoard" />
				</Source>
			</Variable>		
			<Variable name="kitchenUtilization" dataType="Float">
				<Source aggregationFunction="avg">
					<ObjectProperty property="utilization" objectType="Kitchen" />
				</Source>
			</Variable>	
			<Variable name="pickupWindowUtilization" dataType="Float">
				<Source aggregationFunction="avg">
				  <ObjectProperty property="utilization" objectType="PickupWindow" />
				</Source>
			</Variable>		
			<Variable name="maxLengthOfMBQ" dataType="Integer">
				<Source aggregationFunction="max">
					<ObjectProperty property="lengthOfQueue" objectType="Queue" objectIdRef="6"/>
				</Source>
			</Variable>
			<Variable name="maxLengthOfPWQ" dataType="Integer">
				<Source aggregationFunction="max">
					<ObjectProperty property="lengthOfQueue" objectType="Queue" objectIdRef="7"/>
				</Source>
			</Variable>
		</Statistics>
		<Globals>		
			<!-- =========================================== -->
			<GlobalFunction name="twoDice" resultType="Integer">
				<!-- =========================================== -->
				<Parameter name="factor" type="Integer" />
				<Body language="Java"><![CDATA[
int r1 = Random.uniformInt(1,6);
int r2 = Random.uniformInt(1,6);
	if (r1+r2 <  3)  return (2*factor);      // with probability  0.028
	if (r1+r2 <  4)  return (3*factor);      // with probability  0.056
	if (r1+r2 <  5)  return (4*factor);      // with probability  0.083
	if (r1+r2 <  6)  return (5*factor);      // with probability  0.111
	if (r1+r2 <  7)  return (6*factor);      // with probability  0.139
	if (r1+r2 <  8)  return (7*factor);      // with probability  0.166
	if (r1+r2 <  9)  return (8*factor);      // with probability  0.139
	if (r1+r2 < 10)  return (9*factor);      // with probability  0.111
	if (r1+r2 < 11) return (10*factor);      // with probability  0.083
	if (r1+r2 < 12) return (11*factor);      // with probability  0.056
                  return (12*factor);      // with probability  0.028
		     ]]></Body>
			</GlobalFunction>
		</Globals>
		<EntityTypes>
			<!-- =================================================== -->
			<ExogenousEventType name="CustomerArrival">
				<!-- =================================================== -->
				<Periodicity>
					<ValueExpr language="Java">Global.twoDice(10)</ValueExpr>
				</Periodicity>
			</ExogenousEventType>
			<!-- =================================================== -->
			<CausedEventType name="StartMenuBoardService" />
			<!-- =================================================== -->
			<CausedEventType name="EndMenuBoardService" />
			<!-- =================================================== -->
			<CausedEventType name="EndKitchenService">
				<!-- =================================================== -->
				<ReferenceProperty name="order" type="Order" />
			</CausedEventType>
			<!-- =================================================== -->
			<CausedEventType name="StartPickupWindowService" />
			<!-- =================================================== -->
			<CausedEventType name="EndPickupWindowService" />
			<!-- =================================================== -->
			<ObjectType name="MenuBoard">
				<!-- =================================================== -->
				<Attribute name="maxMenuBoardLineSize" type="Integer" />
				<Attribute name="menuBoardBusy" type="Boolean" />
        <Attribute name="utilization" type="Float" />
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<Function name="randomPizzaType" resultType="Integer">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<documentation>
						<description> The type of the pizza with index from 0 to 5: 0- Pizza Quattro Formaggi 1- Pizza Quattro Stagioni 2- Pizza Capricciosa 3- Pizza Napoletana 4- Pizza Marinara 5- Pizza Margherita </description>
					</documentation>
					<Body language="Java"><![CDATA[
return Random.uniformInt(0,5);
					 ]]></Body>
				</Function>
			</ObjectType>	
			<!-- =================================================== -->
			<ObjectType name="Kitchen">
				<!-- =================================================== -->
				<Attribute name="utilization" type="Float" />
			</ObjectType>		
			<!-- =================================================== -->
			<ObjectType name="PickupWindow">
				<!-- =================================================== -->
				<Attribute name="maxPickupWindowLineSize" type="Integer" />
				<Attribute name="pickupWindowBusy" type="Boolean" />
				<Attribute name="utilization" type="Float" />
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<Function name="pizzaPrice" resultType="Float">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<Parameter name="pizzaType" type="Integer" />
					<Body language="Java"><![CDATA[
double[] price = {8.90, 9.80, 8.50, 7.20, 7.80, 5.20};
	return price[(int)pizzaType];
				]]></Body>
				</Function>
			</ObjectType>		
			<!-- =================================================== -->
			<ObjectType name="Customer">
				<!-- =================================================== -->
				<Attribute name="arrivalTime" type="Integer" />
				<ReferenceProperty name="order" type="Order" />
				<Attribute name="waitingForPWFree" type="Boolean" />
			</ObjectType>		
			<!-- =================================================== -->
			<ObjectType name="Order">
				<!-- =================================================== -->
				<Attribute name="pizzaType" type="Integer" />
				<Attribute name="arrived" type="Boolean" />
			</ObjectType>
			<!-- =================================================== -->
			<ObjectType name="Queue">
				<!-- =================================================== -->
				<Attribute name="lengthOfQueue" type="Integer"/>
			</ObjectType>
		</EntityTypes>
		<EnvironmentRules>
			<!-- ======================================================= -->
			<EnvironmentRule name="CustomerArrival_Rule">
				<!-- ======================================================== -->
				<documentation>
					<description> When a car arrives at the Fast Food Restaurant, and the menu board queue is full, the customer leaves and he is considered a dissatisfied customer. Else, if the menu board queue is not full then the car gets in the waiting line as a new customer. Furthermore, if the menu board service is not busy, a StartMenuBoardService is created. </description>
				</documentation>
				<WHEN eventType="CustomerArrival" eventVariable="evt" />
				<FOR objectVariable="mb" objectType="MenuBoard" objectIdRef="1" />
				<FOR objectVariable="mbq" objectName="MenuBoardQueue" objectType="Collection" objectIdRef="3" />
				<FOR objectVariable="q1" objectType="Queue" objectIdRef="6"/>
				<IF language="Java"><![CDATA[
mbq.size() >= mb.getMaxMenuBoardLineSize()
      ]]></IF>
			<THEN>
				<UPDATE-ENV>
					<UpdateStatisticsVariable variable="numberOfLostCustomers">
						<ValueExpr language="Java">SimStatistics.numberOfLostCustomers.getValue() + 1</ValueExpr>
					</UpdateStatisticsVariable>
					<UpdateObject objectVariable="q1">
						<Slot property="lengthOfQueue">
							<ValueExpr language="Java">mbq.size()</ValueExpr>
						</Slot>
					</UpdateObject>
				</UPDATE-ENV>
			</THEN>
				<ELSE>
					<UPDATE-ENV>
						<Create>
							<Object type="Customer" name="customer" addToCollection="MenuBoardQueue">
								<Slot property="arrivalTime">
									<ValueExpr language="Java">evt.getOccurrenceTime()</ValueExpr>
								</Slot>
							</Object>
						</Create>
						<UpdateObject objectVariable="q1">
							<Slot property="lengthOfQueue">
								<ValueExpr language="Java">mbq.size()</ValueExpr>
							</Slot>
						</UpdateObject>
						<UpdateStatisticsVariable variable="numberOfCustomers">
							<ValueExpr language="Java"><![CDATA[
SimStatistics.numberOfCustomers.getValue() + 1								
								]]></ValueExpr>
						</UpdateStatisticsVariable>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="StartMenuBoardService">
							<Condition language="Java"><![CDATA[
! mb.isMenuBoardBusy()
						]]></Condition>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</ELSE>				
			</EnvironmentRule>
			<!-- ================================================================ -->
			<EnvironmentRule name="StartMenuBoardService_Rule">
				<!-- ================================================================ -->
				<documentation>
					<description> When the MenuBoard Service starts, the menuBoardBusy variable is set to true, an order object with a random pizza type is created and assigned to the customer being served.We then schedule the EndMenuBoardService event with appropriate delay and also the EndKitchenService event with appropriate delay for this order. </description>
				</documentation>
				<WHEN eventType="StartMenuBoardService"/>
				<FOR objectVariable="mb" objectType="MenuBoard" objectIdRef="1" />
				<FOR objectVariable="k" objectType="Kitchen" />
				<FOR objectVariable="mbq" objectType="Collection" objectName="MenuBoardQueue"  objectIdRef="3"/>
				<FOR objectVariable="cust" objectType="Customer">
					<ObjectRef language="Java">mbq.getItem()</ObjectRef>
				</FOR>
				<FOR dataVariable="serviceTimeMB" dataType="Integer">
					<ValueExpr language="Java">Global.twoDice(10)</ValueExpr>
				</FOR>
				<FOR dataVariable="serviceTimeK" dataType="Integer">
					<ValueExpr language="Java">Global.twoDice(8)</ValueExpr>
				</FOR>
				<DO>
					<UPDATE-ENV>
						<Create>
							<Object type="Order" objectVariable="ord">
								<Slot property="pizzaType">
									<ValueExpr language="Java">mb.randomPizzaType()</ValueExpr>
								</Slot>
								<Slot property="arrived" value="false"/>
							</Object>
						</Create>
						<UpdateObject objectVariable="cust">
							<Slot property="order">
								<ValueExpr language="Java">ord</ValueExpr>
							</Slot>
						</UpdateObject>
						<UpdateObject objectVariable="mb">
							<Slot property="menuBoardBusy" value="true"/>
							<Slot property="utilization">
								<ValueExpr language="Java">serviceTimeMB</ValueExpr>
							</Slot>
						</UpdateObject>
			      <UpdateObject objectVariable="k">
			      	<Slot property="utilization">
			      		<ValueExpr language="Java">serviceTimeK</ValueExpr>
			      	</Slot>
			      </UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="EndMenuBoardService">
							<Delay>
								<ValueExpr language="Java">serviceTimeMB</ValueExpr>
							</Delay>
						</CausedEventExpr>
						<CausedEventExpr eventType="EndKitchenService">
							<Delay>
								<ValueExpr language="Java">serviceTimeK</ValueExpr>
							</Delay>
							<Slot property="order">
								<ValueExpr language="Java">ord</ValueExpr>
							</Slot>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>		
			<!-- ============================================================================ -->
			<EnvironmentRule name="EndMenuBoardServiceWhenPickupWindowServiceQueueNotFull_Rule">
				<!-- ============================================================================ -->
				<documentation>
					<description>When a menu board service ends and the pickup window service queue is not full, then the current customer moves forward. Furthermore, if there are no more customers in the menu board queue, then the menu board is no longer busy. Otherwise, a new StartMenuBoardService event is created for serving the next customer. </description>
				</documentation>
				<WHEN eventType="EndMenuBoardService" eventVariable="evt" />
				<FOR objectVariable="mb" objectType="MenuBoard" objectIdRef="1" />
				<FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
				<FOR objectVariable="mbq" objectName="MenuBoardQueue" objectType="Collection" objectIdRef="3" />
				<FOR objectVariable="pwq" objectName="PickupWindowQueue" objectType="Collection" objectIdRef="4" />
				<FOR objectVariable="q1" objectType="Queue" objectIdRef="6"/>
				<FOR objectVariable="q2" objectType="Queue" objectIdRef="7"/>
				<FOR objectVariable="cust" objectType="Customer">
					<ObjectRef language="Java">mbq.getItem()</ObjectRef>
				</FOR>
				<IF language="Java"><![CDATA[
pwq.size() < pw.getMaxPickupWindowLineSize()
        ]]></IF>
				<THEN>
					<UPDATE-ENV>
						<RemoveObjectFromCollection collectionName="MenuBoardQueue" />
						<AddObjectToCollection collectionName="PickupWindowQueue" itemObjectVariable="cust" />
						<UpdateObject objectVariable="mb">
							<Slot property="menuBoardBusy">
								<ValueExpr language="Java">mbq.size() == 0 ? false : true</ValueExpr>
							</Slot>
						</UpdateObject>
						<UpdateObject objectVariable="q1">
							<Slot property="lengthOfQueue">
								<ValueExpr language="Java">mbq.size()</ValueExpr>
							</Slot>
						</UpdateObject>
						<UpdateObject objectVariable="q2">
							<Slot property="lengthOfQueue">
								<ValueExpr language="Java">pwq.size()</ValueExpr>
							</Slot>
						</UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="StartMenuBoardService">
							<Condition language="Java"><![CDATA[
mbq.size() > 0
	            ]]></Condition>
						</CausedEventExpr>
						<CausedEventExpr eventType="StartPickupWindowService">
							<Condition language="Java"><![CDATA[
! pw.isPickupWindowBusy() 
	          ]]></Condition>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>	
			<!-- ==================================================================== -->
			<EnvironmentRule name="EndMenuBoardServiceWhenPickupWindowQueueFull_Rule">
				<!-- ================================================================== -->
				<documentation>
					<description> When a menu board service ends, but the PickupWindowQueue is full, the customer cannot move forward. We just update the customer attribute.</description>
				</documentation>
				<WHEN eventType="EndMenuBoardService" />
				<FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
				<FOR objectVariable="mbq" objectName="MenuBoardQueue" objectType="Collection" objectIdRef="3" />
				<FOR objectVariable="pwq" objectName="PickupWindowQueue" objectType="Collection" objectIdRef="4" />
				<FOR objectVariable="q2" objectType="Queue" objectIdRef="7"/>
				<FOR objectVariable="cust" objectType="Customer">
					<ObjectRef language="Java">mbq.getItem()</ObjectRef>
				</FOR>
				<IF language="Java"><![CDATA[
pwq.size() >= pw.getMaxPickupWindowLineSize() && cust.getOrder() != null
         ]]></IF>
			<THEN>
				<UPDATE-ENV>
					<UpdateObject objectVariable="cust">
						<Slot property="waitingForPWFree" value="true" />
					</UpdateObject>
					<UpdateObject objectVariable="q2">
						<Slot property="lengthOfQueue">
							<ValueExpr language="Java">pwq.size()</ValueExpr>
						</Slot>
					</UpdateObject>
				</UPDATE-ENV>
			</THEN>
			</EnvironmentRule>
			<!-- ========================================================================== -->
			<EnvironmentRule name="StartPickupWindowService_Rule">
				<!-- ======================================================================-->
				<documentation>
					<description> On StartPickupWindowService, the pickupWindowBusy variable is set to true, and, when the customer's oder has laready arrived, an EndPickupWindowService event is created with appropriate delay. </description>
				</documentation>
				<WHEN eventType="StartPickupWindowService" />
				<FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
				<FOR objectVariable="pwq" objectName="PickupWindowQueue" objectType="Collection" objectIdRef="4" />
				<FOR dataVariable="serviceTimePW" dataType="Integer">
					<ValueExpr language="Java">Global.twoDice(10)</ValueExpr>
				</FOR>
			<DO>
				<UPDATE-ENV>
					<UpdateObject objectVariable="pw">
						<Slot property="pickupWindowBusy" value="true" />
						<Slot property="utilization">
							<ValueExpr language="Java"><![CDATA[
serviceTimePW
							]]></ValueExpr>
						</Slot>
					</UpdateObject>
				</UPDATE-ENV>
				<SCHEDULE-EVT>
					<CausedEventExpr eventType="EndPickupWindowService">
						<Condition language="Java"><![CDATA[
pwq.size() > 0 && pwq.getItem()!= null && pwq.getItem().getOrder()!= null && pwq.getItem().getOrder().isArrived()
            ]]></Condition>
						<Delay>
							<ValueExpr language="Java">serviceTimePW</ValueExpr>
						</Delay>
					</CausedEventExpr>
				</SCHEDULE-EVT>
			</DO>
			</EnvironmentRule>
			<!-- ============================================= -->
			<EnvironmentRule name="EndKitchenService_Rule">
				<!-- =========================================== -->
				<documentation>
					<description> On EndKitchenService, the order's arrived flag is set to true. Furthermore, if the arrived order is the order of the customer at the pickup window, then an EndPickupWindowService event is scheduled. </description>
				</documentation>
				<WHEN eventType="EndKitchenService" eventVariable="evt" />
				<FOR objectVariable="mb" objectType="MenuBoard"  objectIdRef="1" />
				<FOR objectVariable="pw" objectType="PickupWindow"  objectIdRef="2" />
				<FOR objectVariable="pwq" objectType="Collection" objectName="PickupWindowQueue" objectIdRef="4" />
				<FOR objectVariable="ord" objectType="Order">
					<ObjectRef language="Java">evt.getOrder()</ObjectRef>
				</FOR>
				<FOR dataVariable="serviceTimePW" dataType="Integer">
					<ValueExpr language="Java">Global.twoDice(10)</ValueExpr>
				</FOR>
				<DO>
					<UPDATE-ENV>
						<UpdateObject objectVariable="ord">
							<Slot property="arrived" value="true"/>
						</UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="EndPickupWindowService">
							<Condition language="Java"><![CDATA[ 
pwq.size() > 0 && pwq.getItem().getOrder().getId() == ord.getId()
            ]]></Condition>
							<Delay>
								<ValueExpr language="Java">serviceTimePW</ValueExpr>
							</Delay>
						</CausedEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>			
			<!-- ================================================================ -->
			<EnvironmentRule name="EndPickupWindowServiceWhenQueueNotFull_Rule">
				<!-- ============================================================== -->
				<documentation>
					<description> On EndPickupWindowService, when the queue is not full, the current customer object is removed from the queue and destroyed. Furthermore, if the queue is empty, the pickup window is no longer busy. Otherwise, a new StartPickupWindowService is created. </description>
				</documentation>
				<WHEN eventType="EndPickupWindowService" eventVariable="evt" />
				<FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
				<FOR objectVariable="pwq" objectType="Collection" objectName="PickupWindowQueue" objectIdRef="4" />
				<FOR objectVariable="q2" objectType="Queue" objectIdRef="7"/>
				<FOR objectVariable="cust" objectType="Customer">
					<ObjectRef language="Java">pwq.getItem()</ObjectRef>
				</FOR>
				<IF language="Java"><![CDATA[
pwq.size() < pw.getMaxPickupWindowLineSize() 
       ]]></IF>
			<THEN>
				<UPDATE-ENV>
					<UpdateObject objectVariable="pw">
						<Slot property="pickupWindowBusy">
							<ValueExpr language="Java">pwq.size() == 1 ? false : true</ValueExpr>
						</Slot>
					</UpdateObject>
					<UpdateObject objectVariable="q2">
						<Slot property="lengthOfQueue">
							<ValueExpr language="Java">pwq.size()</ValueExpr>
						</Slot>
					</UpdateObject>
					<UpdateStatisticsVariable variable="nrOfDepartures">
						<ValueExpr language="Java">SimStatistics.nrOfDepartures.getValue() + 1</ValueExpr>
					</UpdateStatisticsVariable>
					<UpdateStatisticsVariable variable="cumulativeResponseTime">
						<ValueExpr language="Java"><![CDATA[
SimStatistics.cumulativeResponseTime.getValue() + evt.getOccurrenceTime() - cust.getArrivalTime()							
							]]></ValueExpr>
					</UpdateStatisticsVariable>
					<UpdateStatisticsVariable variable="revenue">
						<ValueExpr language="Java"><![CDATA[
SimStatistics.revenue.getValue() + pw.pizzaPrice((int) pwq.getItem().getOrder().getPizzaType())
              ]]></ValueExpr>
					</UpdateStatisticsVariable>
					<RemoveObjectFromCollection collectionName="PickupWindowQueue" destroyObject="true" />
				</UPDATE-ENV>
				<SCHEDULE-EVT>
					<CausedEventExpr eventType="StartPickupWindowService">
						<Condition language="Java">pwq.size() > 0</Condition>
					</CausedEventExpr>
				</SCHEDULE-EVT>
			</THEN>
			</EnvironmentRule>		
			<!-- ============================================================= -->
			<EnvironmentRule name="EndPickupWindowServiceWhenQueueFull_Rule">
				<!-- =========================================================== -->
				<documentation>
					<description>On EndPickupWindowService, when the queue is full, the current pickup window service customer object is removed from the queue (and destroyed), and the current menu board service customer is moved forward to the pickup window queue. Furthermore, a new StartMenuBoardService event and a new StartPickupWindowService event is created. </description>
				</documentation>
				<WHEN eventType="EndPickupWindowService" eventVariable="evt" />
				<FOR objectVariable="mb" objectType="MenuBoard" objectIdRef="1" />
				<FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
				<FOR objectVariable="mbq" objectName="MenuBoardQueue" objectType="Collection" objectIdRef="3" />
				<FOR objectVariable="pwq" objectName="PickupWindowQueue" objectType="Collection" objectIdRef="4" />
				<FOR objectVariable="q2" objectType="Queue" objectIdRef="7"/>
				<IF language="Java"><![CDATA[
pwq.size() == pw.getMaxPickupWindowLineSize() 
          ]]></IF>
				<THEN>
					<UPDATE-ENV>
						<RemoveObjectFromCollection collectionName="PickupWindowQueue" destroyObject="true"  />
						<UpdateStatisticsVariable variable="nrOfDepartures">
							<ValueExpr language="Java">SimStatistics.nrOfDepartures.getValue() + 1</ValueExpr>
						</UpdateStatisticsVariable>
						<UpdateStatisticsVariable variable="cumulativeResponseTime">
							<ValueExpr language="Java"><![CDATA[
SimStatistics.cumulativeResponseTime.getValue() + evt.getOccurrenceTime() - pwq.getItem().getArrivalTime()
              ]]></ValueExpr>
						</UpdateStatisticsVariable>				
						<UpdateStatisticsVariable variable="revenue">
							<ValueExpr language="Java"><![CDATA[
SimStatistics.revenue.getValue() + pw.pizzaPrice((int) pwq.getItem().getOrder().getPizzaType())
              ]]></ValueExpr>
						</UpdateStatisticsVariable>
						<UpdateObject objectVariable="q2">
							<Slot property="lengthOfQueue">
								<ValueExpr language="Java">pwq.size()</ValueExpr>
							</Slot>
						</UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<CausedEventExpr eventType="EndMenuBoardService">
							<Condition language="Java"><![CDATA[
(mbq.size() > 0) && (mbq.getItem() != null) && (mbq.getItem().getOrder() != null) && (mbq.getItem().isWaitingForPWFree())
             ]]></Condition>
						</CausedEventExpr>
						<CausedEventExpr eventType="StartPickupWindowService"/>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>
		</EnvironmentRules>
		<Collections>
			<Collection itemType="Customer" type="FIFO_QUEUE" name="MenuBoardQueue" id="3" />
			<Collection itemType="Customer" type="FIFO_QUEUE" name="PickupWindowQueue" id="4" />
		</Collections>	
	</SimulationModel>
	<!-- =================================== -->
	<InitialState>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<Object type="MenuBoard" name="MB" id="1">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<Slot property="menuBoardBusy" value="false" />
			<Slot property="maxMenuBoardLineSize" value="5" />
			<Slot property="menuBoardUtilization" value="0" />
		</Object> 	
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<Object type="Kitchen" name="K" id="5">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<Slot property="kitchenUtilization" value="0" />
		</Object>	
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<Object type="PickupWindow" name="PW" id="2">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<Slot property="pickupWindowBusy" value="false" />
			<Slot property="maxPickupWindowLineSize" value="5" />
			<Slot property="pickupWindowUtilization" value="0" />
		</Object>	
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<Object type="Queue" id="6" name="MBQueue">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<Slot property="lengthOfQueue" value="0"/>
		</Object>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<Object type="Queue" id="7" name="PWQueue">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<Slot property="lengthOfQueue" value="0"/>
		</Object>
		<ExogenousEvent type="CustomerArrival" occurrenceTime="1" />	
	</InitialState>
	<!-- ================ -->
	<UserInterface>
	<!-- ================ -->
		<StatisticsUI>
			<StatisticsVariableUI variable="numberOfCustomers">
				<Label>
					<Text xml:lang="en">Number of customers</Text>
					<Text xml:lang="de">Anzahl Kunden</Text>
					<Text xml:lang="fr">Nombre de clients</Text>
					<Text xml:lang="es">Numero de clientes</Text>
					<Text xml:lang="ro">Numar clienti</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">How many customers have entered the restaurant?</Text>
					<Text xml:lang="de">Wieviele Kunden haben das Restaurant betreten?</Text>
					<Text xml:lang="fr">Combien de clients sont entres dans le restaurant?</Text>
					<Text xml:lang="es">Cuantos clientes han entrado en el restaurante?</Text>
					<Text xml:lang="ro">Cati clienti are restaurantul?</Text>
				</Hint>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="numberOfLostCustomers">
				<Label>
					<Text xml:lang="en">Lost customers</Text>
					<Text xml:lang="de">Entgangene Kunden</Text>
					<Text xml:lang="fr">Nombre de clients perdus</Text>
					<Text xml:lang="es">Numero de clientes que son perdidos</Text>
					<Text xml:lang="ro">Clienti pierduti</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">How many customers have left because the line was too long?</Text>
					<Text xml:lang="de">Wieviele Kunden sind weggegangen, weil die Warteschlange zu lang war?</Text>
					<Text xml:lang="fr">Combien de clients ont quitte le restaurant parce que la queue ete trop longue?</Text>
					<Text xml:lang="es">Cuantos clientes se han ido porque la linea es demasiado largo?</Text>
					<Text xml:lang="ro">Cati clienti a pierdut restaurantul?</Text>
				</Hint>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="revenue">
				<Label>
					<Text xml:lang="en">Revenue</Text>
					<Text xml:lang="de">Umsatz</Text>
					<Text xml:lang="fr">Chiffre d'affaires</Text>	
					<Text xml:lang="es">Volumen de negocios</Text>
					<Text xml:lang="ro">Cifra de afaceri</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">How much revenue did the restaurant make?</Text>
					<Text xml:lang="de">Wieviel Umsatz hat das Restaurant gemacht?</Text>
					<Text xml:lang="fr">Quel est le chiffre d'affaires du restaurant?</Text>
					<Text xml:lang="es">Cuál es el volumen de negocios del restaurante?</Text>
					<Text xml:lang="ro">Care este cifra de afaceri a restaurantului?</Text>
				</Hint>
				<Format decimalPlaces="2">
					<Currency>EUR(&#8364;)</Currency>
				</Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="meanResponseTime">
				<Label>
					<Text xml:lang="en">Mean response time</Text>
					<Text xml:lang="de">Durchlaufzeit</Text>
					<Text xml:lang="fr">Le temps de réponse moyen</Text>
					<Text xml:lang="es">La media de tiempo de respuesta</Text>
					<Text xml:lang="ro">Timpul mediu de raspuns</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the average lenght of time the customer spends in the restaurant?</Text>
					<Text xml:lang="de">Wie viel Zeit verbringt ein Kunde durchschnittlich im Restaurant?</Text>
					<Text xml:lang="fr">Quel est le temps moyen passé par le client dans le restaurant?</Text>
					<Text xml:lang="es">Cuál es el tiempo medio empleado por el cliente en el restaurante?</Text>
					<Text xml:lang="ro">Care este durata medie de timp petrecuta de client in restaurant?</Text>
				</Hint>
				<Format decimalPlaces="1"><Time>s</Time></Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="menuBoardUtilization">
				<Label>
					<Text xml:lang="en">Menu board utilization</Text>
					<Text xml:lang="de">Auftragsannahme-Nutzung</Text>
					<Text xml:lang="fr">Utilisation du service pour la demande de nourriture</Text>
					<Text xml:lang="es">El uso del servicio de recepcion de pedidos comidas</Text>
					<Text xml:lang="ro">Utilizarea serviciului de preluare comenzi</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the utilization of the restaurant's menu board (order taking service)?</Text>
					<Text xml:lang="de">Wie hoch ist der Nutzungsgrad der Auftragsannahme?</Text>
					<Text xml:lang="fr">Quel est le temps moyen de l'utilisation du service pour la demande de nourriture?</Text>
					<Text xml:lang="es">Cuál es el tiempo medio empleado por el uso del servicio de recepcion de pedidos comidas?</Text>
					<Text xml:lang="ro">Care este timpul mediu de utilizare a serviciului de preluare comenzi?</Text>
				</Hint>
				<Format decimalPlaces="1"><Math>%</Math></Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="kitchenUtilization">
				<Label>
					<Text xml:lang="en">Kitchen utilization</Text>
					<Text xml:lang="de">Küchen-Nutzung</Text>
					<Text xml:lang="fr">L'utilisation de la cuisine</Text>
					<Text xml:lang="es">Utilización de la cocina</Text>
					<Text xml:lang="ro">Utilizare bucatarie</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the utilization of the kitchen?</Text>
					<Text xml:lang="de">Wie hoch ist der Nutzungsgrad der Küche?</Text>
					<Text xml:lang="fr">Quel est le temps moyen de l'utilisation de la cuisine?</Text>
					<Text xml:lang="es">Cuál es el tiempo medio empleado por el uso del servicio de cucina?</Text>
					<Text xml:lang="ro">Care este timpul mediu de utilizare a bucatariei?</Text>
				</Hint>
				<Format decimalPlaces="1"><Math>%</Math></Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="pickupWindowUtilization">
				<Label>
					<Text xml:lang="en">Pickup window utilization</Text>
					<Text xml:lang="de">Ausgabefenster-Nutzung</Text>
					<Text xml:lang="fr">Utilisation du distributeur de nourriture</Text>
					<Text xml:lang="es">El uso del servicio de entrega de comidas</Text>
					<Text xml:lang="ro">Utilizarea serviciului de distributie comenzi</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the utilization of the pickup window?</Text>
					<Text xml:lang="de">Wie hoch ist der Nutzungsgrad des Ausgabefensters?</Text>
					<Text xml:lang="fr">Quel est le temps moyen de l'utilisation du service pour la distribution de nourriture?</Text>
					<Text xml:lang="es">Cuál es el tiempo medio empleado por el uso del servicio para entrega de comidas?</Text>
					<Text xml:lang="ro">Care este timpul mediu de utilizare a serviciului de distributie comenzi?</Text>
				</Hint>
				<Format decimalPlaces="1"><Math>%</Math></Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="maxLengthOfMBQ">
				<Label>
					<Text xml:lang="en">Maximum length of menu board queue</Text>
					<Text xml:lang="de">Durchschnittliche Länge der Auftragsannahme-Warteschlange</Text>
					<Text xml:lang="fr">Dimension maximale de la queue pour la demande de nourriture</Text>
					<Text xml:lang="es">Maximo longitud de cola para recepcion de pedidos comidas</Text>
					<Text xml:lang="ro">Dimensiunea maxima a listei de asteptare pentru serviciul de preluare comenzi</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the maximum length of the menu board queue?</Text>
					<Text xml:lang="de">Was ist die durchschnittliche Länge der Auftragsannahme-Warteschlange?</Text>
					<Text xml:lang="fr">Quelle est la dimension maximale de la queue pour la demande de nourriture?</Text>
					<Text xml:lang="es">Cual es el tamaño maximo de la cola para entrega de comidas?</Text>
					<Text xml:lang="ro">Care este dimensiunea maxima a listei de asteptare pentru serviciul de preluare comenzi?</Text>
				</Hint>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="maxLengthOfPWQ">
				<Label>
					<Text xml:lang="en">Maximum length of pickup window queue</Text>
					<Text xml:lang="de">Durchschnittliche Länge der Ausgabefenster-Warteschlange</Text>
					<Text xml:lang="fr">Dimension maximale de la queue pour la distribution de nourriture</Text>
					<Text xml:lang="es">Maximo longitud de cola para entrega de comidas</Text>
					<Text xml:lang="ro">Dimensiunea maxima a listei de asteptare pentru serviciul de distributie comenzi</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the maximum length of the pickup window queue?</Text>
					<Text xml:lang="de">Was ist die durchschnittliche Länge der Ausgabefenster-Warteschlange?</Text>
					<Text xml:lang="fr">Quelle est la dimension maximale de la queue pour la distribution de nourriture?</Text>
					<Text xml:lang="es">Cual es el tamaño maximo de la cola para entrega de comidas?</Text>
					<Text xml:lang="ro">Care este dimensiunea maxima a listei de asteptare pentru serviciul de distributie comenzi?</Text>
				</Hint>
			</StatisticsVariableUI>
		</StatisticsUI>
		<!-- ================================================== -->
		<AnimationUI>
			<!-- ================================================== -->
			<Views>
				<SpaceView>
					<TwoDimensionalSpaceView2D backgroundColor="darkgrey"/>
				</SpaceView>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<ObjectView objectType="MenuBoard">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<Shape2D x="600px" y="250px">
						<Rectangle fill="green" height="50" width="50" stroke="black" strokeWidth="10">
							<ShapePropertyMap shapeProperty="fill" property="menuBoardBusy" mapType="equalityCaseWise" v0="green" a0="false" a1="true" v1="red"/>
						</Rectangle>
					</Shape2D>
					<DisplayInfo content="Menu Board" />
				</ObjectView>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<ObjectView objectType="PickupWindow">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<Shape2D x="250px" y="250px">
						<Rectangle fill="green" width="50" height="50" stroke="black" strokeWidth="10">
							<ShapePropertyMap shapeProperty="fill" property="pickupWindowBusy" mapType="equalityCaseWise" v0="green" a0="false" a1="true" v1="red"/>
						</Rectangle>
					</Shape2D>
					<DisplayInfo content="Pickup Window" />
				</ObjectView>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<ObjectView objectType="Queue" objectIdRef="7">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<Shape2D x="225px" y="300px">
						<Rectangle positioning="LeftCenter" fill="yellow" height="10" width="1" stroke="black" strokeWidth="2">
							<ShapePropertyMap shapeProperty="width" property="lengthOfQueue" mapType="polynomial" a0="0" a1="50"/>
						</Rectangle>
					</Shape2D>
					<DisplayInfo content="customers"  property="lengthOfQueue"/>
				</ObjectView>
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
				<ObjectView objectType="Queue" objectIdRef="6">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
					<Shape2D x="575px" y="300px">
						<Rectangle positioning="LeftCenter" fill="yellow" height="10" width="1" stroke="black" strokeWidth="2">
							<ShapePropertyMap shapeProperty="width" property="lengthOfQueue" mapType="polynomial" a0="0" a1="50"/>
						</Rectangle>
					</Shape2D>
					<DisplayInfo content="customers" property="lengthOfQueue" />
				</ObjectView>
			</Views>
		</AnimationUI>
	</UserInterface>
</SimulationScenario>
