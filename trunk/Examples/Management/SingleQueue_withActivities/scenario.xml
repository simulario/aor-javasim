<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://aor-simulation.org ../../../ext/aorsl/AORSL-0-8-3.xsd"
	xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://aor-simulation.org"
	xmlns:aors="http://aor-simulation.org" version="0.8.3"
	scenarioName="SingleServiceQueue_withActivity"
	scenarioTitle="A single service queue with an activity."
	simulationManagerDirectory="../../..">
	
	<SimulationParameters simulationSteps="600" stepDuration="1" timeUnit="min"/>
	<SimulationModel modelName="SingleServiceQueue_withActivity" modelTitle="A single service queue with service utilization and maximum queue length statistics and with an activity.">	
		<documentation>
			<dc:creator>Gerd Wagner</dc:creator>
			<dc:created>20081001</dc:created>
			<dc:source>SingleServiceQueue</dc:source>
			<dc:contributor>Jens Werner</dc:contributor>
			<dc:modified>20100104</dc:modified>
			<dc:description>Customers arrive at random times at a service desk where they have to wait in a queue when the service desk is busy. The time between two customer arrivals is uniformly distributed between 1 and 8 minutes. The times for completing a service vary from 1 to 6 minutes, with probabilities 0.1, 0.2, 0.3, 0.25, 0.1, 0.05, respectively. Two statistics are to be collected: mean response time (length of time a customer spends in the system) and mean proportion of customers who spend 5 or more minutes in the system (the latter is not yet implemented). An arriving customer is represented by a newly generated object, which is destryoed again, when this customer leaves the system. The customer in service is represented by the first/topmost item in the First-In-First-Out queue, while the remaining items of the queue represent the waiting line.</dc:description>
			<processModelDiagram>BPMN-diagram.png</processModelDiagram>
		</documentation>		
		<Statistics>
			<Variable name="serviceDeskUtilization" dataType="Float">
				<Source>
					<ResourceUtilization activityType="PerformService" resourceObjectType="ServiceDesk" />
				</Source>
			</Variable>
			<Variable name="maxQueueLength" dataType="Integer">
				<Source aggregationFunction="max">
					<ObjectProperty property="queueLength" objectType="CustomerQueue" />
				</Source>
			</Variable>
		</Statistics>	
		<EntityTypes>
			<!-- ================================= -->
			<ExogenousEventType name="Arrival">
				<!-- =============================== -->
				<Periodicity>
					<DiscreteRandomVariable>
						<UniformInt lowerBound="1" upperBound="8" />
					</DiscreteRandomVariable>
				</Periodicity>
			</ExogenousEventType>			
			<!-- ======================================================== -->
			<ActivityType name="PerformService">
				<!-- ====================================================== -->
				<FOR objectVariable="sd" objectType="ServiceDesk" objectIdRef="2"/>
				<Duration>
					<ValueExpr language="Java">sd.randomServiceTime()</ValueExpr>
				</Duration>
				<ResourceRef language="Java">sd</ResourceRef>
				<ActivityStartEffect>
					<UpdateObject objectVariable="sd">
						<Slot property="serviceDeskBusy" value="true"/>
					</UpdateObject>
				</ActivityStartEffect>
				<ActivityEndEffect>
					<UpdateObject objectVariable="sd">
						<Slot property="serviceDeskBusy" value="false"/>
					</UpdateObject>
				</ActivityEndEffect>
			</ActivityType>	
			<!-- ====================================== -->
			<ObjectType name="CustomerQueue">
				<!-- ==================================== -->
				<Attribute name="queueLength" type="Integer"/>
			</ObjectType>	
			<!-- ====================================== -->
			<ObjectType name="ServiceDesk">
				<!-- ==================================== -->
				<Attribute name="serviceDeskBusy" type="Boolean"/>
				<Function name="randomServiceTime" resultType="Integer">
					<Body language="Java"><![CDATA[
int r = Random.uniformInt(0,99);
      if (r<10) return 1; 	// with probability 0.10
 else if (r<30) return 2;		// with probability 0.20
 else if (r<60) return 3;		// with probability 0.30
 else if (r<85) return 4;		// with probability 0.25
 else if (r<95) return 5;		// with probability 0.10
					 else return 6;		// with probability 0.05
					]]>
					</Body>
				</Function>
			</ObjectType>
		</EntityTypes>
		<EnvironmentRules>
			<!-- =================================================== -->
			<EnvironmentRule name="Arrival_Rule">
				<!-- =================================================== -->
				<documentation>
					<description>On CustomerArrival, if the service desk is busy, the customer has to wait in a line, so the queue length is increased by 1. Otherwise, the customer is going to be serviced and hence the PerformService activity is scheduled. </description>
				</documentation>
				<WHEN eventType="Arrival"/>
				<FOR objectVariable="cq" objectType="CustomerQueue" objectIdRef="1"/>
				<FOR objectVariable="sd" objectType="ServiceDesk" objectIdRef="2"/>
				<IF language="Java"><![CDATA[
!sd.isServiceDeskBusy() && cq.getQueueLength() == 1
				]]></IF>
				<THEN>
					<SCHEDULE-EVT>
						<ActivityStartEventExpr activityType="PerformService"/>
					</SCHEDULE-EVT>
				</THEN>
				<ELSE>
					<UPDATE-ENV>
						<UpdateObject objectVariable="cq">
							<Increment property="queueLength" value="1" />
						</UpdateObject>
					</UPDATE-ENV>
				</ELSE>
			</EnvironmentRule>		
			<!-- =================================================== -->
			<EnvironmentRule name="Departure_Rule">
				<!-- =================================================== -->
				<documentation>
					<description>On CustomerDeparture, when the queue is empty, the service desk is no longer busy. Otherwise, the next customer will be serviced, so a new future Departure event is created (with a delay given by the random service time), and the queue size is decreased by 1.</description>
				</documentation>
				<WHEN eventType="ActivityEndEvent" eventVariable="e" activityType="PerformService" />
				<FOR objectVariable="cq" objectType="CustomerQueue" objectIdRef="1"/>
				<IF language="Java"><![CDATA[  
cq.getQueueLength() > 0  
        ]]></IF>
				<THEN>
					<UPDATE-ENV>
						<UpdateObject objectVariable="cq">
							<Decrement property="queueLength" value="1"/>
						</UpdateObject>
					</UPDATE-ENV>
					<SCHEDULE-EVT>
						<ActivityStartEventExpr activityType="PerformService"/>
					</SCHEDULE-EVT>
				</THEN>
			</EnvironmentRule>
		</EnvironmentRules>
	</SimulationModel>
	<!-- =================================================== -->
	<InitialState>
		<!-- =================================================== -->
		<Object type="CustomerQueue" id="1">
			<Slot property="queueLength" value="0"/>
		</Object>
		<Object type="ServiceDesk" id="2">
			<Slot property="serviceDeskBusy" value="false"/>
		</Object>
		<ExogenousEvent type="Arrival" occurrenceTime="1"/>	
	</InitialState>
	<!-- =================================================== -->
	<UserInterface>
		<!-- =================================================== -->
		<InitialStateUI>
			<!-- =================================================== -->
			<EventUI eventType="Arrival" nmrOfInstances="1">
				<PropertyUI property="occurrenceTime">
					<Label>
						<Text xml:lang="en">Occurrence time</Text>
					</Label>
					<Hint>
						<Text xml:lang="en">When does the event occur?</Text>
					</Hint>
				</PropertyUI>
			</EventUI>
			<ObjectUI objectType="CustomerQueue" nmrOfInstances="1">
				<PropertyUI property="queueLength">
					<Label>
						<Text xml:lang="en">Customer queue length</Text>
					</Label>
					<Hint>
						<Text xml:lang="en">How long is the customer queue?</Text>
					</Hint>
				</PropertyUI>
			</ObjectUI>
			<ObjectUI objectType="ServiceDesk" nmrOfInstances="1">
				<PropertyUI property="serviceDeskBusy">
					<Label>
						<Text xml:lang="en">Service desk busy</Text>
					</Label>
					<Hint>
						<Text xml:lang="en">Is the service desk busy?</Text>
					</Hint>
				</PropertyUI>
			</ObjectUI>
		</InitialStateUI>
		<StatisticsUI>	
			<StatisticsVariableUI variable="serviceDeskUtilization">
				<Label>
					<Text xml:lang="en">Service Utilization</Text>
					<Text xml:lang="de">Service-Nutzung</Text>
					<Text xml:lang="fr">Utilisation du Service</Text>
					<Text xml:lang="es">El uso del Servicio</Text>
					<Text xml:lang="ro">Utilizare Serviciu</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the utilization degree of the service?</Text>
					<Text xml:lang="de">Was ist der Nutzungsgrad des Service?</Text>
					<Text xml:lang="fr">Quelle est la durée moyenne de service utilisation?</Text>
					<Text xml:lang="es">Cual es el tiempo promedio de uso del servicio?</Text>
					<Text xml:lang="ro">Care este timpul mediu de utilizare a serviciului?</Text>
				</Hint>
				<Format decimalPlaces="0"><Math>%</Math></Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="maxQueueLength">
				<Label>
					<Text xml:lang="en">Maximum Queue Length</Text>
					<Text xml:lang="de">Maximale Länge der Warteschlange</Text>
					<Text xml:lang="fr">Dimension maximale de la queue</Text>
					<Text xml:lang="es">Maximo longitud de cola</Text>
					<Text xml:lang="ro">Dimensiunea maxima a listei de asteptare</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the maximum length of the	service queue?</Text>
					<Text xml:lang="de">Was ist die maximale Länge der Warteschlange?</Text>
					<Text xml:lang="fr">Quelle est la dimension maximale de la queue?</Text>
					<Text xml:lang="es">Cual es el maximo longitud de la cola?</Text>
					<Text xml:lang="ro">Care este dimensiunea maxima a listei de asteptare?</Text>
				</Hint>
			</StatisticsVariableUI>
		</StatisticsUI>
		<AnimationUI>
			<Views>
				<SpaceView>
					<TwoDimensionalSpaceView2D backgroundColor="darkgrey"/>
				</SpaceView>
				<ObjectView objectType="ServiceDesk">
					<Shape2D x="250px" y="250px">
						<Square fill="green" width="50" stroke="black" strokeWidth="10">
							<ShapePropertyMap shapeProperty="fill" property="serviceDeskBusy" mapType="equalityCaseWise" v0="green" a0="false" a1="true" v1="red"/>
						</Square>
					</Shape2D>
					<DisplayInfo property="serviceDeskBusy" />
				</ObjectView>
				<ObjectView objectType="CustomerQueue">
					<Shape2D x="225px" y="300px">
						<Rectangle positioning="LeftCenter" fill="yellow" width="1" height="10" stroke="black" strokeWidth="2">
							<ShapePropertyMap shapeProperty="width" property="queueLength" mapType="polynomial" a0="0" a1="50"/>
						</Rectangle>
					</Shape2D>
					<DisplayInfo property="queueLength" content=" customers" />
				</ObjectView>
			</Views>
		</AnimationUI>	
	</UserInterface>
</SimulationScenario>