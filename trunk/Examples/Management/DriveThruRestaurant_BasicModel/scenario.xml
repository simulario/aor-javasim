<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario version="0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/ERSL/ERSL_0-9.xsd"
  xmlns="http://aor-simulation.org" xmlns:ers="http://aor-simulation.org"
  xmlns:dc="http://purl.org/dc/elements/1.1/" scenarioName="DriveThru"
  scenarioTitle="A drive thru with a menu board, a kitchen and a pickup window"
  simulationManagerDirectory="../../..">
  <SimulationParameters simulationSteps="10000" stepDuration="1" timeUnit="s"/>
  <SimulationModel modelName="DriveThru" 
    modelTitle="A drive thru with a menu board, a kitchen and a pickup window">
    <documentation>
      <dc:creator>Oana Nicolae</dc:creator>
      <dc:contributor>Gerd Wagner</dc:contributor>
      <dc:created>20090331</dc:created>
      <dc:modified>20120312</dc:modified>
      <dc:title>Drive Thru</dc:title>
      <dc:title xml:lang="de">Auto-Restaurant</dc:title>
      <shortDescription>A simple model of a drive thru as a system with three order processing units: the order window, 
        the kitchen and the pickup window, and two queues: one for the order window  and one for the pickup window.
      </shortDescription>
      <shortDescription xml:lang="de">Ein einfaches Modell eines Auto-Restaurants als System mit drei Auftragsbearbeitungseinheiten:
        Bestellannahme, Küche und Abholtresen, und zwei Warteschlangen:  eine für die Bestellannahme und eine für den Abholtresen.
      </shortDescription>
      <ers:description xmlns="http://www.w3.org/1999/xhtml">
        <p>As a car enters the drive thru from the street, the driver decides whether or not to get in line. 
        If he decides to leave the restaurant, he counts as a lost customer. If he decides 
        to get in line, he waits until the menu board is available.  At that time, he gives the order 
        to the order taker. After the order is taken, two things occur simultaneously:</p>
        <ol>
          <li>the driver moves forward if there is room, otherwise he has to wait at the menu board 
            until there is room to move forward.</li>
          <li>The order is sent back to the kitchen where it is prepared with some delay.</li>
        </ol> 
        <p>As soon as the driver reaches the pickup window, he pays and picks up his food, if it is ready. 
          If the food is not yet ready, he has to wait until his order is delivered to the pickup window.</p>
      </ers:description>
      <ers:description xmlns="http://www.w3.org/1999/xhtml" xml:lang="de">
        <p>Wenn ein Autofahrer von der Straße auf den Vorplatz des Autorestaurants einbiegt und die
          Länge der Warteschlange am Bestellannahmefenster sieht,  entscheidet sich der Fahrer, ob er sich
          in die Schlange einreiht oder ob er wieder wegfährt. Wenn er sich entscheidet, wieder wegzufahren,
          geht er in die Statistik der verlorenen Kunden mit ein. Wenn er sich dafür entscheidet, sich
          in die Schlange einzureihen, wartet er bis er bei der Bestellannahme dran kommt. Dann gibt
          er seine Bestellung ab. Daraufhin passieren zwei Dinge gleichzeitig:</p>
        <ol>
          <li>der Fahrer fährt weiter, sofern vor ihm Platz ist, andernfalls muss er am Bestellannahmefenster
            solange warten, bis vor ihm Platz entsteht, um weiterzufahren.</li>
          <li>Der Auftrag wird an die Küche weitergeleitet, wo er nach einer gewissen Zeit berarbeitet wird.</li>
        </ol> 
        <p>Sobald der Fahrer das Abholfenster erreicht, zahlt er und nimmt sein Essen entgegen, wenn es fertig ist. 
          Wenn das Essen noch nicht fertig ist, muss er warten, bis es zubereitet und zum Abholfenster gebracht wird.</p>
      </ers:description>
      <ers:source xmlns="http://www.w3.org/1999/xhtml">
        <span><a href="http://www.informs-sim.org/wsc08papers/005.pdf">Introduction to Simulation</a> by R.G. Ingalls, 
          in <em>Proceedings of the 2008 Winter Simulation Conference</em>.</span>
      </ers:source>
      <ers:source xmlns="http://www.w3.org/1999/xhtml" xml:lang="de">
        <span><a href="http://www.informs-sim.org/wsc08papers/005.pdf">Introduction to Simulation</a> von R.G. Ingalls, 
        in <em>Proceedings of the 2008 Winter Simulation Conference</em>.</span>
      </ers:source>
      <CcLicense license="CC BY-SA"/>
      <titleImage file="DriveThru.png"/>
      <processModelDiagram file="DriveThru_ProcessModel.png"/>
      <mediaFiles>
        <image file="Queue_Cmon-Fotolia.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="Queue_Cmon-Fotolia_1.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="Queue_Cmon-Fotolia_2.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="Queue_Cmon-Fotolia_3.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="Queue_Cmon-Fotolia_4.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="Queue_Cmon-Fotolia_5.JPG" license="© Cmon Fotolia.com" author="Cmon" />
        <image file="DriveThru.png" license="© R.G. Ingalls"/>
        <image file="DriveThru_ProcessModel.png" author="Oana Nicolae" license="CC BY-SA" />
      </mediaFiles>
    </documentation>
    <Statistics>
      <Variable name="numberOfCustomers" dataType="Integer" />
      <Variable name="numberOfLostCustomers" dataType="Integer" />
      <Variable name="numberOfDepartures" dataType="Integer" />
      <Variable name="menuBoardQueueLength" dataType="Integer">
        <Source>
          <ObjectProperty property="queueLength" objectType="MenuBoard" objectIdRef="1" />
        </Source>
      </Variable>
      <Variable name="pickupWindowQueueLength" dataType="Integer">
        <Source>
          <ObjectProperty property="queueLength" objectType="PickupWindow" objectIdRef="2"/>
        </Source>        
      </Variable>
      <Variable name="revenue" dataType="Float" />  
      <Variable name="cumulativeResponseTime" dataType="Integer" />
      <Variable name="meanResponseTime" dataType="Float">
        <Source computeOnlyAtEnd="true">
          <ValueExpr language="Java"><![CDATA[
  (double) SimStatistics.cumulativeResponseTime.getValue() / SimStatistics.numberOfDepartures.getValue()           
            ]]></ValueExpr>
          <ValueExpr language="JavaScript"><![CDATA[
   SimStatistics.cumulativeResponseTime.getValue() / SimStatistics.numberOfDepartures.getValue()         
            ]]> </ValueExpr>
        </Source>
      </Variable>  
      <Variable name="cumulativeMenuBoardServiceTime" dataType="Integer" />
      <Variable name="menuBoardUtilization" dataType="Float">
        <Source computeOnlyAtEnd="true">
          <ValueExpr language="Java"><![CDATA[
 (double) SimStatistics.cumulativeMenuBoardServiceTime.getValue() / SimParameter.SIMULATION_STEPS * 100           
            ]]></ValueExpr>
          <ValueExpr language="JavaScript"><![CDATA[
  SimStatistics.cumulativeMenuBoardServiceTime.getValue() / SimParameter.SIMULATION_STEPS * 100          
            ]]></ValueExpr>
        </Source>
      </Variable>
      <Variable name="cumulativePickupWindowServiceTime" dataType="Integer" />
      <Variable name="pickupWindowUtilization" dataType="Float">
        <Source computeOnlyAtEnd="true">
          <ValueExpr language="Java"><![CDATA[
  (double) SimStatistics.cumulativePickupWindowServiceTime.getValue() / SimParameter.SIMULATION_STEPS * 100           
            ]]></ValueExpr>
          <ValueExpr language="JavaScript"><![CDATA[
   SimStatistics.cumulativePickupWindowServiceTime.getValue() / SimParameter.SIMULATION_STEPS * 100         
            ]]></ValueExpr>
        </Source>
      </Variable>
      <Variable name="maxLengthOfMBQ" dataType="Integer">
        <Source aggregationFunction="max">
          <ObjectProperty property="queueLength" objectType="MenuBoard" objectIdRef="1" />
        </Source>
      </Variable>
      <Variable name="maxLengthOfPWQ" dataType="Integer">
        <Source aggregationFunction="max">
          <ObjectProperty property="queueLength" objectType="PickupWindow" objectIdRef="2" />
        </Source>
      </Variable>
    </Statistics>
    <Globals>    
      <!-- =========================================== -->
      <GlobalFunction name="twoDice" resultType="Integer">
      <!-- =========================================== -->
        <Parameter name="factor" type="Integer" />
        <Body language="Java"><![CDATA[
int r1 = Random.uniformInt(1,6);
int r2 = Random.uniformInt(1,6);
  if (r1+r2 <  3)  return (2*factor);      // with probability  0.028
  if (r1+r2 <  4)  return (3*factor);      // with probability  0.056
  if (r1+r2 <  5)  return (4*factor);      // with probability  0.083
  if (r1+r2 <  6)  return (5*factor);      // with probability  0.111
  if (r1+r2 <  7)  return (6*factor);      // with probability  0.139
  if (r1+r2 <  8)  return (7*factor);      // with probability  0.166
  if (r1+r2 <  9)  return (8*factor);      // with probability  0.139
  if (r1+r2 < 10)  return (9*factor);      // with probability  0.111
  if (r1+r2 < 11) return (10*factor);      // with probability  0.083
  if (r1+r2 < 12) return (11*factor);      // with probability  0.056
                  return (12*factor);      // with probability  0.028
                  ]]></Body>
        <Body language="JavaScript"><![CDATA[
var r1 = js.util.Random.uniformInt(1,6);
var r2 = js.util.Random.uniformInt(1,6);
  if (r1+r2 <  3)  return (2*factor);      // with probability  0.028
  if (r1+r2 <  4)  return (3*factor);      // with probability  0.056
  if (r1+r2 <  5)  return (4*factor);      // with probability  0.083
  if (r1+r2 <  6)  return (5*factor);      // with probability  0.111
  if (r1+r2 <  7)  return (6*factor);      // with probability  0.139
  if (r1+r2 <  8)  return (7*factor);      // with probability  0.166
  if (r1+r2 <  9)  return (8*factor);      // with probability  0.139
  if (r1+r2 < 10)  return (9*factor);      // with probability  0.111
  if (r1+r2 < 11) return (10*factor);      // with probability  0.083
  if (r1+r2 < 12) return (11*factor);      // with probability  0.056
                  return (12*factor);      // with probability  0.028              
        ]]></Body>
      </GlobalFunction>
    </Globals>
    <EntityTypes>
      <!-- =================================================== -->
      <ExogenousEventType name="CustomerArrival">
      <!-- =================================================== -->
        <Periodicity>
          <ValueExpr language="Java JavaScript">Global.twoDice(10)</ValueExpr>
        </Periodicity>
      </ExogenousEventType>
      <!-- =================================================== -->
      <CausedEventType name="StartMenuBoardService" />
      <!-- =================================================== -->
      <CausedEventType name="EndMenuBoardService" />
      <!-- =================================================== -->
      <CausedEventType name="EndKitchenService">
      <!-- =================================================== -->
        <ReferenceProperty name="order" type="Order" />
      </CausedEventType>
      <!-- =================================================== -->
      <CausedEventType name="StartPickupWindowService" />
      <!-- =================================================== -->
      <CausedEventType name="EndPickupWindowService" />
      <!-- =================================================== -->
      <ObjectType name="MenuBoard">
      <!-- =================================================== -->
        <Attribute name="maxMenuBoardLineSize" type="Integer" minValue="0" maxValue="5"/>
        <Attribute name="menuBoardBusy" type="Boolean" />
        <Attribute name="queueLength" type="Integer" />
        <ReferenceProperty name="menuBoardQueue" type="Customer" upperMultiplicity="unbounded">
          <documentation>
              This property represents a first-in-first-out queue.
          </documentation>
        </ReferenceProperty>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <Function name="randomPizzaType" resultType="Integer">
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <documentation>
              The type of the pizza as a number between 2 and 12 : 2 = Pizza Quattro Formaggi, 
              3 = Pizza Quattro Stagioni, 4 = Pizza Capricciosa, 5 = Pizza Napoletana, 
              6 = Pizza Marinara, 7 = Pizza Margherita etc.
          </documentation>
          <Body language="Java"><![CDATA[
      int a = Random.uniformInt(1,6);    
      int b = Random.uniformInt(1,6);
            return a+b;
                    ]]></Body>
          <Body language="JavaScript"><![CDATA[
      var a = js.util.Random.uniformInt(1,6);    
      var b = js.util.Random.uniformInt(1,6);
            return a+b;          
             ]]></Body>
        </Function>
      </ObjectType>  
      <!-- =================================================== -->
      <ObjectType name="PickupWindow">
      <!-- =================================================== -->
        <Attribute name="maxPickupWindowLineSize" type="Integer" minValue="0" maxValue="5"/>
        <Attribute name="pickupWindowBusy" type="Boolean" />
        <Attribute name="queueLength" type="Integer" />
        <ReferenceProperty name="pickupWindowQueue" type="Customer" upperMultiplicity="unbounded">
          <documentation>
              This property represents a first-in-first-out queue. 
          </documentation>
        </ReferenceProperty>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <Function name="pizzaPrice" resultType="Float">
          <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <Parameter name="pizzaType" type="Integer" />
          <Body language="Java"><![CDATA[
// old calculation for the price of an order: double[] price = {8.90, 9.80, 8.50, 7.20, 7.80, 5.20};
double[] price = {0.0, 0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0, 14.0, 16.0, 18.0, 20.0, 22.0};
return price[(int)pizzaType];
           ]]></Body>
          <Body language="JavaScript"><![CDATA[
// old calculation for the price of an order: var price = new js.util.ArrayList(8.90, 9.80, 8.50, 7.20, 7.80, 5.20);
var price = [0.0, 0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0, 14.0, 16.0, 18.0, 20.0, 22.0];
return price[pizzaType];
           ]]></Body>
        </Function>
      </ObjectType>    
      <!-- =================================================== -->
      <ObjectType name="Customer">
      <!-- =================================================== -->
        <Attribute name="arrivalTime" type="Integer" />
        <ReferenceProperty name="order" type="Order" />
        <Attribute name="waitingForPWFree" type="Boolean" />
      </ObjectType>    
      <!-- =================================================== -->
      <ObjectType name="Order">
        <!-- =================================================== -->
        <Attribute name="pizzaType" type="Integer" />
        <Attribute name="arrived" type="Boolean" />
      </ObjectType>
    </EntityTypes>
    <EnvironmentRules>
      <!-- ======================================================= -->
      <EnvironmentRule name="CustomerArrival_Rule">
        <!-- ======================================================== -->
        <documentation>
          <description>
            When a car arrives at the Fast Food Restaurant, and the MenuBoard (MB) queue 
            is full, the customer leaves and he is considered a dissatisfied customer. 
            If the MB queue is not full then the car gets in the waiting line as a new 
            customer. Furthermore, if the MB service is not busy, a StartMenuBoardService 
            event is created and scheduled for execution. 
          </description>
        </documentation>
        <WHEN eventType="CustomerArrival" eventVariable="evt" />
        <FOR-ObjectVariable variable="mb" objectType="MenuBoard" objectIdRef="1" />
        <IF language="Java JavaScript"><![CDATA[
this.mb.getMenuBoardQueue().size() >= this.mb.getMaxMenuBoardLineSize()
         ]]></IF>
        <THEN>
          <UPDATE-ENV>
            <UpdateStatisticsVariable variable="numberOfLostCustomers">
              <ValueExpr language="Java JavaScript"><![CDATA[
SimStatistics.numberOfLostCustomers.getValue() + 1                
                ]]></ValueExpr>
            </UpdateStatisticsVariable>
          </UPDATE-ENV>
        </THEN>
        <ELSE>
          <UPDATE-ENV>
            <Create>
              <Object type="Customer" name="customer">
                <Slot property="arrivalTime">
                  <ValueExpr language="Java JavaScript"><![CDATA[ 
this.evt.getOccurrenceTime()
                   ]]></ValueExpr>
                </Slot>
              </Object>
            </Create>
            <UpdateObject objectVariable="mb">
              <MultiValuedSlot property="menuBoardQueue">
                <AddLast itemVariable="customer" />
              </MultiValuedSlot>
              <Increment property="queueLength" value="1"/>
            </UpdateObject>
            <UpdateStatisticsVariable variable="numberOfCustomers">
              <ValueExpr language="Java JavaScript"><![CDATA[
SimStatistics.numberOfCustomers.getValue() + 1                
              ]]></ValueExpr>
            </UpdateStatisticsVariable>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="StartMenuBoardService">
              <Condition language="Java JavaScript"><![CDATA[ 
this.mb.getQueueLength() == 1
               ]]></Condition>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </ELSE>        
      </EnvironmentRule>
      <!-- ================================================================ -->
      <EnvironmentRule name="StartMenuBoardService_Rule">
        <!-- ================================================================ -->
        <documentation>
          <description>
            When the MB service starts, the menuBoardBusy variable is set to true, 
            an order object with a random pizza type is created and assigned to the customer being served.
            Then an EndMenuBoardService event and also an EndKitchenService event, both  with appropriate delays, 
            are scheduled for this order. 
          </description>
        </documentation>
        <WHEN eventType="StartMenuBoardService"/>
        <FOR-ObjectVariable variable="mb" objectType="MenuBoard" objectIdRef="1" />
        <FOR-ObjectVariable variable="cust" objectType="Customer">
          <ObjectRef language="Java JavaScript"><![CDATA[ this.mb.getMenuBoardQueue().get(0)]]></ObjectRef>
        </FOR-ObjectVariable>
        <FOR-DataVariable  variable="serviceTimeMB" dataType="Integer">
          <ValueExpr language="Java JavaScript"><![CDATA[ Global.twoDice(10)]]></ValueExpr>
        </FOR-DataVariable>
        <FOR-DataVariable variable="serviceTimeK" dataType="Integer">
          <ValueExpr language="Java JavaScript"><![CDATA[ Global.twoDice(8)]]></ValueExpr>
        </FOR-DataVariable>
        <DO>
          <UPDATE-ENV>
            <Create>
              <Object type="Order" objectVariable="ord">
                <Slot property="pizzaType">
                  <ValueExpr language="Java JavaScript"><![CDATA[ this.mb.randomPizzaType()]]></ValueExpr>
                </Slot>
                <Slot property="arrived" value="false"/>
              </Object>
            </Create>
            <UpdateObject objectVariable="cust">
              <Slot property="order">
                <ObjectValueExpr objectVariable="ord"/>
              </Slot>
            </UpdateObject>
            <UpdateObject objectVariable="mb">
              <Slot property="menuBoardBusy" value="true"/>
            </UpdateObject>
            <UpdateStatisticsVariable variable="cumulativeMenuBoardServiceTime">
              <ValueExpr language="Java JavaScript"><![CDATA[  
 SimStatistics.cumulativeMenuBoardServiceTime.getValue() + this.serviceTimeMB
              ]]></ValueExpr>
            </UpdateStatisticsVariable>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="EndMenuBoardService">
              <Delay>
                <ValueExpr language="Java JavaScript"><![CDATA[ this.serviceTimeMB ]]></ValueExpr>
              </Delay>
            </CausedEventExpr>
            <CausedEventExpr eventType="EndKitchenService">
              <Delay>
                <ValueExpr language="Java JavaScript"><![CDATA[ 
 this.serviceTimeMB + this.serviceTimeK 
                 ]]></ValueExpr>
              </Delay>
              <Slot property="order">
                <ObjectValueExpr objectVariable="ord"/>
              </Slot>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </DO>
      </EnvironmentRule>    
      <!-- ============================================================================ -->
      <EnvironmentRule name="EndMenuBoardService_Rule">
      <!-- ============================================================================ -->
        <documentation>
          <description>On EndMenuBoardService, the MB service ends, but if the PW Queue is full, 
            the customer cannot move forward. If there are no others customers waiting
            in the PW queue, a new  StartPickupWindowService event is created. 
            If there are more customers in the menu board queue, a new StartMenuBoardService 
            event  is created. If the PW Queue is full, the customer cannot move forward, so the 
            customer attribute waitingForPWFree is set to true.  
          </description>
        </documentation>
        <WHEN eventType="EndMenuBoardService" eventVariable="evt" />
        <FOR-ObjectVariable variable="mb" objectType="MenuBoard" objectIdRef="1" />
        <FOR-ObjectVariable variable="pw" objectType="PickupWindow" objectIdRef="2" />
        <FOR-ObjectVariable variable="cust" objectType="Customer">
          <ObjectRef language="Java JavaScript"><![CDATA[ this.mb.getMenuBoardQueue().get(0)]]></ObjectRef>
        </FOR-ObjectVariable>
        <IF language="Java JavaScript"><![CDATA[
this.pw.getPickupWindowQueue().size() < this.pw.getMaxPickupWindowLineSize() 
         ]]></IF>
        <THEN>
          <UPDATE-ENV>
            <UpdateObject objectVariable="mb">
              <MultiValuedSlot property="menuBoardQueue">
                <RemoveFirst itemVariable="cust"/>
              </MultiValuedSlot>
              <Decrement property="queueLength" value="1"/>
              <Slot property="menuBoardBusy" value="false"/>
            </UpdateObject>
            <UpdateObject objectVariable="pw">
              <MultiValuedSlot property="pickupWindowQueue">
                <AddLast itemVariable="cust"/>
              </MultiValuedSlot>
              <Increment property="queueLength" value="1"/>
            </UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="StartMenuBoardService">
              <Condition language="Java JavaScript"><![CDATA[
this.mb.getMenuBoardQueue().size() > 0
              ]]></Condition>
            </CausedEventExpr>
            <CausedEventExpr eventType="StartPickupWindowService">
              <Condition language="Java JavaScript"><![CDATA[
this.pw.getPickupWindowQueue().size() == 1
              ]]></Condition>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </THEN>
        <ELSE>
          <UPDATE-ENV>
            <UpdateObject objectVariable="cust">
              <Slot property="waitingForPWFree" value="true" />
            </UpdateObject>
          </UPDATE-ENV>
        </ELSE>
      </EnvironmentRule>
      <!-- ======================================================================-->
      <EnvironmentRule name="StartPickupWindowService_Rule">
      <!-- ======================================================================-->
        <documentation>
            On StartPickupWindowService, the pickupWindowBusy variable is set to true, and 
            if the customer's oder has already arrived, an EndPickupWindowService event 
            is created with an appropriate delay. 
        </documentation>
        <WHEN eventType="StartPickupWindowService" />
        <FOR-ObjectVariable variable="pw" objectType="PickupWindow" objectIdRef="2" />
        <FOR-DataVariable variable="serviceTimePW" dataType="Integer">
          <ValueExpr language="Java JavaScript"><![CDATA[ Global.twoDice(10)]]></ValueExpr>
        </FOR-DataVariable>
        <DO>
        <UPDATE-ENV>
          <UpdateObject objectVariable="pw">
            <Slot property="pickupWindowBusy" value="true" />
          </UpdateObject>
          <UpdateStatisticsVariable variable="cumulativePickupWindowServiceTime">
            <ValueExpr language="Java JavaScript"><![CDATA[  
SimStatistics.cumulativePickupWindowServiceTime.getValue() + this.serviceTimePW
              ]]></ValueExpr>
          </UpdateStatisticsVariable>
        </UPDATE-ENV>
        <SCHEDULE-EVT>
          <CausedEventExpr eventType="EndPickupWindowService">
            <Condition language="Java JavaScript"><![CDATA[
this.pw.getPickupWindowQueue().get(0).getOrder().isArrived()
            ]]></Condition>
            <Delay>
              <ValueExpr language="Java"><![CDATA[ this.serviceTimePW]]></ValueExpr>
            </Delay>
          </CausedEventExpr>
        </SCHEDULE-EVT>
        </DO>
      </EnvironmentRule>
      <!-- ======================================================== -->
      <EnvironmentRule name="EndKitchenService_Rule">
      <!-- ======================================================== -->
        <documentation>
          On EndKitchenService, the order's arrived flag is set to true. 
          Furthermore, if the arrived order is the order of the customer 
          at the pickup window, if there is any, then an EndPickupWindowService 
          event is scheduled.
        </documentation>
        <WHEN eventType="EndKitchenService" eventVariable="evt" />
        <FOR-ObjectVariable variable="mb" objectType="MenuBoard" objectIdRef="1" />
        <FOR-ObjectVariable variable="pw" objectType="PickupWindow" objectIdRef="2" />
        <FOR-ObjectVariable variable="ord" objectType="Order">
          <ObjectRef language="Java JavaScript"><![CDATA[ this.evt.getOrder()]]></ObjectRef>
        </FOR-ObjectVariable>
        <FOR-DataVariable variable="serviceTimePW" dataType="Integer">
          <ValueExpr language="Java JavaScript"><![CDATA[ Global.twoDice(10)]]></ValueExpr>
        </FOR-DataVariable>
        <DO>
          <UPDATE-ENV>
            <UpdateObject objectVariable="ord">
              <Slot property="arrived" value="true"/>
            </UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="EndPickupWindowService">
              <Condition language="Java JavaScript"><![CDATA[ 
this.pw.getPickupWindowQueue().size() > 0 && 
this.pw.getPickupWindowQueue().get(0).getOrder().getId() == this.ord.getId()
              ]]></Condition>
              <Delay>
                <ValueExpr language="Java"><![CDATA[ this.serviceTimePW ]]></ValueExpr>
              </Delay>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </DO>
      </EnvironmentRule>      
      <!-- ======================================================== -->
      <EnvironmentRule name="EndPickupWindowService_Rule">
      <!-- ============================================================== -->
        <documentation>
            On EndPickupWindowService, the current customer departs (it is removed from the queue and destroyed). 
            If the queue is empty, the pickup window is no longer busy. Otherwise, a new StartPickupWindowService 
            is created.  If there is a customer in the first position of the menu board queue that is waiting to 
            move forward to the pickup-window queue, then this customer is moved forward to the pickup-window queue.
        </documentation>
        <WHEN eventType="EndPickupWindowService" eventVariable="evt" />
        <FOR objectVariable="mb" objectType="MenuBoard" objectIdRef="1" />
        <FOR objectVariable="pw" objectType="PickupWindow" objectIdRef="2" />
        <FOR objectVariable="cust" objectType="Customer">
          <ObjectRef language="Java JavaScript"><![CDATA[ this.pw.getPickupWindowQueue().get(0)]]></ObjectRef>
        </FOR>
        <DO>
          <UPDATE-ENV>
            <UpdateStatisticsVariable variable="numberOfDepartures">
              <ValueExpr language="Java JavaScript"><![CDATA[
SimStatistics.numberOfDepartures.getValue() + 1               
                ]]></ValueExpr>
            </UpdateStatisticsVariable>
            <UpdateStatisticsVariable variable="cumulativeResponseTime">
              <ValueExpr language="Java JavaScript"><![CDATA[
SimStatistics.cumulativeResponseTime.getValue() + this.evt.getOccurrenceTime() - this.cust.getArrivalTime()              
            ]]></ValueExpr>
            </UpdateStatisticsVariable>
            <UpdateStatisticsVariable variable="revenue">
              <ValueExpr language="Java"><![CDATA[
SimStatistics.revenue.getValue() + pw.pizzaPrice((int) pw.getPickupWindowQueue().get(0).getOrder().getPizzaType())
               ]]></ValueExpr>         
              <ValueExpr language="JavaScript"><![CDATA[
SimStatistics.revenue.getValue() + this.pw.pizzaPrice( this.cust.getOrder().getPizzaType())
                ]]></ValueExpr>
            </UpdateStatisticsVariable>
            <UpdateObject objectVariable="pw">
              <MultiValuedSlot property="pickupWindowQueue">
                <RemoveFirst itemVariable="cust"/>
              </MultiValuedSlot>
              <Decrement property="queueLength" value="1"/>
              <Slot property="pickupWindowBusy" value="false"/>
            </UpdateObject>
            <DestroyObject objectVariable="cust" />
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="StartPickupWindowService">
              <Condition language="Java JavaScript"><![CDATA[ 
this.pw.getPickupWindowQueue().size() > 0 
              ]]></Condition>
            </CausedEventExpr>
          </SCHEDULE-EVT>          
        </DO>
        <IF language="Java JavaScript"><![CDATA[
this.mb.getMenuBoardQueue().size() > 0 && this.mb.getMenuBoardQueue().get(0).isWaitingForPWFree() 
         ]]></IF>
        <THEN>
          <UPDATE-ENV>
            <UpdateObject objectVariable="mb">
              <MultiValuedSlot property="menuBoardQueue">
                <RemoveFirst itemVariable="cust"/>
              </MultiValuedSlot>
              <Decrement property="queueLength" value="1"/>
              <Slot property="menuBoardBusy">
                <ValueExpr language="Java JavaScript"><![CDATA[
(this.mb.getQueueLength() == 0) ? false : true                  
                  ]]></ValueExpr>
              </Slot>
            </UpdateObject>
            <UpdateObject objectVariable="pw">
              <MultiValuedSlot property="pickupWindowQueue">
                <AddLast itemVariable="cust"/>
              </MultiValuedSlot>
              <Increment property="queueLength" value="1"/>
            </UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="StartMenuBoardService">
              <Condition language="Java JavaScript"><![CDATA[
this.mb.getMenuBoardQueue().size() > 0
              ]]></Condition>
            </CausedEventExpr>
            <!-- Schedule StartPickupWindowService if the PW queue was empty before forwarding the waiting customer -->
            <CausedEventExpr eventType="StartPickupWindowService">
              <Condition language="Java JavaScript"><![CDATA[ 
this.pw.getPickupWindowQueue().size() == 1  
              ]]></Condition>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </THEN>
      </EnvironmentRule>    
    </EnvironmentRules>
  </SimulationModel>
  <!-- ======================================== -->
  <InitialState>
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Object type="MenuBoard" name="MenuBoard" id="1">
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <Slot property="menuBoardBusy" value="false" />
      <Slot property="maxMenuBoardLineSize" value="5" />
      <Slot property="queueLength" value="0" />
      <Slot property="menuBoardQueue">
        <ValueExpr language="Java"><![CDATA[ new ArrayList<Customer>() ]]></ValueExpr>
        <ValueExpr language="JavaScript"><![CDATA[ new js.util.ArrayList()]]></ValueExpr>
      </Slot>
    </Object>   
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Object type="PickupWindow" name="PickupWindow" id="2">
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <Slot property="pickupWindowBusy" value="false" />
      <Slot property="maxPickupWindowLineSize" value="5" />
      <Slot property="queueLength" value="0" />
      <Slot property="pickupWindowQueue">
        <ValueExpr language="Java"><![CDATA[ new ArrayList<Customer>() ]]></ValueExpr>
        <ValueExpr language="JavaScript"><![CDATA[ new js.util.ArrayList()]]></ValueExpr>
      </Slot>
    </Object>  
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <ExogenousEvent type="CustomerArrival" occurrenceTime="1" />  
  </InitialState>

  <UserInterface supportedLanguages="en de">
    <!-- ========================================================= -->
    <InitialStateUI>
    <!-- ========================================================= -->
      <ObjectUI objectType="PickupWindow" maxNmrOfInstances="1">
        <PropertyUI property="maxPickupWindowLineSize" label="Maximum size of the pickup window line"  widget="Slider">
          <Label>
            <Text xml:lang="de">Maximale Länge der Abhol-Warteschlange</Text>
          </Label>
          <Hint>
            <Text xml:lang="en">What is the maximum size of the pickup window line?</Text>
          </Hint>
        </PropertyUI>
      </ObjectUI>
      <ObjectUI objectType="MenuBoard" maxNmrOfInstances="1">
        <PropertyUI property="maxMenuBoardLineSize" label="Maximum size of the menu board line" widget="Slider">
          <Label>
            <Text xml:lang="de">Maximale Länge der Bestell-Warteschlange</Text>
          </Label>
          <Hint>
            <Text xml:lang="en">What is the maximum size of the menu board line?</Text>
          </Hint>
        </PropertyUI>
      </ObjectUI>      
    </InitialStateUI>
    <!-- ========================================================= -->
    <StatisticsUI>
    <!-- ========================================================= -->
      <StatisticsVariableUI variable="numberOfCustomers">
        <Label>
          <Text xml:lang="en">Number of customers</Text>
          <Text xml:lang="de">Anzahl Kunden</Text>
          <Text xml:lang="fr">Nombre de clients</Text>
          <Text xml:lang="es">Numero de clientes</Text>
          <Text xml:lang="ro">Numar clienti</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">How many customers have entered the restaurant?</Text>
          <Text xml:lang="de">Wieviele Kunden haben das Restaurant betreten?</Text>
          <Text xml:lang="fr">Combien de clients sont entres dans le restaurant?</Text>
          <Text xml:lang="es">Cuantos clientes han entrado en el restaurante?</Text>
          <Text xml:lang="ro">Cati clienti are restaurantul?</Text>
        </Hint>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="numberOfLostCustomers">
        <Label>
          <Text xml:lang="en">Lost customers</Text>
          <Text xml:lang="de">Entgangene Kunden</Text>
          <Text xml:lang="fr">Nombre de clients perdus</Text>
          <Text xml:lang="es">Numero de clientes que son perdidos</Text>
          <Text xml:lang="ro">Clienti pierduti</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">How many customers have left because the line was too long?</Text>
          <Text xml:lang="de">Wieviele Kunden sind weggegangen, weil die Warteschlange zu lang war?</Text>
          <Text xml:lang="fr">Combien de clients ont quitte le restaurant parce que la queue ete trop longue?</Text>
          <Text xml:lang="es">Cuantos clientes se han ido porque la linea es demasiado largo?</Text>
          <Text xml:lang="ro">Cati clienti a pierdut restaurantul?</Text>
        </Hint>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="revenue">
        <Label>
          <Text xml:lang="en">Revenue</Text>
          <Text xml:lang="de">Umsatz</Text>
          <Text xml:lang="fr">Chiffre d'affaires</Text>  
          <Text xml:lang="es">Volumen de negocios</Text>
          <Text xml:lang="ro">Cifra de afaceri</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">How much revenue did the restaurant make?</Text>
          <Text xml:lang="de">Wieviel Umsatz hat das Restaurant gemacht?</Text>
          <Text xml:lang="fr">Quel est le chiffre d'affaires du restaurant?</Text>
          <Text xml:lang="es">Cuál es el volumen de negocios del restaurante?</Text>
          <Text xml:lang="ro">Care este cifra de afaceri a restaurantului?</Text>
        </Hint>
        <Format decimalPlaces="2">
          <Currency>EUR(&#8364;)</Currency>
        </Format>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="meanResponseTime">
        <Label>
          <Text xml:lang="en">Mean response time</Text>
          <Text xml:lang="de">Durchlaufzeit</Text>
          <Text xml:lang="fr">Le temps de réponse moyen</Text>
          <Text xml:lang="es">La media de tiempo de respuesta</Text>
          <Text xml:lang="ro">Timpul mediu de raspuns</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the average lenght of time the customer spends in the restaurant?</Text>
          <Text xml:lang="de">Wie viel Zeit verbringt ein Kunde durchschnittlich im Restaurant?</Text>
          <Text xml:lang="fr">Quel est le temps moyen passé par le client dans le restaurant?</Text>
          <Text xml:lang="es">Cuál es el tiempo medio empleado por el cliente en el restaurante?</Text>
          <Text xml:lang="ro">Care este durata medie de timp petrecuta de client in restaurant?</Text>
        </Hint>
        <Format decimalPlaces="2">
          <Time>s</Time>
        </Format>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="menuBoardUtilization">
        <Label>
          <Text xml:lang="en">Menu board utilization</Text>
          <Text xml:lang="de">Auftragsannahme-Nutzung</Text>
          <Text xml:lang="fr">Utilisation du service pour la demande de nourriture</Text>
          <Text xml:lang="es">El uso del servicio de recepcion de pedidos comidas</Text>
          <Text xml:lang="ro">Utilizarea serviciului de preluare comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the utilization of the restaurant's menu board (order taking service)?</Text>
          <Text xml:lang="de">Wie hoch ist der Nutzungsgrad der Auftragsannahme?</Text>
          <Text xml:lang="fr">Quel est le temps moyen de l'utilisation du service pour la demande de nourriture?</Text>
          <Text xml:lang="es">Cuál es el tiempo medio empleado por el uso del servicio de recepcion de pedidos comidas?</Text>
          <Text xml:lang="ro">Care este timpul mediu de utilizare a serviciului de preluare comenzi?</Text>
        </Hint>
        <Format decimalPlaces="2"><Math>%</Math></Format>
      </StatisticsVariableUI>
      
      <StatisticsVariableUI variable="pickupWindowUtilization">
        <Label>
          <Text xml:lang="en">Pickup window utilization</Text>
          <Text xml:lang="de">Ausgabefenster-Nutzung</Text>
          <Text xml:lang="fr">Utilisation du distributeur de nourriture</Text>
          <Text xml:lang="es">El uso del servicio de entrega de comidas</Text>
          <Text xml:lang="ro">Utilizarea serviciului de distributie comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the utilization of the pickup window?</Text>
          <Text xml:lang="de">Wie hoch ist der Nutzungsgrad des Ausgabefensters?</Text>
          <Text xml:lang="fr">Quel est le temps moyen de l'utilisation du service pour la distribution de nourriture?</Text>
          <Text xml:lang="es">Cuál es el tiempo medio empleado por el uso del servicio para entrega de comidas?</Text>
          <Text xml:lang="ro">Care este timpul mediu de utilizare a serviciului de distributie comenzi?</Text>
        </Hint>
        <Format decimalPlaces="1"><Math>%</Math></Format>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="maxLengthOfMBQ">
        <Label>
          <Text xml:lang="en">Maximum length of menu board queue</Text>
          <Text xml:lang="de">Durchschnittliche Länge der Auftragsannahme-Warteschlange</Text>
          <Text xml:lang="fr">Dimension maximale de la queue pour la demande de nourriture</Text>
          <Text xml:lang="es">Maximo longitud de cola para recepcion de pedidos comidas</Text>
          <Text xml:lang="ro">Dimensiunea maxima a listei de asteptare pentru serviciul de preluare comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the maximum length of the menu board queue?</Text>
          <Text xml:lang="de">Was ist die durchschnittliche Länge der Auftragsannahme-Warteschlange?</Text>
          <Text xml:lang="fr">Quelle est la dimension maximale de la queue pour la demande de nourriture?</Text>
          <Text xml:lang="es">Cual es el tamaño maximo de la cola para entrega de comidas?</Text>
          <Text xml:lang="ro">Care este dimensiunea maxima a listei de asteptare pentru serviciul de preluare comenzi?</Text>
        </Hint>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="maxLengthOfPWQ">
        <Label>
          <Text xml:lang="en">Maximum length of pickup window queue</Text>
          <Text xml:lang="de">Durchschnittliche Länge der Ausgabefenster-Warteschlange</Text>
          <Text xml:lang="fr">Dimension maximale de la queue pour la distribution de nourriture</Text>
          <Text xml:lang="es">Maximo longitud de cola para entrega de comidas</Text>
          <Text xml:lang="ro">Dimensiunea maxima a listei de asteptare pentru serviciul de distributie comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the maximum length of the pickup window queue?</Text>
          <Text xml:lang="de">Was ist die durchschnittliche Länge der Ausgabefenster-Warteschlange?</Text>
          <Text xml:lang="fr">Quelle est la dimension maximale de la queue pour la distribution de nourriture?</Text>
          <Text xml:lang="es">Cual es el tamaño maximo de la cola para entrega de comidas?</Text>
          <Text xml:lang="ro">Care este dimensiunea maxima a listei de asteptare pentru serviciul de distributie comenzi?</Text>
        </Hint>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="menuBoardQueueLength" comparisonGroup="MenuBoard_PickupWindow" showChart="true">
        <Label>
          <Text xml:lang="en">Length of menu board queue</Text>
          <Text xml:lang="de">Länge der Auftragsannahme-Warteschlange</Text>
          <Text xml:lang="fr">Dimension de la queue pour la demande de nourriture</Text>
          <Text xml:lang="es">Longitud de cola para recepcion de pedidos comidas</Text>
          <Text xml:lang="ro">Dimensiunea listei de asteptare pentru serviciul de preluare comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the length of the menu board queue?</Text>
          <Text xml:lang="de">Was ist die Länge der Auftragsannahme-Warteschlange?</Text>
          <Text xml:lang="fr">Quelle est la dimension de la queue pour la demande de nourriture?</Text>
          <Text xml:lang="es">Cual es el tamaño de la cola para entrega de comidas?</Text>
          <Text xml:lang="ro">Care este dimensiunea listei de asteptare pentru serviciul de preluare comenzi?</Text>
        </Hint>
      </StatisticsVariableUI>
      <StatisticsVariableUI variable="pickupWindowQueueLength" comparisonGroup="MenuBoard_PickupWindow" showChart="true">
        <Label>
          <Text xml:lang="en">Length of pickup window queue</Text>
          <Text xml:lang="de">Länge der Ausgabefenster-Warteschlange</Text>
          <Text xml:lang="fr">Dimension de la queue pour la distribution de nourriture</Text>
          <Text xml:lang="es">Longitud de cola para entrega de comidas</Text>
          <Text xml:lang="ro">Dimensiunea listei de asteptare pentru serviciul de distributie comenzi</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the length of the pickup window queue?</Text>
          <Text xml:lang="de">Was ist die Länge der Ausgabefenster-Warteschlange?</Text>
          <Text xml:lang="fr">Quelle est la dimension de la queue pour la distribution de nourriture?</Text>
          <Text xml:lang="es">Cual es el tamaño de la cola para entrega de comidas?</Text>
          <Text xml:lang="ro">Care este dimensiunea listei de asteptare pentru serviciul de distributie comenzi?</Text>
        </Hint>
      </StatisticsVariableUI>
    </StatisticsUI>
    <!-- ================================================== -->
    <AnimationUI>
    <!-- ================================================== -->
      <Views>
        <SpaceView>
          <TwoDimensionalSpaceView2D backgroundColor="white" />
        </SpaceView>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <ObjectView objectType="MenuBoard" displayName="true" objectIdRef="1">
          <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <Shape2D x="40%" y="35%">
            <Square width="100" stroke="darkgrey" strokeWidth="30">
              <ShapePropertyVisualizationMap shapeProperty="fill" property="menuBoardBusy"
                mapType="equalityCaseWise" v0="green" a0="false" a1="true" v1="red" />
            </Square>
          </Shape2D>
          <DisplayInfo property="queueLength" content=" customers" />
          <AttachedShape2D offsetX="-70px" offsetY="0px">
            <Shape2D>
              <Rectangle positioning="RightCenter" fill="yellow" width="1" height="100" stroke="black"
                strokeWidth="2">
                <ShapePropertyVisualizationMap shapeProperty="width" property="queueLength"
                  mapType="polynomial" a0="0" a1="40" />
                <ShapePropertyVisualizationMap shapeProperty="texture" property="queueLength"
                  mapType="equalityCaseWise" a0="0" v0="Queue_Cmon-Fotolia.jpg" a1="1"
                  v1="Queue_Cmon-Fotolia_1.jpg" a2="2" v2="Queue_Cmon-Fotolia_2.jpg" a3="3"
                  v3="Queue_Cmon-Fotolia_3.jpg" />
                <ShapePropertyVisualizationMap shapeProperty="texture" property="queueLength" mapType="equalityCaseWise"
                  a0="4" v0="Queue_Cmon-Fotolia_4.jpg" a1="5" v1="Queue_Cmon-Fotolia_5.jpg" />
              </Rectangle>
            </Shape2D>
          </AttachedShape2D>
        </ObjectView>  
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <ObjectView objectType="PickupWindow" displayName="true" objectIdRef="2">
          <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <Shape2D x="80%" y="35%">
            <Square width="100" stroke="darkgrey" strokeWidth="30">
              <ShapePropertyVisualizationMap shapeProperty="fill" property="pickupWindowBusy"
                mapType="equalityCaseWise" v0="green" a0="false" a1="true" v1="red" />
            </Square>
          </Shape2D>
          <DisplayInfo property="queueLength" content=" customers" />
          <AttachedShape2D offsetX="-70px" offsetY="0px">
            <Shape2D>
              <Rectangle positioning="RightCenter" fill="yellow" width="1" height="100" stroke="black"
                strokeWidth="2">
                <ShapePropertyVisualizationMap shapeProperty="width" property="queueLength"
                  mapType="polynomial" a0="0" a1="40" />
                <ShapePropertyVisualizationMap shapeProperty="texture" property="queueLength"
                  mapType="equalityCaseWise" a0="0" v0="Queue_Cmon-Fotolia.jpg" a1="1"
                  v1="Queue_Cmon-Fotolia_1.jpg" a2="2" v2="Queue_Cmon-Fotolia_2.jpg" a3="3"
                  v3="Queue_Cmon-Fotolia_3.jpg" a4="4" v4="Queue_Cmon-Fotolia_4.jpg" a5="5" v5="Queue_Cmon-Fotolia_5.jpg"/>
              </Rectangle>
            </Shape2D>
          </AttachedShape2D>
        </ObjectView>  
      </Views>
    </AnimationUI>
  </UserInterface>
</SimulationScenario>
