<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook" 
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
	<title>Reconstruction of the model in the AOR simulation language</title>
	<para>This chapter starts with a description of Agent-Object-Relationship simulation. After this,
		the reconstructed simulation scenario of the original model will be introduced.</para>
	<section>
		<title>AOR simulation</title>
		<para>This section introduces an important agent-based approach, called Agent-Object-Relationship
			(AOR) simulation. The model will be reconstructed with the help of it. In this approach,
			the simulation system includes a set of interacting agents and a simulation environment
			where all agents exist. Every agent is an independent entity with activities. It can act
			with other agents and with the simulation environment.</para>
		<section>
			<title>Simulation language</title>
			<para>AOR simulations use a high-level declarative language, called Agent-Object-Relationship
				Simulation Language (AORSL). The language can be processed directly with
				AOR-JavaSim. It is an XML-based language that uses an XML Schema definition to
				enable easy validating and parsing of AORSL documents. Using XML syntax also has the
				advantage that AORSL files can be created, edited and viewed with a lot of free
				software.</para>
		</section>
		<section>
			<title>Simulation scenario and simulation model</title>
			<para>A simulation scenario is expressed with the help of AORSL. In the simulation stage the
				scenario is first stored in XML tagged data files and then translated to program
				code (either Java or JavaScript) and finally executed with a JVM or in a Web
				browser.</para>
			<figure>
				<title>Code Generation <citation>AOR2011</citation></title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="png/code-generation.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>A simulation scenario consists of a simulation model, an initial state definition and a
				user interface definition, including a statistics UI and an animation UI. A
				simulation model consists of an optional space model, a set of entity type
				definitions, including different categories of event, message, object and agent
				types and a set of rules, which define causality laws governing the environment's
				state changes and the causation of follow-up events.</para>
			<para>Both the behavior of the environment and the behavior of agents are modeled with the help
				of rules. Rules are defined as follows, <citation>AOR2011</citation></para>
			<para>A rule is a 6-tuple &lt; <emphasis role="italic">WHEN, FOR, DO, IF, THEN,
					ELSE</emphasis> > where</para>
			<itemizedlist>
				<listitem>
					<para><emphasis role="italic">WHEN</emphasis> is an event expression specifying
						the type of event that triggers the rule</para>
				</listitem>
				<listitem>
					<para><emphasis role="italic">FOR</emphasis> is a set of variable declarations,
						such that each variable is bound either to a specific object or to a set of
						objects</para>
				</listitem>
				<listitem>
					<para><emphasis role="italic">IF</emphasis> is a logical condition formula
						possibly containing variables</para>
				</listitem>
				<listitem>
					<para><emphasis role="italic">DO</emphasis>, <emphasis role="italic"
							>THEN</emphasis> and <emphasis role="italic">ELSE</emphasis> are
						execution elements consisting of two blocks:<itemizedlist>
							<listitem>
								<para><emphasis role="italic">UPDATE-ENV</emphasis> is an expression
									specifying an update of the environment state</para>
							</listitem>
							<listitem>
								<para><emphasis role="italic">SCHEDULE-EVT</emphasis> specifies a
									list of resulting events that will be scheduled</para>
							</listitem>
						</itemizedlist></para>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>AOR-JavaSim</title>
			<para>AOR-JavaSim is a java software for generating and running AOR simulations. The
				software generates executable Java code from a given simulation scenario and
				compiles this code.</para>
			<figure>
				<title>Interface of AOR-JavaSim</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="png/interface.png"/>
					</imageobject>
				</mediaobject>
			</figure>
		</section>
	</section>
	<section>
		<title>The scenario specification</title>
		<para>This section shows the reconstruction of the original model as an AOR simulation. As
			previously mentioned, in the original model for the policy experiments there are three
			types of policies. In order to show possible consequences of different policy measures,
			different scenarios need to be created. More specifically, each type of policy
			corresponds to two different scenarios characterized by the level of commuting costs.
			Thereinto, in the one scenario the commuting costs are set to zero and the other
			scenario where the commuting costs are 0.05 is to be considered. Thus, different
			scenarios can be generated by specifying alternative sets of values for the exogenous
			variables.</para>
		<section>
			<title>MinEcon_RegionalLaborMarkets.xml</title>
			<para>This section now shows the simulation file in AORSL. Each single run of the simulation
				scenario represents 5000 steps, each of which is seen as a day. The scenario model
				includes eleven variables of statistics, seven complex data types, ten message
				types, ten action event types, four agent types, several environment rules and so
				on. The subsequent descriptions will be focused on the agent types and the
				environment rules. The explanations of the others can be seen in Appendix.</para>
			<section>
				<title>Agents specification</title>
				<para>As mentioned, there are four types of agents necessary in this AOR model. All agents in
					the simulation are instances of these agent types. To be more specific, there
					are two regions, each of which hosts 200 households, 5 consumption goods
					producers and a regional market denoted as mall. There is a single capital goods
					producer. Every agent in the simulation has several reaction rules that are used
					to define the behavior of the agent.</para>
				<section>
					<title>CapitalGoodsProducer</title>
					<para>The rule <emphasis role="italic">CalculateEqualShare_Rule</emphasis> applies when the
						periodic time event <emphasis role="italic">CalculateEqualShare</emphasis>
						occurs. This event simulates at the end of every month (occurrenceTime="24")
						and occurs at every 24 steps in the simulation. This rule is used to
						calculate the equal shares which will be soon distributed to all households.
						The <emphasis role="italic">equalShare</emphasis> property holds an equal
						share for a household is determined by the amount of households. There are
						400 instances of the agent type <emphasis role="italic"
						>household</emphasis>, so the agent divides its monthly revenues into 400
						equal shares. The <emphasis role="italic">equalShare</emphasis> is expressed
						as the amount of households divided by the <emphasis role="italic"
							>investmentSalesRevenue</emphasis> property of the agent. Then, the
							<emphasis role="italic">investmentSalesRevenue</emphasis> property is
						set to 0. This event causes a thing, the agent does the <emphasis
							role="italic">PayEqualShare</emphasis> action event to pay the equal
						shares to another agent <emphasis role="italic">household</emphasis>.</para>
					<table frame="all">
						<title>Reaction Rule: CalculateEqualShare_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>CalculateEqualShare</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>
										<para>PayEqualShare</para>
										<itemizedlist>
											<listitem>
												<para>share = equalShare</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>equalShare = investmentSalesRevenue / 400</para>
											</listitem>
											<listitem>
												<para>investmentSalesRevenue = 0</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section>
					<title>Mall</title>
					<para>The rule <emphasis role="italic">AtStartOfMonthCheckStockLevel_Rule</emphasis> is used
						when the periodic time event <emphasis role="italic"
							>AtStartOfMonthCheckStockLevel</emphasis> occurs. This event simulates
						at the beginning of every month (occurrenceTime="2") and occurs at every 24
						steps during the running of the simulation. This rule is used to check the
						current inventories of consumption goods. The result of the reaction rule is
						the creation of a new outgoing message to report the current stock level of
						every product to the corresponding CGP. The value of the <emphasis
							role="italic">quantity</emphasis> property of the message is obtained
						from the <emphasis role="italic">productsInStock</emphasis> list of the
						agent.</para>
					<table frame="all">
						<title>Reaction Rule: AtStartOfMonthCheckStockLevel_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>AtStartOfMonthCheckStockLevel</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>ProductInStock p : productsInStock</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>
										<para>TellCurrentStockLevel</para>
										<itemizedlist>
											<listitem>
												<para>receiverIdRef = p.firmId</para>
											</listitem>
											<listitem>
												<para>quantity = p.quantity</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>-</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">DeliverProduct_Rule</emphasis> applies in case a message
						of type <emphasis role="italic">DeliverProduct</emphasis> is received by the
						agent. This will increase the inventory of the target product by the
							<emphasis role="italic">quantity</emphasis> property of the message. To
						that end, the <emphasis role="italic">updateInventory</emphasis> function of
						the agent is called. It has two parameters: <emphasis role="italic"
							>firmId</emphasis> and <emphasis role="italic">quantity</emphasis>.
							<emphasis role="italic">firmId</emphasis> holds the "identity" of the
						sender of the message and <emphasis role="italic">quantity</emphasis> holds
						the <emphasis role="italic">quantity</emphasis> property of the message. The
						function is used to update the value of the <emphasis role="italic"
							>quantity</emphasis> property of the selected record of the <emphasis
							role="italic">productsInStock</emphasis> list.</para>
					<table frame="all">
						<title>Reaction Rule: DeliverProduct_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>DeliverProduct</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>updateInventory(firmId, quantity)</para>
										<itemizedlist>
											<listitem>
												<para>firmId = InMessageEvent.senderIdRef</para>
											</listitem>
											<listitem>
												<para>quantity = DeliverProduct.quantity</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section>
					<title>ConsumptionGoodsProducer</title>
					<para>The rule <emphasis role="italic">TellCurrentStockLevel_Rule</emphasis> applies when a
						message of type <emphasis role="italic">TellCurrentStockLevel</emphasis> is
						received. The agent will check whether the stock it keeps at the mall has to
						be refilled based on the given condition. If statement needs to be used. If
						the <emphasis role="italic">quantity</emphasis> property of the message is
						greater than or equal to the <emphasis role="italic"
							>optimalStockLevel</emphasis>, the desired replenishment quantity of the
						product is set to zero. In the opposite case, the desired replenishment
						quantity is obtained by deducting the <emphasis role="italic"
							>quantity</emphasis> property of the message from the <emphasis
							role="italic">optimalStockLevel</emphasis>. When the desired
						replenishment quantity is fixed, a new record which has three attributes
						(that is, <emphasis role="italic">mallId</emphasis>, <emphasis role="italic"
							>quantity</emphasis> and <emphasis role="italic"
							>adjustmentFactor</emphasis>) will be added to the bottom of the
							<emphasis role="italic">inventoryPositions</emphasis> list of the
						agent.</para>
					<table frame="all">
						<title>Reaction Rule: TellCurrentStockLevel_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellCurrentStockLevel</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>TellCurrentStockLevel.quantity >=
										demandRecordFromListWithId(InMessageEvent.senderIdRef).optimalStockLevel</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>inventoryPositions</para>
										<itemizedlist>
											<listitem>
												<para>new InventoryPosition()</para>
												<itemizedlist>
												<listitem>
												<para>mallId = InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>quantity = 0</para>
												</listitem>
												<listitem>
												<para>adjustmentFactor = 0</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>TellCurrentStockLevel.quantity &lt;
										demandRecordFromListWithId(InMessageEvent.senderIdRef).optimalStockLevel</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>inventoryPositions</para>
										<itemizedlist>
											<listitem>
												<para>new InventoryPosition()</para>
												<itemizedlist>
												<listitem>
												<para>mallId = InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>quantity =
												demandRecordFromListWithId(InMessageEvent.senderIdRef).optimalStockLevel
												- TellCurrentStockLevel.quantity</para>
												</listitem>
												<listitem>
												<para>adjustmentFactor = 0</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">MakeProductionPlan_Rule</emphasis> is used when the
						periodic time event <emphasis role="italic">MakeProductionPlan</emphasis>
						occurs. This event occurs when the agent starts making its production plan
						(occurrenceTime="4") and is repeated every 24 steps. This rule is used to
						determine the demand of two input factors (labor and capital) for
						production. For that purpose, the <emphasis role="italic"
							>determineProductionPlan</emphasis> function of the agent is called.
						This function is constructed based on CES production functions that have
						been mentioned above. It has five arguments: <emphasis role="italic"
							>laborPrice</emphasis>, <emphasis role="italic"
							>investmentPrice</emphasis>, <emphasis role="italic"
							>plannedProductionQuantity</emphasis>, <emphasis role="italic"
							>averageSpecificSkillLevel</emphasis> and <emphasis role="italic"
							>averageCapitalStockQuality</emphasis>. <emphasis role="italic"
							>laborPrice</emphasis> holds the average wage of employees of the agent.
							<emphasis role="italic">investmentPrice</emphasis> holds the price of
						the investment good. <emphasis role="italic"
							>plannedProductionQuantity</emphasis> holds the planned output based on
						the desired replenishment quantity of the product for each mall. <emphasis
							role="italic">averageSpecificSkillLevel</emphasis> denotes the average
						specific skill level of workers and <emphasis role="italic"
							>averageCapitalStockQuality</emphasis> denotes the average quality of
						the capital stock of the agent. The event <emphasis role="italic"
							>MakeProductionPlan</emphasis> causes several things. First, the agent
						does the <emphasis role="italic">BuyNewInvestment</emphasis> action event to
						purchase the needed amount of investments from the IGP. This event triggers
						if the <emphasis role="italic">newInvestment</emphasis> property of the
						agent is greater than zero. Second, the agent does the <emphasis
							role="italic">DismissWorker</emphasis> action event to downsize the
						labor force. Finally, the agent creates an action event <emphasis
							role="italic">PostVacancyInformation</emphasis>, if the value of the
							<emphasis role="italic">laborSupplyQuantity</emphasis> property of the
						agent is larger than zero.</para>
					<table frame="all">
						<title>Reaction Rule: MakeProductionPlan_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>MakeProductionPlan</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>
										<para>BuyNewInvestment</para>
										<itemizedlist>
											<listitem>
												<para>newInvestment > 0</para>
											</listitem>
										</itemizedlist>
										<para>DismissWorker</para>
										<itemizedlist>
											<listitem>
												<para>downsizingIncumbentWorkforce()</para>
											</listitem>
										</itemizedlist>
										<para>PostVacancyInformation</para>
										<itemizedlist>
											<listitem>
												<para>laborSupplyQuantity > 0</para>
											</listitem>
											<listitem>
												<para>delay = 3</para>
											</listitem>
											<listitem>
												<para>firmId = id</para>
											</listitem>
											<listitem>
												<para>wageOffer = wageOffer *
												determineAverageSpecificSkillLevel()</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>determineProductionPlan(laborPrice, investmentPrice,
											plannedProductionQuantity, averageSpecificSkillLevel,
											averageCapitalStockQuality)</para>
										<itemizedlist>
											<listitem>
												<para>laborPrice = determineLaborCost() /
												workersInFirm.size</para>
											</listitem>
											<listitem>
												<para>investmentPrice =
												Global.investmentSalesPrice</para>
											</listitem>
											<listitem>
												<para>plannedProductionQuantity =
												desireProductionQuantity()</para>
											</listitem>
											<listitem>
												<para>averageSpecificSkillLevel =
												determineAverageSpecificSkillLevel()</para>
											</listitem>
											<listitem>
												<para>averageCapitalStockQuality =
												averageQualityOfCapitalStock</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">TellSalesRevenue_Rule</emphasis> applies
						in case a message of type <emphasis role="italic"
							>TellSalesRevenue</emphasis> is received by the agent. This will
						increase the <emphasis role="italic">productSalesRevenue</emphasis> property
						and <emphasis role="italic">productSalesQuantity</emphasis> property of the
						agent by the corresponding <emphasis role="italic">revenue</emphasis>
						property and <emphasis role="italic">quantity</emphasis> property of the
						message. There is nothing else to do in this case.</para>
					<table frame="all">
						<title>Reaction Rule: TellSalesRevenue_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellSalesRevenue</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>productSalesRevenue = productSalesRevenue +
												TellSalesRevenue.revenue</para>
											</listitem>
											<listitem>
												<para>productSalesQuantity = productSalesQuantity +
												TellSalesRevenue.quantity</para>
											</listitem>
											<listitem>
												<para>updateDemand(mallId, demand)</para>
												<itemizedlist>
												<listitem>
												<para>mallId = InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>demand = TellSalesRevenue.quantity</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">TellVacancy_Rule</emphasis> applies in
						case a message of type <emphasis role="italic">TellVacancy</emphasis> is
						received. The agent receives informations from the applicants about their
						respective general as well as specific skill levels, and then adds these
						informations to the bottom of the <emphasis role="italic"
							>jobApplications</emphasis> list of the agent.</para>
					<table frame="all">
						<title>Reaction Rule: TellVacancy_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellVacancy</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>jobApplications</para>
										<itemizedlist>
											<listitem>
												<para>new JobApplicationRecord()</para>
												<itemizedlist>
												<listitem>
												<para>householdId =
												InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>generalSkillLevel =
												TellVacancy.generalSkillLevel</para>
												</listitem>
												<listitem>
												<para>specificSkillLevel =
												TellVacancy.specificSkillLevel</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">InFirstIterationRankApplicant_Rule</emphasis> is used
						when the periodic time event <emphasis role="italic"
							>InFirstIterationRankApplicant</emphasis> occurs. This event occurs when
						the agent ranks the applicants in the first round (occurrenceTime="9") and
						is repeated every 24 steps. It applies only when the size of the <emphasis
							role="italic">jobApplications</emphasis> list is greater than zero. This
						rule is used to choose the best applicants for the positions that are
						needed. Thus, the <emphasis role="italic">determineJobOffer</emphasis>
						function of the agent is called. It sorts and updates the <emphasis
							role="italic">jobApplications</emphasis> list. This event causes a
						thing, the agent does the <emphasis role="italic"
							>InFirstIterationOfferJob</emphasis> action event to send job offers to
						the highest ranked applicants.</para>
					<table frame="all">
						<title>Reaction Rule: InFirstIterationRankApplicant_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>InFirstIterationRankApplicant</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>jobApplications.size > 0</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>InFirstIterationOfferJob</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineJobOffer()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">AcceptJob_Rule</emphasis> applies in case
						a message of type <emphasis role="italic">AcceptJob</emphasis> is received
						by the agent. This rule is used to update the <emphasis role="italic"
							>laborSupplyQuantity</emphasis> property and the <emphasis role="italic"
							>workersInFirm</emphasis> list of the agent. The value of the <emphasis
							role="italic">laborSupplyQuantity</emphasis> property minus one.
						Moreover, the informations which contains the message sender, the <emphasis
							role="italic">wage</emphasis> property of the message, the <emphasis
							role="italic">generalSkillLevel</emphasis> property of the message and
						the <emphasis role="italic">specificSkillLevel</emphasis> property of the
						message will be added to the bottom of the <emphasis role="italic"
							>workersInFirm</emphasis> list of the agent.</para>
					<table frame="all">
						<title>Reaction Rule: AcceptJob_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>AcceptJob</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>laborSupplyQuantity = laborSupplyQuantity -
												1</para>
											</listitem>
											<listitem>
												<para>workersInFirm</para>
												<itemizedlist>
												<listitem>
												<para>new WorkerInFirm()</para>
												<itemizedlist>
												<listitem>
												<para>householdId =
												InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>wage = AcceptJob.wage</para>
												</listitem>
												<listitem>
												<para>generalSkillLevel =
												AcceptJob.generalSkillLevel</para>
												</listitem>
												<listitem>
												<para>specificSkillLevel =
												AcceptJob.specificSkillLevel</para>
												</listitem>
												</itemizedlist>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">ResignJob_Rule</emphasis> applies in case
						a message of type <emphasis role="italic">ResignJob</emphasis> is received.
						The agent receives resignation from its employee and drops him from the list
						of workers. Specifically, the value of the <emphasis role="italic"
							>laborSupplyQuantity</emphasis> property of the agent is increased by
						one. In order to delete a record from the <emphasis role="italic"
							>workersInFirm</emphasis> list, the <emphasis role="italic"
							>deleteWorkerRecordFromList</emphasis> function of the agent is called
						with a parameter <emphasis role="italic">householdId</emphasis> which holds
						the message sender. It first determines the record whose <emphasis
							role="italic">householdId</emphasis> property is equal to the "identity"
						of the sender of the message, and then delete this record from the <emphasis
							role="italic">workersInFirm</emphasis> list.</para>
					<table frame="all">
						<title>Reaction Rule: ResignJob_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>ResignJob</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>laborSupplyQuantity = laborSupplyQuantity +
												1</para>
											</listitem>
											<listitem>
												<para>deleteWorkerRecordFromList(householdId)</para>
												<itemizedlist>
												<listitem>
												<para>householdId =
												InMessageEvent.senderIdRef</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">StartSecondIterationLaborSupply_Rule</emphasis> carries
						out when the periodic time event <emphasis role="italic"
							>StartSecondIterationLaborSupply</emphasis> occurs. This event happens
						at the beginning of the second iteration of hiring activity
						(occurrenceTime="15") and is also repeated every 24 steps. It is used only
						when the <emphasis role="italic">laborSupplyQuantity</emphasis> property of
						the agent is greater than zero. This event causes a thing, the agent does
						the <emphasis role="italic">PostVacancyInformation</emphasis> action event
						to post vacancies for job seekers.</para>
					<table frame="all">
						<title>Reaction Rule: StartSecondIterationLaborSupply_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>StartSecondIterationLaborSupply</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>laborSupplyQuantity > 0</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>
										<para>PostVacancyInformation</para>
										<itemizedlist>
											<listitem>
												<para>firmId = id</para>
											</listitem>
											<listitem>
												<para>wageOffer = wageOffer *
												determineAverageSpecificSkillLevel()</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>-</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">InSecondIterationRankApplicant_Rule</emphasis> is used
						when the periodic time event <emphasis role="italic"
							>InSecondIterationRankApplicant</emphasis> occurs. This event occurs
						when the agent ranks the applicants in the second round
						(occurrenceTime="18") and is repeated every 24 steps. The content of this
						rule is the same as that of the <emphasis role="italic"
							>InFirstIterationRankApplicant_Rule</emphasis> rule.</para>
					<table frame="all">
						<title>Reaction Rule: InSecondIterationRankApplicant_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>InSecondIterationRankApplicant</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>jobApplications.size > 0</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>InFirstIterationOfferJob</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineJobOffer()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">StartOfProduction_Rule</emphasis> applies when the
						periodic time event <emphasis role="italic">StartOfProduction</emphasis>
						occurs. This event simulates at the end of every month (occurrenceTime="23")
						and occurs at every 24 steps in the simulation. This rule is used to
						calculate the produced quantities. To do this the <emphasis role="italic"
							>productionProgress</emphasis> function of the agent is called. The
						function is created based on Cobb-Douglas type production function which has
						been mentioned above. The value of the <emphasis role="italic"
							>producedQuantity</emphasis> property of the agent is updated by using
						this function. The event <emphasis role="italic"
							>StartOfProduction</emphasis> causes several things. First, the agent
						creates an action event <emphasis role="italic">DistributeProduct</emphasis>
						to deliver the produced quantities. Second, the agent does the <emphasis
							role="italic">PayWage</emphasis> action event to pay wages to employees.
						Finally, the agent does the <emphasis role="italic"
							>IncreaseSpecificSkillLevel</emphasis> action event to improve the
						specific skill levels of workers.</para>
					<table frame="all">
						<title>Reaction Rule: StartOfProduction_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>StartOfProduction</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>
										<para>DistributeProduct</para>
										<para>PayWage</para>
										<para>IncreaseSpecificSkillLevel</para>
									</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>productionProgress(averageSpecificSkillLevel,
											averageCapitalStockQuality, labor, investment)</para>
										<itemizedlist>
											<listitem>
												<para>averageSpecificSkillLevel =
												determineAverageSpecificSkillLevel()</para>
											</listitem>
											<listitem>
												<para>averageCapitalStockQuality =
												averageQualityOfCapitalStock</para>
											</listitem>
											<listitem>
												<para>labor = workersInFirm.size</para>
											</listitem>
											<listitem>
												<para>investment = grossInvestment</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">CalculateDividend_Rule</emphasis> is used when the
						periodic time event <emphasis role="italic">CalculateDividend</emphasis>
						occurs. This event simulates at the end of every month (occurrenceTime="24")
						and occurs at every 24 steps in the simulation. This rule is used to
						calculate the dividends. The <emphasis role="italic"
							>determineDividend</emphasis> function is called to determine the
						dividends based on the algorithm of dividend payment decision of the agent.
						The event <emphasis role="italic">CalculateDividend</emphasis> causes two
						things. First, the agent creates an action event <emphasis role="italic"
							>PayDividend</emphasis>, if the <emphasis role="italic"
							>equalDividend</emphasis> property of the agent is greater than zero.
						Second, the agent does the <emphasis role="italic">SetNewPrice</emphasis>
						action event to adjust the product price of the agent. This event has one
						attribute which records the new price.</para>
					<table frame="all">
						<title>Reaction Rule: CalculateDividend_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>CalculateDividend</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>
										<para>PayDividend</para>
										<itemizedlist>
											<listitem>
												<para>equalDividend > 0</para>
											</listitem>
											<listitem>
												<para>dividend = equalDividend</para>
											</listitem>
										</itemizedlist>
										<para>SetNewPrice</para>
										<itemizedlist>
											<listitem>
												<para>price = productSalesPrice</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineDividend()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section>
					<title>household</title>
					<para>The rule <emphasis role="italic">AtStartOfMonthDetermineConsumptionBudget_Rule</emphasis>
						is used when the periodic time event <emphasis role="italic"
							>AtStartOfMonthDetermineConsumptionBudget</emphasis> occurs. This event
						occurs when the agent intends to set the budget which will be spent on
						consumption (occurrenceTime="2") and is repeated every 24 steps. This rule
						is used to determine how much to spend and how much to save based on the
						personal income of the agent. For that purpose, the <emphasis role="italic"
							>determineConsumptionBudget</emphasis> function of the agent is
						called.</para>
					<table frame="all">
						<title>Reaction Rule: AtStartOfMonthDetermineConsumptionBudget_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>AtStartOfMonthDetermineConsumptionBudget</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineConsumptionBudget()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">TellDismissal_Rule</emphasis> applies in
						case a message of type <emphasis role="italic">TellDismissal</emphasis> is
						received by the agent. This will change several properties of the agent.
						First, the <emphasis role="italic">lastFirm</emphasis> property is updated
						to the <emphasis role="italic">firm</emphasis> property of the agent.
						Second, the <emphasis role="italic">firm</emphasis> property is set to 100.
						Finally, the value of the <emphasis role="italic">jobSeeker</emphasis>
						property of the agent is set true.</para>
					<table frame="all">
						<title>Reaction Rule: TellDismissal_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellDismissal</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>lastFirm = firm</para>
											</listitem>
											<listitem>
												<para>firm = 100</para>
											</listitem>
											<listitem>
												<para>jobSeeker = true</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">JobOffer_Rule</emphasis> applies when a message of type
							<emphasis role="italic">JobOffer</emphasis> is received by the agent. A
						new record which has three attributes (such as <emphasis role="italic"
							>firmId</emphasis>, <emphasis role="italic">wageOffer</emphasis> and
							<emphasis role="italic">netWageOffer</emphasis>) will be added to the
						bottom of the <emphasis role="italic">jobOffers</emphasis> list of the
						agent. <emphasis role="italic">firmId</emphasis> holds the "identity" of the
						sender of the message and <emphasis role="italic">wageOffer</emphasis> holds
						the <emphasis role="italic">wageOffer</emphasis> property of the message.
							<emphasis role="italic">netWageOffer</emphasis> is determined by if
						statement. More specifically, if the <emphasis role="italic"
							>region</emphasis> property of the message is equal to the <emphasis
							role="italic">region</emphasis> property of the agent, the value of
							<emphasis role="italic">netWageOffer</emphasis> is the equivalent of the
						value of <emphasis role="italic">wageOffer</emphasis>. In the opposite case,
							<emphasis role="italic">netWageOffer</emphasis> is measured by
						subtracting the commuting costs from the <emphasis role="italic"
							>wageOffer</emphasis> property of the message.</para>
					<table frame="all">
						<title>Reaction Rule: JobOffer_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>JobOffer</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>JobOffer.region == region</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>jobOffers</para>
										<itemizedlist>
											<listitem>
												<para>new JobOfferRecord()</para>
												<itemizedlist>
												<listitem>
												<para>firmId = InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>wageOffer = JobOffer.wageOffer</para>
												</listitem>
												<listitem>
												<para>netWageOffer = JobOffer.wageOffer</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>JobOffer.region != region</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<para>jobOffers</para>
										<itemizedlist>
											<listitem>
												<para>new JobOfferRecord()</para>
												<itemizedlist>
												<listitem>
												<para>firmId = InMessageEvent.senderIdRef</para>
												</listitem>
												<listitem>
												<para>wageOffer = JobOffer.wageOffer</para>
												</listitem>
												<listitem>
												<para>netWageOffer = JobOffer.wageOffer -
												Global.comm</para>
												</listitem>
												</itemizedlist>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">InFirstIterationAcceptJob_Rule</emphasis> is used when
						the periodic time event <emphasis role="italic"
							>InFirstIterationAcceptJob</emphasis> occurs. This event occurs in the
						first round of labor supply when the agent intends to accept a new job
						(occurrenceTime="12") and is repeated every 24 steps. It applies only when
						the size of the <emphasis role="italic">jobOffers</emphasis> list is greater
						than zero. The <emphasis role="italic">determineJobAcceptance</emphasis>
						function of the agent is called. It is used to sort the <emphasis
							role="italic">jobOffers</emphasis> list and select the highest ranked
						record. This event causes several things. First, the agent creates a new
						outgoing message <emphasis role="italic">AcceptJob</emphasis> to accept the
						new position. The message which has three attributes (that is, <emphasis
							role="italic">wage</emphasis>, <emphasis role="italic"
							>generalSkillLevel</emphasis> and <emphasis role="italic"
							>specificSkillLevel</emphasis>) will be sent to the CGP which provides
						this position. The <emphasis role="italic">wage</emphasis> property holds
						the <emphasis role="italic">currentWage</emphasis> property of the agent.
						The <emphasis role="italic">generalSkillLevel</emphasis> property holds the
							<emphasis role="italic">generalSkillLevel</emphasis> property of the
						agent and the <emphasis role="italic">specificSkillLevel</emphasis> property
						holds the <emphasis role="italic">specificSkillLevel</emphasis> property of
						the agent. The next result of the reaction rule is the creation of another
						new outgoing message <emphasis role="italic">ResignJob</emphasis> to resign
						the old position, if the value of the <emphasis role="italic"
							>lastFirm</emphasis> property of the agent is not equal to 100.</para>
					<table frame="all">
						<title>Reaction Rule: InFirstIterationAcceptJob_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>InFirstIterationAcceptJob</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>jobOffers.size > 0</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>
										<para>AcceptJob</para>
										<itemizedlist>
											<listitem>
												<para>receiverIdRef = firm</para>
											</listitem>
											<listitem>
												<para>wage = currentWage</para>
											</listitem>
											<listitem>
												<para>generalSkillLevel = generalSkillLevel</para>
											</listitem>
											<listitem>
												<para>specificSkillLevel = specificSkillLevel</para>
											</listitem>
										</itemizedlist>
										<para>ResignJob</para>
										<itemizedlist>
											<listitem>
												<para>lastFirm != 100</para>
											</listitem>
											<listitem>
												<para>receiverIdRef = lastFirm</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineJobAcceptance()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">InSecondIterationAcceptJob_Rule</emphasis> is used when
						the periodic time event <emphasis role="italic"
							>InSecondIterationAcceptJob</emphasis> occurs. This event occurs in the
						second round of labor supply when the agent intends to accept a new job
						(occurrenceTime="21") and is repeated every 24 steps. The content of this
						rule is the same as that of the <emphasis role="italic"
							>InFirstIterationAcceptJob_Rule</emphasis> rule.</para>
					<table frame="all">
						<title>Reaction Rule: InSecondIterationAcceptJob_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>InSecondIterationAcceptJob</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>jobOffers.size > 0</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>
										<para>AcceptJob</para>
										<itemizedlist>
											<listitem>
												<para>receiverIdRef = firm</para>
											</listitem>
											<listitem>
												<para>wage = currentWage</para>
											</listitem>
											<listitem>
												<para>generalSkillLevel = generalSkillLevel</para>
											</listitem>
											<listitem>
												<para>specificSkillLevel = specificSkillLevel</para>
											</listitem>
										</itemizedlist>
										<para>ResignJob</para>
										<itemizedlist>
											<listitem>
												<para>lastFirm != 100</para>
											</listitem>
											<listitem>
												<para>receiverIdRef = lastFirm</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>determineJobAcceptance()</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">TellWage_Rule</emphasis> applies in case
						a message of type <emphasis role="italic">TellWage</emphasis> is received.
						The agent receives the wage for the full month from his employer. If
						statement is used. More specifically, if the <emphasis role="italic"
							>region</emphasis> property of the message is equal to the <emphasis
							role="italic">region</emphasis> property of the agent, the <emphasis
							role="italic">laborIncome</emphasis> property of the agent is the
						equivalent of the <emphasis role="italic">wage</emphasis> property of the
						message. In the opposite case, the <emphasis role="italic"
							>laborIncome</emphasis> property is measured by subtracting the
						commuting costs from the <emphasis role="italic">wage</emphasis> property of
						the message. When the <emphasis role="italic">laborIncome</emphasis>
						property is fixed, the value of the <emphasis role="italic"
							>currentIncome</emphasis> property of the agent is increased by the
						value of <emphasis role="italic">laborIncome</emphasis>.</para>
					<table frame="all">
						<title>Reaction Rule: TellWage_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellWage</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>TellWage.region == region</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>laborIncome = TellWage.wage</para>
											</listitem>
											<listitem>
												<para>currentIncome = currentIncome +
												laborIncome</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>TellWage.region != region</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>laborIncome = TellWage.wage -
												Global.comm</para>
											</listitem>
											<listitem>
												<para>currentIncome = currentIncome +
												laborIncome</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>The rule <emphasis role="italic">TellSpecificSkillLevel_Rule</emphasis>
						applies when a message of type <emphasis role="italic"
							>TellSpecificSkillLevel</emphasis> is received by the agent. This will
						change the specific skill level of the agent. Thus, the <emphasis
							role="italic">specificSkillLevel</emphasis> property of the agent is
						updated to the <emphasis role="italic">specificSkillLevel</emphasis>
						property of the message. There is nothing else to do in this case.</para>
					<table frame="all">
						<title>Reaction Rule: TellSpecificSkillLevel_Rule</title>
						<tgroup cols="2" align="left">
							<colspec colname="c1" colnum="1" colwidth="0.5*"/>
							<colspec colname="c2" colnum="2" colwidth="1.5*"/>
							<tbody>
								<row>
									<entry>Triggering Event</entry>
									<entry>TellSpecificSkillLevel</entry>
								</row>
								<row>
									<entry>Declaration</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Condition</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Actions</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>Resulting Messages</entry>
									<entry>-</entry>
								</row>
								<row>
									<entry>State Effects</entry>
									<entry>
										<itemizedlist>
											<listitem>
												<para>specificSkillLevel =
												TellSpecificSkillLevel.specificSkillLevel</para>
											</listitem>
										</itemizedlist>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
			</section>
			<section>
				<title>EnvironmentRules</title>
				<para>The rule <emphasis role="italic">Create_InitialProductsInStock_Rule</emphasis> is carried
					out, when an exogenous event <emphasis role="italic">Init</emphasis> occurs.
					This event happens at the beginning of the simulation (occurrenceTime="1") and
					occurs only once. It is used to create some values of initial state. Back to
					this rule, at first a variable <emphasis role="italic">m</emphasis> of a
						<emphasis role="italic">Mall</emphasis> type and a variable <emphasis
						role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type are declared. Then the new record
					which has three attributes (that is, <emphasis role="italic">firmId</emphasis>,
						<emphasis role="italic">price</emphasis> and <emphasis role="italic"
						>quantity</emphasis>) will be added to the bottom of the empty list
						<emphasis role="italic">productsInStock</emphasis> of the variable <emphasis
						role="italic">m</emphasis>. Meanwhile, the new record which has four
					attributes (that is, <emphasis role="italic">mallId</emphasis>, <emphasis
						role="italic">demand</emphasis>, <emphasis role="italic"
						>maximumDemand</emphasis> and <emphasis role="italic"
						>optimalStockLevel</emphasis>) will be added to the bottom of the empty list
						<emphasis role="italic">productDemands</emphasis> of the variable <emphasis
						role="italic">f</emphasis>.</para>
				<table frame="all">
					<title>Environment Rule: Create_InitialProductsInStock_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>Init</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>Mall m</para>
									<para>ConsumptionGoodsProducer f</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>m</para>
									<itemizedlist>
										<listitem>
											<para>productsInStock</para>
											<itemizedlist>
												<listitem>
												<para>new ProductInStock()</para>
												<itemizedlist>
												<listitem>
												<para>firmId = f.id</para>
												</listitem>
												<listitem>
												<para>price = f.productSalesPrice</para>
												</listitem>
												<listitem>
												<para>quantity = 8</para>
												</listitem>
												</itemizedlist>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>productDemands</para>
											<itemizedlist>
												<listitem>
												<para>new ProductDemandRecord()</para>
												<itemizedlist>
												<listitem>
												<para>mallId = m.id</para>
												</listitem>
												<listitem>
												<para>demand = 0</para>
												</listitem>
												<listitem>
												<para>maximumDemand = 8</para>
												</listitem>
												<listitem>
												<para>optimalStockLevel = 0</para>
												</listitem>
												</itemizedlist>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>Create_InitialUnemployedWorkerAsJobSeeker_Rule</emphasis> is also used when
					the exogenous event <emphasis role="italic">Init</emphasis> occurs. A variable
						<emphasis role="italic">h</emphasis> of a <emphasis role="italic"
						>Household</emphasis> type is declared. The <emphasis role="italic"
						>jobSeeker</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is set true only when the value of the <emphasis role="italic"
						>firm</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is equal to 100.</para>
				<table frame="all">
					<title>Environment Rule: Create_InitialUnemployedWorkerAsJobSeeker_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>Init</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>h.firm == 100</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>jobSeeker = true</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">Create_InitialWorkersInFirm_Rule</emphasis>
					is also used when the exogenous event <emphasis role="italic">Init</emphasis>
					occurs. A variable <emphasis role="italic">f</emphasis> of a <emphasis
						role="italic">ConsumptionGoodsProducer</emphasis> type and a variable
						<emphasis role="italic">h</emphasis> of a <emphasis role="italic"
						>Household</emphasis> type are declared. After that, the new record will be
					added to the bottom of the empty list <emphasis role="italic"
						>workersInFirm</emphasis> of the variable <emphasis role="italic"
						>f</emphasis> only when the "identity" of the variable <emphasis
						role="italic">f</emphasis> is equal to the <emphasis role="italic"
						>firm</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis>.</para>
				<table frame="all">
					<title>Environment Rule: Create_InitialWorkersInFirm_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>Init</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<para>Household h</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>f.id == h.firm</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>workersInFirm</para>
											<itemizedlist>
												<listitem>
												<para>new WorkerInFirm()</para>
												<itemizedlist>
												<listitem>
												<para>householdId = h.id</para>
												</listitem>
												<listitem>
												<para>wage = h.currentWage</para>
												</listitem>
												<listitem>
												<para>generalSkillLevel =
												h.generalSkillLevel</para>
												</listitem>
												<listitem>
												<para>specificSkillLevel =
												h.specificSkillLevel</para>
												</listitem>
												</itemizedlist>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>AtStartOfMonthDetermineEmployedWorkerAsJobSeeker_Rule</emphasis> applies
					when an exogenous event <emphasis role="italic">StartOfMonth</emphasis> occurs.
					This event simulates at the beginning of every month (occurrenceTime="2") and
					occurs at every 24 steps during the running of the simulation. The household
					decides whether to search on the job or not. A variable <emphasis role="italic"
						>h</emphasis> of a <emphasis role="italic">Household</emphasis> type is
					declared. The <emphasis role="italic">jobSeeker</emphasis> property of the
					variable <emphasis role="italic">h</emphasis> is set true, when the value of the
						<emphasis role="italic">firm</emphasis> property of the variable <emphasis
						role="italic">h</emphasis> is not equal to 100 and the global function
					returns true.</para>
				<table frame="all">
					<title>Environment Rule:
						AtStartOfMonthDetermineEmployedWorkerAsJobSeeker_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>StartOfMonth</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>h.firm != 100 and Global.wouldBeJobSeeker()</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>jobSeeker = true</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">AtWeeklyIndividualConsumption_Rule</emphasis> is used
					when an exogenous event <emphasis role="italic"
						>AtWeeklyIndividualConsumption</emphasis> occurs. This event triggers the
					consumption activities of households (occurrenceTime="3"). It is repeated every
					6 steps, namely on a weekly basis. A variable <emphasis role="italic"
						>m</emphasis> of a <emphasis role="italic">Mall</emphasis> type and a
					variable <emphasis role="italic">h</emphasis> of a <emphasis role="italic"
						>Household</emphasis> type are declared. For this rule to take place, a
					condition must be satisfied. The "identity" of the variable <emphasis
						role="italic">m</emphasis> must be equal to the <emphasis role="italic"
						>region</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis>. Then the <emphasis role="italic"
						>consumptionDecision</emphasis> function of the variable <emphasis
						role="italic">h</emphasis> is called. It is used to choose products from the
						<emphasis role="italic">productsInStock</emphasis> list of the variable
						<emphasis role="italic">m</emphasis> according to the algorithm of choice of
					consumption goods of the agent <emphasis role="italic">household</emphasis>.
					This rule may result in creating twice messages of type <emphasis role="italic"
						>TellSalesRevenue</emphasis>. First, a message is sent to an agent whose
					"identity" is equal to the value of the <emphasis role="italic"
						>selectFirstProductId</emphasis> property of the variable <emphasis
						role="italic">h</emphasis> by the variable <emphasis role="italic"
						>m</emphasis>, when the <emphasis role="italic"
						>selectFirstProductId</emphasis> property is not equal to 0. Second, the
					variable <emphasis role="italic">m</emphasis> needs to send a message to an
					agent whose "identity" is equal to the <emphasis role="italic"
						>selectSecondProductId</emphasis> property of the variable <emphasis
						role="italic">h</emphasis> only when the <emphasis role="italic"
						>selectSecondProductId</emphasis> property is not equal to 0.</para>
				<table frame="all">
					<title>Environment Rule: AtWeeklyIndividualConsumption_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>AtWeeklyIndividualConsumption</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>Mall m</para>
									<para>Household h</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>m.id == h.region</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>TellSalesRevenue</para>
									<itemizedlist>
										<listitem>
											<para>h.selectFirstProductId != 0</para>
										</listitem>
										<listitem>
											<para>senderIdRef = m.id</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = h.selectFirstProductId</para>
										</listitem>
										<listitem>
											<para>revenue = h.spendBudgetForFirstProduct</para>
										</listitem>
										<listitem>
											<para>quantity =
												h.purchaseQuantityForFirstProduct</para>
										</listitem>
									</itemizedlist>
									<para>TellSalesRevenue</para>
									<itemizedlist>
										<listitem>
											<para>h.selectSecondProductId != 0</para>
										</listitem>
										<listitem>
											<para>senderIdRef = m.id</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = h.selectSecondProductId</para>
										</listitem>
										<listitem>
											<para>revenue = h.spendBudgetForSecondProduct</para>
										</listitem>
										<listitem>
											<para>quantity =
												h.purchaseQuantityForSecondProduct</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>consumptionDecision(productsCollection)</para>
											<itemizedlist>
												<listitem>
												<para>productsCollection =
												m.productsInStock</para>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">ConsumptionGoodsProducerBuyNewInvestment_Rule</emphasis>
					is used when an action event <emphasis role="italic">BuyNewInvestment</emphasis>
					is perceived. Two variables are declared. One is the variable <emphasis
						role="italic">i</emphasis> of a <emphasis role="italic"
						>CapitalGoodsProducer</emphasis> type. The other is the actor of the event:
					the variable <emphasis role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type. The states of the two variables
					will change. The <emphasis role="italic">investmentSalesRevenue</emphasis>
					property of the variable <emphasis role="italic">i</emphasis> is increased by
					the <emphasis role="italic">newInvestment</emphasis> property of the variable
						<emphasis role="italic">f</emphasis>. Then the <emphasis role="italic"
						>grossInvestment</emphasis>, <emphasis role="italic"
						>physicalCapitalStock</emphasis>, <emphasis role="italic"
						>totalQualityOfCapitalStock</emphasis> and <emphasis role="italic"
						>averageQualityOfCapitalStock</emphasis> property of the variable <emphasis
						role="italic">f</emphasis> will be updated.</para>
				<table frame="all">
					<title>Environment Rule: ConsumptionGoodsProducerBuyNewInvestment_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>BuyNewInvestment</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>CapitalGoodsProducer i</para>
									<itemizedlist>
										<listitem>
											<para>objectIdRef = 11</para>
										</listitem>
									</itemizedlist>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef = BuyNewInvestment.actor</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>i</para>
									<itemizedlist>
										<listitem>
											<para>investmentSalesRevenue = i.investmentSalesRevenue
												+ f.newInvestment</para>
										</listitem>
									</itemizedlist>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>grossInvestment = f.grossInvestment +
												f.newInvestment</para>
										</listitem>
										<listitem>
											<para>physicalCapitalStock = f.physicalCapitalStock +
												f.newInvestment / Global.investmentSalesPrice</para>
										</listitem>
										<listitem>
											<para>totalQualityOfCapitalStock =
												f.totalQualityOfCapitalStock + f.newInvestment /
												Global.investmentSalesPrice *
												Global.qualityOfInvestment</para>
										</listitem>
										<listitem>
											<para>averageQualityOfCapitalStock =
												f.totalQualityOfCapitalStock /
												f.physicalCapitalStock</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>ConsumptionGoodsProducerDismissWorker_Rule</emphasis> applies when an
					action event <emphasis role="italic">DismissWorker</emphasis> is perceived by a
					declared variable <emphasis role="italic">f</emphasis> of a <emphasis
						role="italic">ConsumptionGoodsProducer</emphasis> type. Afterwards, a
					variable <emphasis role="italic">w</emphasis> of a <emphasis role="italic"
						>WorkerInFirm</emphasis> type which denotes the <emphasis role="italic"
						>dismissalsList</emphasis> list of the variable <emphasis role="italic"
						>f</emphasis> is also declared. After that, the <emphasis role="italic"
						>laborSupplyQuantity</emphasis> property of the variable <emphasis
						role="italic">f</emphasis> is increased by one and the <emphasis
						role="italic">deleteWorkerRecordFromList</emphasis> function is called to
					remove a record from the <emphasis role="italic">workersInFirm</emphasis> list.
					This rule only results in creating a new <emphasis role="italic"
						>TellDismissal</emphasis> message.</para>
				<table frame="all">
					<title>Environment Rule: ConsumptionGoodsProducerDismissWorker_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>DismissWorker</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef = DismissWorker.actor</para>
										</listitem>
									</itemizedlist>
									<para>WorkerInFirm w : f.dismissalsList</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>TellDismissal</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef = DismissWorker.actorIdRef</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = w.householdId</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>laborSupplyQuantity = f.laborSupplyQuantity +
												1</para>
										</listitem>
										<listitem>
											<para>deleteWorkerRecordFromList(householdId)</para>
											<itemizedlist>
												<listitem>
												<para>householdId = w.householdId</para>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>ConsumptionGoodsProducerPostVacancyInformation_Rule</emphasis> is used when
					an action event <emphasis role="italic">PostVacancyInformation</emphasis> is
					perceived. A variable <emphasis role="italic">h</emphasis> of a <emphasis
						role="italic">Household</emphasis> type is declared. To make this rule
					effective, several conditions must be satisfied simultaneously, i.e. the
						<emphasis role="italic">firmId</emphasis> property of the event is not equal
					to the <emphasis role="italic">firm</emphasis> property of the variable
						<emphasis role="italic">h</emphasis>, the <emphasis role="italic"
						>wageOffer</emphasis> property of the event is greater than or equal to the
						<emphasis role="italic">currentWage</emphasis> property of the variable
						<emphasis role="italic">h</emphasis> and the <emphasis role="italic"
						>jobSeeker</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> returns true. This rule only results in creating a new
						<emphasis role="italic">TellVacancy</emphasis> message.</para>
				<table frame="all">
					<title>Environment Rule:
						ConsumptionGoodsProducerPostVacancyInformation_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>PostVacancyInformation</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>PostVacancyInformation.firmId != h.firm and
									PostVacancyInformation.wageOffer >= h.currentWage and
									h.jobSeeker = true</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>TellVacancy</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef = h.id</para>
										</listitem>
										<listitem>
											<para>receiverIdRef =
												PostVacancyInformation.actorIdRef</para>
										</listitem>
										<listitem>
											<para>generalSkillLevel = h.generalSkillLevel</para>
										</listitem>
										<listitem>
											<para>specificSkillLevel = h.specificSkillLevel</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>-</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>InFirstIterationConsumptionGoodsProducerOfferJob_Rule</emphasis> applies
					when an action event <emphasis role="italic">InFirstIterationOfferJob</emphasis>
					is perceived by a declared variable <emphasis role="italic">f</emphasis> of a
						<emphasis role="italic">ConsumptionGoodsProducer</emphasis> type. Then a
					variable <emphasis role="italic">a</emphasis> of a <emphasis role="italic"
						>JobApplicationRecord</emphasis> type which denotes the <emphasis
						role="italic">jobApplications</emphasis> list of the variable <emphasis
						role="italic">f</emphasis> is also declared. This rule only results in
					creating a new <emphasis role="italic">JobOffer</emphasis> message.</para>
				<table frame="all">
					<title>Environment Rule:
						InFirstIterationConsumptionGoodsProducerOfferJob_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>InFirstIterationOfferJob</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef = InFirstIterationOfferJob.actor</para>
										</listitem>
									</itemizedlist>
									<para>JobApplicationRecord a : f.jobApplications</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>JobOffer</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef =
												InFirstIterationOfferJob.actorIdRef</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = a.householdId</para>
										</listitem>
										<listitem>
											<para>wageOffer = f.wageOffer *
												f.determineAverageSpecificSkillLevel()</para>
										</listitem>
										<listitem>
											<para>region = f.region</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>-</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>EndFirstIterationConsumptionGoodsProducerClearJobApplications_Rule</emphasis>
					applies when an exogenous event <emphasis role="italic"
						>EndFirstIterationLaborSupply</emphasis> occurs. This event occurs when the
					first round of hiring activity ends (occurrenceTime="14"). It is repeated every
					24 steps, namely on a monthly basis. A variable <emphasis role="italic"
						>f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type is declared. Then the <emphasis
						role="italic">clearJobApplications</emphasis> function of the variable
						<emphasis role="italic">f</emphasis> is called to empty the <emphasis
						role="italic">jobApplications</emphasis> list, when the size of this list is
					greater than zero.</para>
				<table frame="all">
					<title>Environment Rule:
						EndFirstIterationConsumptionGoodsProducerClearJobApplications_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndFirstIterationLaborSupply</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>ConsumptionGoodsProducer f</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>clearJobApplications()</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>EndFirstIterationConsumptionGoodsProducerRaiseWageOffer_Rule</emphasis>
					applies when an exogenous event <emphasis role="italic"
						>EndFirstIterationLaborSupply</emphasis> occurs. A variable <emphasis
						role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type is declared. Then the <emphasis
						role="italic">wageOffer</emphasis> property of the variable <emphasis
						role="italic">f</emphasis> will increase by 2%, if the <emphasis
						role="italic">laborSupplyQuantity</emphasis> property of the variable
						<emphasis role="italic">f</emphasis> is greater than five.</para>
				<table frame="all">
					<title>Environment Rule:
						EndFirstIterationConsumptionGoodsProducerRaiseWageOffer_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndFirstIterationLaborSupply</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>ConsumptionGoodsProducer f</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>f.laborSupplyQuantity > 5</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>wageOffer = (1 + 0.02) * f.wageOffer</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>EndFirstIterationJobSeekerReduceReservationWage_Rule</emphasis> is used
					when an exogenous event <emphasis role="italic"
						>EndFirstIterationLaborSupply</emphasis> occurs. A variable <emphasis
						role="italic">h</emphasis> of a <emphasis role="italic">Household</emphasis>
					type is declared. This rule applies only when the <emphasis role="italic"
						>firm</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is equal to 100 and the <emphasis role="italic"
						>currentWage</emphasis> property after decreasing by 2% is greater than or
					equal to one. Then the <emphasis role="italic">currentWage</emphasis> property
					of the variable <emphasis role="italic">h</emphasis> is reduced by two
					percent.</para>
				<table frame="all">
					<title>Environment Rule:
						EndFirstIterationJobSeekerReduceReservationWage_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndFirstIterationLaborSupply</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>h.firm == 100 and (1 - 0.02) * h.currentWage >= 1</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>currentWage = (1 - 0.02) * h.currentWage</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>EndSecondIterationConsumptionGoodsProducerClearJobApplications_Rule</emphasis>
					applies when an exogenous event <emphasis role="italic"
						>EndSecondIterationLaborSupply</emphasis> occurs. This event happens at the
					end of the second iteration of hiring activity (occurrenceTime="23"). It is also
					repeated every 24 steps. The content of this rule is the same as that of the
						<emphasis role="italic"
						>EndFirstIterationConsumptionGoodsProducerClearJobApplications_Rule</emphasis>
					rule.</para>
				<table frame="all">
					<title>Environment Rule:
						EndSecondIterationConsumptionGoodsProducerClearJobApplications_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndSecondIterationLaborSupply</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>ConsumptionGoodsProducer f</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>f.jobApplications.size > 0</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>clearJobApplications()</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">ConsumptionGoodsProducerDistributeProduct_Rule</emphasis>
					is used when an action event <emphasis role="italic"
						>DistributeProduct</emphasis> is perceived by a declared variable <emphasis
						role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type. After the production the output
					is distributed among the malls. Then a variable <emphasis role="italic"
						>o</emphasis> of a <emphasis role="italic">InventoryPosition</emphasis> type
					which denotes the <emphasis role="italic">inventoryPositions</emphasis> list of
					the variable <emphasis role="italic">f</emphasis> is also declared. This rule
					only results in creating a new <emphasis role="italic">DeliverProduct</emphasis>
					message. The message containe the delivery volume for an individual mall.</para>
				<table frame="all">
					<title>Environment Rule: ConsumptionGoodsProducerDistributeProduct_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>DistributeProduct</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef = DistributeProduct.actor</para>
										</listitem>
									</itemizedlist>
									<para>InventoryPosition o : f.inventoryPositions</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>DeliverProduct</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef = DistributeProduct.actorIdRef</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = o.mallId</para>
										</listitem>
										<listitem>
											<para>quantity = o.adjustmentFactor *
												f.producedQuantity</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>-</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>ConsumptionGoodsProducerPayWage_Rule</emphasis> is used when an action
					event <emphasis role="italic">PayWage</emphasis> is perceived by a declared
					variable <emphasis role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type. Then a variable <emphasis
						role="italic">w</emphasis> of a <emphasis role="italic"
						>WorkerInFirm</emphasis> type which denotes the <emphasis role="italic"
						>workersInFirm</emphasis> list of the variable <emphasis role="italic"
						>f</emphasis> is also declared. This rule only results in creating a new
						<emphasis role="italic">TellWage</emphasis> message.</para>
				<table frame="all">
					<title>Environment Rule: ConsumptionGoodsProducerPayWage_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>PayWage</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef = PayWage.actor</para>
										</listitem>
									</itemizedlist>
									<para>WorkerInFirm w : f.workersInFirm</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>TellWage</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef = PayWage.actorIdRef</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = w.householdId</para>
										</listitem>
										<listitem>
											<para>wage = w.wage</para>
										</listitem>
										<listitem>
											<para>region = f.region</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>-</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>ConsumptionGoodsProducerIncreaseSpecificSkillLevel_Rule</emphasis> is used
					when an action event <emphasis role="italic"
						>IncreaseSpecificSkillLevel</emphasis> is perceived by a declared variable
						<emphasis role="italic">f</emphasis> of a <emphasis role="italic"
						>ConsumptionGoodsProducer</emphasis> type. Then a variable <emphasis
						role="italic">w</emphasis> of a <emphasis role="italic"
						>WorkerInFirm</emphasis> type which denotes the <emphasis role="italic"
						>workersInFirm</emphasis> list of the variable <emphasis role="italic"
						>f</emphasis> is also declared. After that, the <emphasis role="italic"
						>updateSpecificSkillLevel</emphasis> function is called. This rule only
					results in creating a new <emphasis role="italic"
						>TellSpecificSkillLevel</emphasis> message.</para>
				<table frame="all">
					<title>Environment Rule:
						ConsumptionGoodsProducerIncreaseSpecificSkillLevel_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>IncreaseSpecificSkillLevel</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>
									<para>ConsumptionGoodsProducer f</para>
									<itemizedlist>
										<listitem>
											<para>objectRef =
												IncreaseSpecificSkillLevel.actor</para>
										</listitem>
									</itemizedlist>
									<para>WorkerInFirm w : f.workersInFirm</para>
								</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>
									<para>TellSpecificSkillLevel</para>
									<itemizedlist>
										<listitem>
											<para>senderIdRef =
												IncreaseSpecificSkillLevel.actorIdRef</para>
										</listitem>
										<listitem>
											<para>receiverIdRef = w.householdId</para>
										</listitem>
										<listitem>
											<para>specificSkillLevel = w.specificSkillLevel</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>updateSpecificSkillLevel(householdId,
												specificSkillLevel)</para>
											<itemizedlist>
												<listitem>
												<para>householdId = w.householdId</para>
												</listitem>
												<listitem>
												<para>specificSkillLevel = w.specificSkillLevel +
												(1 - Math.pow((0.5), (1 / (20 + 0.25 *
												(w.generalSkillLevel - 1) * (4 - 20))))) *
												(f.averageQualityOfCapitalStock -
												w.specificSkillLevel)</para>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">EndOfMonth_Rule</emphasis> applies when an
					exogenous event <emphasis role="italic">EndOfMonth</emphasis> occurs. This event
					simulates at the end of every month (occurrenceTime="25") and occurs at every 24
					steps in the simulation. This rule is used to update some values of global
					variables at the end of each period.</para>
				<table frame="all">
					<title>Environment Rule: EndOfMonth_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndOfMonth</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<itemizedlist>
										<listitem>
											<para>Global.period = Global.period + 1</para>
										</listitem>
										<listitem>
											<para>Global.innovationProbability =
												Global.wouldInnovate()</para>
										</listitem>
										<listitem>
											<para>Global.qualityOfInvestment = (1 +
												Global.innovationProbability) *
												Global.qualityOfInvestment</para>
										</listitem>
										<listitem>
											<para>Global.investmentSalesPrice = (1 +
												Global.innovationProbability) *
												Global.investmentSalesPrice</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>AtEndOfMonthConsumptionGoodsProducerClearInventoryPositions_Rule</emphasis>
					applies when an exogenous event <emphasis role="italic">EndOfMonth</emphasis>
					occurs. A variable <emphasis role="italic">f</emphasis> of a <emphasis
						role="italic">ConsumptionGoodsProducer</emphasis> type is declared. Then the
						<emphasis role="italic">grossInvestment</emphasis> property of the variable
						<emphasis role="italic">f</emphasis> is reduced by one percent. After that,
					three functions are called.</para>
				<table frame="all">
					<title>Environment Rule:
						AtEndOfMonthConsumptionGoodsProducerClearInventoryPositions_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndOfMonth</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>ConsumptionGoodsProducer f</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>f</para>
									<itemizedlist>
										<listitem>
											<para>grossInvestment = (1 - 0.01) *
												f.grossInvestment</para>
										</listitem>
										<listitem>
											<para>updateOptimalStockLevel()</para>
										</listitem>
										<listitem>
											<para>clearInventoryPositions()</para>
										</listitem>
										<listitem>
											<para>updateLastFourProducedQuantities()</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic">AtEndOfMonthPayWage_Rule</emphasis> applies
					when an exogenous event <emphasis role="italic">EndOfMonth</emphasis> occurs. A
					variable <emphasis role="italic">h</emphasis> of a <emphasis role="italic"
						>Household</emphasis> type is declared. Then the <emphasis role="italic"
						>currentIncome</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is increased by one, when the <emphasis role="italic"
						>firm</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is equal to 100.</para>
				<table frame="all">
					<title>Environment Rule: AtEndOfMonthPayWage_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndOfMonth</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>h.firm == 100</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>currentIncome = h.currentIncome + 1</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para>The rule <emphasis role="italic"
						>AtEndOfMonthDetermineEmployedWorkerNotAsJobSeeker_Rule</emphasis> applies
					when an exogenous event <emphasis role="italic">EndOfMonth</emphasis> occurs. A
					variable <emphasis role="italic">h</emphasis> of a <emphasis role="italic"
						>Household</emphasis> type is declared. Then the <emphasis role="italic"
						>jobSeeker</emphasis> property of the variable <emphasis role="italic"
						>h</emphasis> is set true, when the <emphasis role="italic">firm</emphasis>
					property of the variable <emphasis role="italic">h</emphasis> is not equal to
					100 and the value of the <emphasis role="italic">jobSeeker</emphasis> property
					returns true.</para>
				<table frame="all">
					<title>Environment Rule:
						AtEndOfMonthDetermineEmployedWorkerNotAsJobSeeker_Rule</title>
					<tgroup cols="2" align="left">
						<colspec colname="c1" colnum="1" colwidth="0.5*"/>
						<colspec colname="c2" colnum="2" colwidth="1.5*"/>
						<tbody>
							<row>
								<entry>Triggering Event</entry>
								<entry>EndOfMonth</entry>
							</row>
							<row>
								<entry>Declaration</entry>
								<entry>Household h</entry>
							</row>
							<row>
								<entry>Condition</entry>
								<entry>h.firm != 100 and h.jobSeeker = true</entry>
							</row>
							<row>
								<entry>Resulting Messages</entry>
								<entry>-</entry>
							</row>
							<row>
								<entry>State Effects</entry>
								<entry>
									<para>h</para>
									<itemizedlist>
										<listitem>
											<para>jobSeeker = false</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>
		</section>
	</section>
</chapter>
