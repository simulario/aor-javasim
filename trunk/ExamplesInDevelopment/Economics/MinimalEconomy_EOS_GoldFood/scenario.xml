<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario version="0.8.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-8-4.xsd"
	xmlns="http://aor-simulation.org" xmlns:aors="http://aor-simulation.org"
	xmlns:dc="http://purl.org/dc/elements/1.1/" 
	scenarioName="Gold_Food_Economy"
	scenarioTitle="Gold Food Economy"
	simulationManagerDirectory="../../..">

	<SimulationParameters simulationSteps="4320" timeUnit="h"  stepTimeDelay="0"/>
	<SimulationModel modelName="Gold_Food_Economy">
		<documentation>
			<dc:modified>20100306</dc:modified>
			<dc:source>"A computational market model based on individual action", by Ken Steiglitz, Michael L. Honig and Leonard M. Cohen, 1996. URL: http://www.cs.princeton.edu/~ken/scott.pdf</dc:source>
			<aors:description xmlns="http://www.w3.org/1999/xhtml">The "Gold Food Economy" is an example of an agent-based simulation of a relatively basic economy that does not directly model a real economy, but attempts to explain the macroeconomy through simulation of a minimal economy. It is one of the simplest models wherein zero-intelligence agents produce, consume and trade in an economy with only two goods: gold and food. The model simulates the actions of independent "worker" agents, each with his own inventory and skills (at producing food and gold), interacting through an auction market agent that establishes a commonly accepted transaction price. Workers must consume a unit of food every period, and each worker tries to maintain a minimum inventory of food to guarantee consumption. For the system to survive the production of food must be greater than the total food consumption per period, but this leads to a surplus of food in the economy. The market allows agents to sell their surplus food for gold that can be used to purchase food in the same market later on. Agents more skilled in the production of gold might decide to mine gold and trade it for food at every period.</aors:description>
		</documentation>
		<!--
		<Statistics>
			
			<Variable name="Food" dataType="Float">
				
				<Source>
					<ObjectProperty property="foodStock" objectType="Person"/>
				</Source>
			</Variable>
			
			<Variable name="Price" dataType="Float">
				
				<Source>
					<ObjectProperty property="lastPrice" objectType="Person"/>
				</Source>
			</Variable>
		</Statistics>	
		-->
		<DataTypes>
			<!--====================================-->
			<ComplexDataType name="AssetsList">
				<!--====================================-->
				<ClassDef language="Java"><![CDATA[
					private java.util.ArrayList<aors.util.economics.Quantity> assets = new java.util.ArrayList<aors.util.economics.Quantity>();			
				 
					public AssetsList() {}			                       
					
					public Float addAsset(Float quantity, String name, String unit) {
				
					  aors.util.economics.ContinuousQuantityType assetType = new aors.util.economics.ContinuousQuantityType(name, unit);
					  aors.util.economics.ContinuousQuantity asset = new aors.util.economics.ContinuousQuantity(quantity, assetType);
					  assets.add(asset);	
					  //System.out.println("Array is: "+assets);
					  return quantity;
					}
					
					public aors.util.economics.Quantity getAsset(String name){
						int i;
						for(i=0; i < assets.size(); i++){
							if(!assets.get(i).isDiscrete()){
								if(((aors.util.economics.ContinuousQuantity)assets.get(i)).getContinuousQuantityType().getName().equals(name)){
								   System.out.println("eated asset: "+name);
									break;
								}
							}
						}
						return assets.get(i);
					}
	  			]]></ClassDef>
			</ComplexDataType>
		</DataTypes>
		
		<EntityTypes>
			<MessageType name="OpenMarket">
				<Attribute name="price" type="Float"/>
			</MessageType>
			<MessageType name="BuyFoodMessage">
				<ComplexDataProperty name="OfferList" type="Offer" upperMultiplicity="unbounded"/>
			</MessageType>
			<MessageType name="SellFoodMessage">
				<ComplexDataProperty name="OfferList" type="Offer" upperMultiplicity="unbounded"/>
			</MessageType>
			<ExogenousEventType name="StartOfDay" periodicity="24" />
			<ExogenousEventType name="EachDayAt8AM" periodicity="24" />
			<ExogenousEventType name="EachDayAt11AM" periodicity="24" />
			
			<AgentType name="EconomicAgent">
				<!--<ComplexDataProperty name="assets" type="Quantity" upperMultiplicity="unbounded" />-->
			</AgentType>
			
			<!-- ============================================ -->
			<AgentType name="Person" superType="EconomicAgent">
				<!-- ============================================ -->
				<documentation>
					<description>Model Level representation of a Person</description>
				</documentation>
				<ComplexDataProperty name="assets" type="model.dataTypes.AssetsList"  />
				<Attribute type="Float" name="EAT_AMOUNT" initialValue="1.0"/>
				<Attribute type="Float" name="TARGET_FOOD_STOCK" initialValue="30.0"/>
				<Attribute type="Float" name="TARGET_MONEY_STOCK" initialValue="60.0"/>
				<Attribute type="Float" name="LEISURE_VALUE" initialValue="5.0"/>
				<Attribute type="Float" name="RANDOM_FACTOR" initialValue="0.01"/>
				<Attribute type="Float" name="HISTORICAL_FOOD_PRICE" initialValue="0.02"/>
				<Attribute type="Float" name="lastPrice"/>
				<Attribute type="Float" name="foodStock"/>
				<Attribute type="Float" name="goldAmount"/>
				
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<Function name="eat" resultType="boolean">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
					<Body language="Java"><![CDATA[
							if(getAssets().getAsset("Food").getQuantity() - getEAT_AMOUNT() >= getEAT_AMOUNT() ){
								getAssets().getAsset("Food").withdraw(1);
								setFoodStock(getFoodStock()-1);
								return true;
							}		 
							return false;
					]]></Body>
				</Function>
				
				<PeriodicTimeEventType name="SetAssets" />
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<CommunicationRule name="SetAssets_Rule" agentVariable="p">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
					<WHEN eventType="SetAssets" />
					<DO>
						<UPDATE-AGT>
							<Slot property="foodStock">
								<ValueExpr language="Java"><![CDATA[
									p.getAssets().addAsset(20.0f, "Food", "Stk")
								]]></ValueExpr>
							</Slot>
							<Slot property="goldAmount">
								<ValueExpr language="Java"><![CDATA[
									p.getAssets().addAsset(10.0f, "Gold", "Stk")	
								]]></ValueExpr>
							</Slot>
						</UPDATE-AGT>
					</DO>	
				</CommunicationRule>
				
				<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
				<CommunicationRule name="OpenMarket_Rule" agentVariable="p">
					<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
					<WHEN eventType="InMessageEvent" messageType="OpenMarket"/>
					<IF language="Java">!eat()</IF>
					<THEN>
						<SCHEDULE-EVT>
							<OutMessageEventExpr messageType="OpenMarket" receiverIdRefs="0" />
						</SCHEDULE-EVT>
					</THEN>
				</CommunicationRule>

			</AgentType>		
			<AgentType name="Market">
				<Attribute type="Float" name="marketPrice"/>
				<Attribute type="Float" name="marketVolume"/>
			</AgentType>
		</EntityTypes>
		
	<EnvironmentRules>
		<!-- ====================================== -->
		<EnvironmentRule name="StartOfDay_Rule">
			<!-- ====================================== -->
				<WHEN eventType="StartOfDay"/>
				<FOR objectVariable="m" objectType="Market" />
				<FOR objectVariable="p" objectType="Person" />
				<DO>
					<SCHEDULE-EVT>
						<InMessageEventExpr messageType="OpenMarket">
						    <SenderIdRef language="Java">m.getId()</SenderIdRef>
							<ReceiverIdRef language="Java">p.getId()</ReceiverIdRef>
							<Slot property="price">
								<ValueExpr language="Java">m.getMarketPrice()</ValueExpr>
							</Slot>
						</InMessageEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>
		   <!-- ============================= -->
			<EnvironmentRule name="Die">
				<!-- ========================== -->
				<WHEN eventType="OutMessageEvent" messageType="OpenMarket" eventVariable="evt" />
				<IF language="Java"></IF>
				<THEN>
					<UPDATE-ENV>
						<DestroyObject>
							<ObjectIdRef language="Java">
								evt.getActorIdRef()
							</ObjectIdRef>
						</DestroyObject>
					</UPDATE-ENV>
				</THEN>
			</EnvironmentRule>
			
			<EnvironmentRule name="EachDayAt8AM_Rule">
				<WHEN eventType="EachDayAt8AM"/>
			</EnvironmentRule>
			
			<EnvironmentRule name="EachDayAt11AM_Rule">
				<WHEN eventType="EachDayAt11AM"/>
			</EnvironmentRule>
		</EnvironmentRules>	
		
	</SimulationModel>
	<!-- ======================= -->
	<InitialState>
	<!-- ======================= -->
		<Agent type="Market" id="2">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->			
			<Slot property="marketPrice" value="2.0" />
		</Agent>
		
		<Agent type="Person" id="1000">
			<Slot property="foodStock" value="20" />		
			<PeriodicTimeEvent type="SetAssets" occurrenceTime="1"  />
		</Agent>
		
		<ExogenousEvent occurrenceTime="1" type="StartOfDay" />
		<ExogenousEvent occurrenceTime="8" type="EachDayAt8AM" />
		<ExogenousEvent occurrenceTime="11" type="EachDayAt11AM" />
	</InitialState>
	
	<!-- =================================================== -->
	<UserInterface>
		<!-- =================================================== -->
		<StatisticsUI>
			<StatisticsVariableUI variable="Food" comparisonGroup="pricevsfood">
				<Label>
					<Text xml:lang="en">Food</Text>
					<Text xml:lang="de">Marktpreis</Text>
					<Text xml:lang="es">Precio de Mercado</Text>
					<Text xml:lang="fr">Le Prix du March√©</Text>
					<Text xml:lang="ro">Pret mediu</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the average market price?</Text>
					<Text xml:lang="de">Was ist der durchschnittliche Marktpreis?</Text>
					<Text xml:lang="es">Cu√°l es el precio medio de mercado?</Text>
					<Text xml:lang="fr">Quel est le moyen prix du march√©?</Text>
					<Text xml:lang="ro">Care este pretul mediu statilit de bursa?</Text>
				</Hint>
				<Format decimalPlaces="1">
					<Weight>kg</Weight>
				</Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="Price" comparisonGroup="pricevsfood">
				<Label>
					<Text xml:lang="en">Price</Text>
					<Text xml:lang="de">Marktpreis</Text>
					<Text xml:lang="es">Precio de Mercado</Text>
					<Text xml:lang="fr">Le Prix du March√©</Text>
					<Text xml:lang="ro">Pret mediu</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the average market price?</Text>
					<Text xml:lang="de">Was ist der durchschnittliche Marktpreis?</Text>
					<Text xml:lang="es">Cu√°l es el precio medio de mercado?</Text>
					<Text xml:lang="fr">Quel est le moyen prix du march√©?</Text>
					<Text xml:lang="ro">Care este pretul mediu statilit de bursa?</Text>
				</Hint>
				<Format decimalPlaces="2">
					<Currency>EUR(&#8364;)</Currency>
				</Format>
			</StatisticsVariableUI>
		</StatisticsUI>
	</UserInterface>
</SimulationScenario>
