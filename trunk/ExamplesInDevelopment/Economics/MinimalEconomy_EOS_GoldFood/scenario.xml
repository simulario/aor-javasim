<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario version="0.8.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-8-4.xsd"
	xmlns="http://aor-simulation.org" xmlns:aors="http://aor-simulation.org"
	xmlns:dc="http://purl.org/dc/elements/1.1/" 
	scenarioName="Gold_Food_Economy"
	scenarioTitle="Gold Food Economy"
	simulationManagerDirectory="../../..">

	<SimulationParameters simulationSteps="4320" timeUnit="h"  stepTimeDelay="0"/>
	<SimulationModel modelName="Gold_Food_Economy">
		<documentation>
			<dc:modified>20100306</dc:modified>
			<dc:source>"A computational market model based on individual action", by Ken Steiglitz, Michael L. Honig and Leonard M. Cohen, 1996. URL: http://www.cs.princeton.edu/~ken/scott.pdf</dc:source>
			<aors:description xmlns="http://www.w3.org/1999/xhtml">The "Gold Food Economy" is an example of an agent-based simulation of a relatively basic economy that does not directly model a real economy, but attempts to explain the macroeconomy through simulation of a minimal economy. It is one of the simplest models wherein zero-intelligence agents produce, consume and trade in an economy with only two goods: gold and food. The model simulates the actions of independent "worker" agents, each with his own inventory and skills (at producing food and gold), interacting through an auction market agent that establishes a commonly accepted transaction price. Workers must consume a unit of food every period, and each worker tries to maintain a minimum inventory of food to guarantee consumption. For the system to survive the production of food must be greater than the total food consumption per period, but this leads to a surplus of food in the economy. The market allows agents to sell their surplus food for gold that can be used to purchase food in the same market later on. Agents more skilled in the production of gold might decide to mine gold and trade it for food at every period.</aors:description>
		</documentation>
		<Statistics>
			<!-- ========================================= -->
			<Variable name="Food" dataType="Float">
				<!-- ========================================= -->
				<Source>
					<ObjectProperty property="foodStock" objectType="Person"/>
				</Source>
			</Variable>
			<Variable name="Price" dataType="Float">
				<!-- ========================================= -->
				<Source>
					<ObjectProperty property="lastPrice" objectType="Person"/>
				</Source>
			</Variable>
		</Statistics>	
		
		<DataTypes>	
				
		</DataTypes>
		
		<EntityTypes>	
			<MessageType name="OpenMarket"></MessageType>
			<MessageType name="EatMessage"></MessageType>
			<MessageType name="AnnouncePrice">
				<Attribute type="Float" name="price"/>
			</MessageType>	
			<MessageType name="BuyFoodMessage"></MessageType>
			<MessageType name="SellFoodMessage"></MessageType>
			<MessageType name="BidMessage">
				<Attribute type="String" name="product"/>
				<Attribute type="String" name="currency"/>
				<ComplexDataProperty name="bidList" type="Offer" upperMultiplicity="unbounded"/>			
			</MessageType>
			<ExogenousEventType name="StartOfDay" periodicity="24" />
			<ExogenousEventType name="EachDayAt8AM" periodicity="24" />
			<ExogenousEventType name="EachDayAt11AM" periodicity="24" />
			<AgentType name="EconomicAgent">
				<ComplexDataProperty name="assets" type="Quantity" upperMultiplicity="unbounded" />
				
				<Function name="getAsset" resultType="Quantity">
					<Parameter name="asset" type="String"/>
					<Body language="Java"><![CDATA[
						int pos = getAssets().indexOf(asset);
						return getAssets(pos);
					]]></Body>
				</Function>
			</AgentType>
			
			
			<AgentType name="Person" superType="EconomicAgent">
				<!-- ============================================ -->
				<documentation>
					<description>Model Level representation of a Person</description>
				</documentation>
				<Attribute type="Float" name="EAT_AMOUNT" initialValue="1.0"/>
				<Attribute type="Float" name="TARGET_FOOD_STOCK" initialValue="30.0"/>
				<Attribute type="Float" name="TARGET_MONEY_STOCK" initialValue="60.0"/>
				<Attribute type="Float" name="LEISURE_VALUE" initialValue="5.0"/>
				<Attribute type="Float" name="RANDOM_FACTOR" initialValue="0.01"/>
				<Attribute type="Float" name="HISTORICAL_FOOD_PRICE" initialValue="0.02"/>
				<Attribute type="Float" name="lastPrice"/>
				<Attribute type="Float" name="foodStock"/>
				
				<Function name="eat" resultType="Boolean">
					<Body language="Java"><![CDATA[
						if(getAsset("Food").getQuantity() - getEAT_AMOUNT() < getEAT_AMOUNT() ){
							return false;
						}
						else{
							getAsset("Food").withdraw(1);
						}
					]]></Body>
				</Function>
				
				<CommunicationRule name="eat_Rule" agentVariable="p">
					<WHEN eventType="InMessageEvent" messageType="EatMessage"/>
					<IF language="Java"><<![CDATA[!p.eat()]]>></IF>
					<THEN>
						<UPDATE-AGT>
							<DestroyBeliefEntity >
								<BeliefEntityIdRef language="Java">p.getId()</BeliefEntityIdRef>
							</DestroyBeliefEntity>
						</UPDATE-AGT>
					</THEN>
				</CommunicationRule>				
			</AgentType>		
			<AgentType name="Market">
				<Attribute type="Float" name="marketPrice"/>
				<Attribute type="Float" name="marketVolume"/>
				<CommunicationRule name="TransactionPrice_Rule_1" agentVariable="m">
					<WHEN eventType="InMessageEvent" messageType="OpenMarket"/>
					<DO>
						<SCHEDULE-EVT>
							<OutMessageEventExpr messageType="AnnouncePrice" receiverIdRefs="0">
								<Slot property="price">
									<RandomVariable>
										<Uniform lowerBound="0" upperBound="20"></Uniform>
									</RandomVariable>
								</Slot>
							</OutMessageEventExpr>
						</SCHEDULE-EVT>
					</DO>
				</CommunicationRule>
				<CommunicationRule name="AcceptBids" agentVariable="m">
					<WHEN eventType="InMessageEvent" messageType="BidMessage"/>
					<DO>
						<SCHEDULE-EVT>
							<OutMessageEventExpr messageType="AnnouncePrice" receiverIdRefs="0">
								<Slot property="price">
									<RandomVariable>
										<Uniform lowerBound="0" upperBound="20"></Uniform>
									</RandomVariable>
								</Slot>
							</OutMessageEventExpr>
						</SCHEDULE-EVT>
					</DO>
				</CommunicationRule>
			</AgentType>
		</EntityTypes>
		<EnvironmentRules>
			<EnvironmentRule name="StartOfDay_Rule">
				<WHEN eventType="StartOfDay"/>
				<FOR objectVariable="m" objectType="Market" />
				<DO>
					<SCHEDULE-EVT>
						<InMessageEventExpr messageType="OpenMarket" senderIdRef="0">
							<ReceiverIdRef language="Java">m.getId()</ReceiverIdRef>
						</InMessageEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>
			<EnvironmentRule name="EachDayAt8AM_Rule">
				<WHEN eventType="EachDayAt8AM"/>
				<FOR objectVariable="p" objectType="Person"/>
				<DO>
					<SCHEDULE-EVT>
						<InMessageEventExpr messageType="EatMessage" senderIdRef="0">
							<ReceiverIdRef language="Java">p.getId()</ReceiverIdRef>
						</InMessageEventExpr>
						<InMessageEventExpr messageType="BuyFoodMessage" senderIdRef="0">
							<ReceiverIdRef language="Java">p.getId()</ReceiverIdRef>
						</InMessageEventExpr>
						<InMessageEventExpr messageType="SellFoodMessage" senderIdRef="0">
							<ReceiverIdRef language="Java">p.getId()</ReceiverIdRef>
						</InMessageEventExpr>
					</SCHEDULE-EVT>
				</DO>
			</EnvironmentRule>
			<EnvironmentRule name="EachDayAt11AM_Rule">
				<WHEN eventType="EachDayAt11AM"/>
			</EnvironmentRule>
			<EnvironmentRule name="AnnouncePriceENV_Rule">
				<WHEN eventType="OutMessageEvent" messageType="AnnouncePrice" messageVariable="mes" />
				<FOR objectVariable="p" objectType="Person"/>
				<DO>
					<UPDATE-ENV>
						<UpdateObject objectVariable="p">
							<Slot property="lastPrice">
								<ValueExpr language="Java">mes.getPrice()</ValueExpr>
							</Slot>
						</UpdateObject>
					</UPDATE-ENV>
				</DO>
			</EnvironmentRule>
		</EnvironmentRules>	
		
	</SimulationModel>
	<!-- ======================= -->
	<InitialState>
	<!-- ======================= -->
		<Agent type="Market" id="2">
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->			
			<Slot property="marketPrice" value="2.0" />
		</Agent>
		<Agents type="Person" rangeStartID="1000" rangeEndID="1001">
			<Slot property="foodStock">
				<RandomVariable>
					<Uniform lowerBound="20.0" upperBound="40.0" />
				</RandomVariable>
			</Slot>
		</Agents>
		<ExogenousEvent occurrenceTime="1" type="StartOfDay" />
		<ExogenousEvent occurrenceTime="8" type="EachDayAt8AM" />
		<ExogenousEvent occurrenceTime="11" type="EachDayAt11AM" />
	</InitialState>
	
	<!-- =================================================== -->
	<UserInterface>
		<!-- =================================================== -->
		<StatisticsUI>
			<StatisticsVariableUI variable="Food" comparisonGroup="pricevsfood">
				<Label>
					<Text xml:lang="en">Food</Text>
					<Text xml:lang="de">Marktpreis</Text>
					<Text xml:lang="es">Precio de Mercado</Text>
					<Text xml:lang="fr">Le Prix du Marché</Text>
					<Text xml:lang="ro">Pret mediu</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the average market price?</Text>
					<Text xml:lang="de">Was ist der durchschnittliche Marktpreis?</Text>
					<Text xml:lang="es">Cuál es el precio medio de mercado?</Text>
					<Text xml:lang="fr">Quel est le moyen prix du marché?</Text>
					<Text xml:lang="ro">Care este pretul mediu statilit de bursa?</Text>
				</Hint>
				<Format decimalPlaces="1">
					<Weight>kg</Weight>
				</Format>
			</StatisticsVariableUI>
			<StatisticsVariableUI variable="Price" comparisonGroup="pricevsfood">
				<Label>
					<Text xml:lang="en">Price</Text>
					<Text xml:lang="de">Marktpreis</Text>
					<Text xml:lang="es">Precio de Mercado</Text>
					<Text xml:lang="fr">Le Prix du Marché</Text>
					<Text xml:lang="ro">Pret mediu</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">What is the average market price?</Text>
					<Text xml:lang="de">Was ist der durchschnittliche Marktpreis?</Text>
					<Text xml:lang="es">Cuál es el precio medio de mercado?</Text>
					<Text xml:lang="fr">Quel est le moyen prix du marché?</Text>
					<Text xml:lang="ro">Care este pretul mediu statilit de bursa?</Text>
				</Hint>
				<Format decimalPlaces="2">
					<Currency>EUR(&#8364;)</Currency>
				</Format>
			</StatisticsVariableUI>
		</StatisticsUI>
	</UserInterface>
</SimulationScenario>
