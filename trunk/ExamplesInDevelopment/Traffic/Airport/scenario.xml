<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL-0-8-3.xsd"
    xmlns="http://aor-simulation.org"
    xmlns:aors="http://aor-simulation.org"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    version="0.8.3"
    scenarioName="AirportSimulator">
    
    <SimulationParameters simulationSteps="10000" stepDuration="100" timeUnit="ms" stepTimeDelay="25"/>
    
    <SimulationModel modelName="Airport" autoKinematics="true">
        <documentation>
            <dc:creator>Sebastian Mucha</dc:creator>
            <dc:created>April 15th, 2010</dc:created>
            <dc:description>
                This simulation models a plane starting and landing at an airport.
            </dc:description>
        </documentation>
        
        <SpaceModel geometry="Euclidean" spatialDistanceUnit="m">
            <TwoDimensional xMax="6000" yMax="3000"/>
        </SpaceModel>
        
        <EntityTypes>
            <ActionEventType name="ChangeHeight">
                <Attribute type="Float" name="height"/>
            </ActionEventType>
            
            <ActionEventType name="FuelDown">
                <Attribute type="Float" name="amount"/>
            </ActionEventType>
            
            <!-- Speed up event -->
            <ActionEventType name="SpeedUp">
                <Attribute name="velocity" type="Float"/>
            </ActionEventType>
            
            <!-- Slow down event -->
            <ActionEventType name="SlowDown">
                <Attribute name="velocity" type="Float"/>
            </ActionEventType>
            
            <!-- Direction change event -->
            <ActionEventType name="ChangeDirection">
                <Attribute name="vx" type="Float"/>
                <Attribute name="vy" type="Float"/>
                <Attribute name="rotZ" type="Float"/>
            </ActionEventType>
            
            <!-- Perceive speed -->
            <PerceptionEventType name="UpdateVelocityBelief">
                <Attribute name="velocity" type="Float"/>
            </PerceptionEventType>
            
            <PhysicalObjectType name="Checkpoint" idPerceivable="true"/>
            
            <PhysicalAgentType name="Plane" autoPerception="true">
                <Attribute name="myFuel" type="Float"/>
                <SelfBeliefAttribute name="myVelocity" type="Float"/>
                <SelfBeliefAttribute name="maxVelocity" type="Float"/>
                <SelfBeliefAttribute name="speedLimit" type="Integer"/>
                
                
                <!-- On each step -->
                <PeriodicTimeEventType name="SimulationStep" periodicity="1"/>

                <ReactionRule name="SpeedUp_Rule" agentVariable="plane">
                    <WHEN eventType="SimulationStep"/>
                    <IF language="Java">
                        <![CDATA[
                            plane.getMyVelocity() < plane.getMaxVelocity() &&
                            plane.getMyVelocity() < plane.getMaxVelocity()
                        ]]>
                    </IF>
                    <THEN>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="SpeedUp">
                                <Slot property="velocity" value="1"/>
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ReactionRule>
                
                <ReactionRule name="ChangeDirection_Rule">
                    <WHEN eventType="PhysicalObjectPerceptionEvent" physicalObjectType="Checkpoint" eventVariable="e"/>
                    <DO>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="ChangeDirection">
                                <Slot property="vx">
                                    <ValueExpr language="Java">
                                        e.getPerceivedPhysicalObjectIdRef() == 100 ? 0 :
                                        e.getPerceivedPhysicalObjectIdRef() == 101 ? -200 :
                                        e.getPerceivedPhysicalObjectIdRef() == 102 ? 0 :
                                        e.getPerceivedPhysicalObjectIdRef() == 103 ? 200 :
                                        e.getPerceivedPhysicalObjectIdRef() == 104 ? 0 : 0
                                    </ValueExpr>
                                </Slot>
                                
                                <Slot property="vy">
                                    <ValueExpr language="Java">
                                        e.getPerceivedPhysicalObjectIdRef() == 100 ? 200 :
                                        e.getPerceivedPhysicalObjectIdRef() == 101 ? 0 :
                                        e.getPerceivedPhysicalObjectIdRef() == 102 ? -200 :
                                        e.getPerceivedPhysicalObjectIdRef() == 103 ? 0 :
                                        e.getPerceivedPhysicalObjectIdRef() == 104 ? 200 : -200
                                    </ValueExpr>
                                </Slot>
                                
                                <Slot property="rotZ">
                                    <ValueExpr language="Java">
                                        e.getPerceivedPhysicalObjectIdRef() == 100 ? 90 :
                                        e.getPerceivedPhysicalObjectIdRef() == 101 ? 180 :
                                        e.getPerceivedPhysicalObjectIdRef() == 102 ? 270 :
                                        e.getPerceivedPhysicalObjectIdRef() == 103 ? 0 :
                                        e.getPerceivedPhysicalObjectIdRef() == 104 ? 90 : 270
                                    </ValueExpr>
                                </Slot>
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </DO>
                </ReactionRule>
                
                <ReactionRule name="InitializeLanding_Rule" agentVariable="plane">
                    <WHEN eventType="PhysicalObjectPerceptionEvent" physicalObjectType="Checkpoint" eventVariable="e"/>
                    <IF language="Java">
                        <![CDATA[
                            plane.getMyFuel() < 1000 &&
                            e.getPerceivedPhysicalObjectIdRef() == 105
                        ]]>
                    </IF>
                    <THEN>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="ChangeDirection">
                                <Slot property="vx" value="200"/>
                                <Slot property="vy" value="0"/>
                                <Slot property="rotZ" value="0"/>
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ReactionRule>
                
                <ReactionRule name="UpdateVelocityBelief_Rule" agentVariable="plane">
                    <WHEN eventType="UpdateVelocityBelief" eventVariable="e"/>
                    <DO>
                        <UPDATE-AGT>
                            <SelfBeliefSlot property="myVelocity">
                                <ValueExpr language="Java">plane.getMyVelocity() + e.getVelocity()</ValueExpr>
                            </SelfBeliefSlot>
                        </UPDATE-AGT>
                    </DO>
                </ReactionRule>
            </PhysicalAgentType>
            
            <PhysicalAgentType name="Altimeter">
                <Attribute type="Float" name="altitude"/>
                
                <!-- On each step -->
                <PeriodicTimeEventType name="AltitudeStep" periodicity="1"/>
                
                <ReactionRule name="ChangeAltitude_Rule" agentVariable="altimeter">
                    <WHEN eventType="AltitudeStep"/>
                    <IF language="Java">
                        <![CDATA[
                            altimeter.getAltitude() <= 1998                      
                        ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="altitude">
                                <ValueExpr language="Java">altimeter.getAltitude()+2</ValueExpr>
                            </Slot>
                        </UPDATE-AGT>
                        
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="ChangeHeight">
                                <Slot property="height" value="1"/>
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ReactionRule>
            </PhysicalAgentType>
            
            <PhysicalAgentType name="Fuelmeter">
                <Attribute type="Float" name="fuel"/>
                
                <ReactionRule name="FuelDwn_Rule" agentVariable="fuelmeter">
                    <ON-EACH-SIMULATION-STEP/>
                    <IF language="Java">
                        <![CDATA[
                            fuelmeter.getFuel() > 0                      
                        ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="fuel">
                                <ValueExpr language="Java">fuelmeter.getFuel()-1</ValueExpr>
                            </Slot>
                        </UPDATE-AGT>
                        
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="FuelDown">
                                <Slot property="amount" value="0.25"/>
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ReactionRule>
            </PhysicalAgentType>

            <PhysicalAgentType name="Runway" idPerceivable="false">
                <Attribute type="Boolean" name="lightsOn"/>
                
                <!-- Every 25 steps -->
                <PeriodicTimeEventType name="SwitchLights" periodicity="25"/>
                  
                <ReactionRule name="SwitchLights_Rule" agentVariable="runway">
                    <WHEN eventType="SwitchLights"/>
                    <DO>
                        <UPDATE-AGT>
                            <SelfBeliefSlot property="lightsOn">
                                <ValueExpr language="Java">!runway.isLightsOn()</ValueExpr>
                            </SelfBeliefSlot>
                        </UPDATE-AGT>
                    </DO>
                </ReactionRule>
            </PhysicalAgentType>
        </EntityTypes>
        
        <EnvironmentRules>
            <EnvironmentRule name="KeepFuelmeterInPlace_EnvRule">
                <ON-EACH-SIMULATION-STEP/>
                <FOR  objectIdRef="3" objectType="Fuelmeter" objectVariable="fuelmeter"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="fuelmeter">
                            <Slot property="y" value="50"/>
                        </UpdateObject>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="FuelDown_EnvRule">
                <WHEN eventType="FuelDown" eventVariable="e"/>
                <FOR objectIdRef="3" objectType="Fuelmeter" objectVariable="fuelmeter"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="fuelmeter">
                            <Slot property="height">
                                <ValueExpr language="Java">fuelmeter.getHeight() - e.getAmount()</ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="FuelDown1_EnvRule">
                <WHEN eventType="FuelDown" eventVariable="e"/>
                <FOR objectIdRef="1" objectType="Plane" objectVariable="plane"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="plane">
                            <Slot property="myFuel">
                                <ValueExpr language="Java">plane.getMyFuel() - e.getAmount()</ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="KeepAltimeterInPlace_EnvRule">
                <ON-EACH-SIMULATION-STEP/>
                <FOR  objectIdRef="2" objectType="Altimeter" objectVariable="altimeter"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="altimeter">
                            <Slot property="y" value="50"/>
                        </UpdateObject>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="ChangeHeight_EnvRule">
                <WHEN eventType="ChangeHeight" eventVariable="e"/>
                <FOR  objectIdRef="2" objectType="Altimeter" objectVariable="altimeter"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="altimeter">
                            <Slot property="height">
                                <ValueExpr language="Java">altimeter.getHeight() + e.getHeight()</ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="SpeedUp_EnvRule">
                <WHEN eventType="SpeedUp" eventVariable="e"/>
                <FOR  objectIdRef="1" objectType="Plane" objectVariable="plane"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="plane">
                            <Slot property="vx">
                                <ValueExpr language="Java">plane.getVx() + e.getVelocity()</ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                    
                    <SCHEDULE-EVT>
                        <PerceptionEventExpr eventType="UpdateVelocityBelief">
                            <PerceiverIdRef language="Java">e.getActor().getId()</PerceiverIdRef>
                            <Slot property="velocity">
                                <ValueExpr language="Java">e.getVelocity()</ValueExpr>
                            </Slot>
                        </PerceptionEventExpr>
                    </SCHEDULE-EVT>
                </DO>
            </EnvironmentRule>
            
            <EnvironmentRule name="ChangeDirection_EnvRule">
                <WHEN eventType="ChangeDirection" eventVariable="e"/>
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject>
                            <ObjectRef objectType="Plane" language="Java">e.getActor()</ObjectRef>
                            <Slot property="vx">
                                <ValueExpr language="Java">e.getVx()</ValueExpr>
                            </Slot>
                            
                            <Slot property="vy">
                                <ValueExpr language="Java">e.getVy()</ValueExpr>
                            </Slot>
                            
                            <Slot property="rotZ">
                                <ValueExpr language="Java">e.getRotZ()</ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>    
                </DO>
            </EnvironmentRule>
        </EnvironmentRules>
    </SimulationModel>
    
    <InitialState>        
        <!-- Initialize plane -->
        <PhysicalAgent type="Plane" id="1" x="1700" y="1500" width="360" height="370">
            <Slot property="myFuel" value="4000"/>
            <SelfBeliefSlot property="maxVelocity" value="200"/>
            <SelfBeliefSlot property="speedLimit" value="250"/>
            <SelfBeliefSlot property="myVelocity" value="0"/>
            <PeriodicTimeEvent occurrenceTime="1" type="SimulationStep"/>
        </PhysicalAgent>
        
        <!-- Initialize runway -->
        <PhysicalAgent type="Runway" id="10" x="3000" y="1500" width="3000" height="500">
            <Slot property="lightsOn" value="false"/>
            <PeriodicTimeEvent occurrenceTime="1" type="SwitchLights"/>
        </PhysicalAgent>
        
        <!-- Initialize checkpoints -->
        <PhysicalObject type="Checkpoint" id="100" x="5500" y="1500" width="50" height="50"/>
        <PhysicalObject type="Checkpoint" id="101" x="5500" y="2500" width="50" height="50"/>
        <PhysicalObject type="Checkpoint" id="102" x="500" y="2500" width="50" height="50"/>
        <PhysicalObject type="Checkpoint" id="103" x="500" y="500" width="50" height="50"/>
        <PhysicalObject type="Checkpoint" id="104" x="5500" y="500" width="50" height="50"/>
        <PhysicalObject type="Checkpoint" id="105" x="500" y="1500" width="50" height="50"/>
        
        <PhysicalAgent type="Altimeter" id="2" x="5850" y="50" width="100" height="10" vx="0" vy="0">
            <Slot property="altidute" value="0"/>
            <PeriodicTimeEvent occurrenceTime="200" type="AltitudeStep"/>
        </PhysicalAgent>
        
        <PhysicalAgent type="Fuelmeter" id="3" x="150" y="50" width="100" height="1010" vx="0" vy="0">
            <Slot property="fuel" value="4000"/>
        </PhysicalAgent>
    </InitialState>
    
    <UserInterface>
        <AnimationUI>
            <Views>
                <SpaceView canvasColor="lightgrey">
                    <TwoDimensionalSpaceView2D backgroundColor="lightgrey"/>
                </SpaceView>
                
                <PhysicalObjectView physicalObjectType="Altimeter">
                    <PhysicalShape2D>
                        <Rectangle positioning="CenterBottom">
                            <ShapePropertyMap shapeProperty="fill" property="altitude" mapType="caseWise" a0="2000" v0="green" v1="red"/>
                        </Rectangle>
                    </PhysicalShape2D>
                    <DisplayInfo property="altitude" content="m"/>
                </PhysicalObjectView>
                
                <PhysicalObjectView physicalObjectType="Fuelmeter">
                    <PhysicalShape2D>
                        <Rectangle positioning="CenterBottom">
                            <ShapePropertyMap shapeProperty="fill" property="fuel" mapType="caseWise" a0="1000" v0="red" a1="2000" v1="yellow" v2="green"/>
                        </Rectangle>
                    </PhysicalShape2D>
                    <DisplayInfo property="fuel" content="l"/>
                </PhysicalObjectView>
                
                <PhysicalObjectView physicalObjectType="Checkpoint">
                    <PhysicalShape2D>
                        <Rectangle fillOpacity="0.5"/>
                    </PhysicalShape2D>
                </PhysicalObjectView>
                
                <PhysicalObjectView physicalObjectType="Plane">
                    <PhysicalShape2D>
                        <Rectangle texture="boeing.png"/>
                    </PhysicalShape2D>
                </PhysicalObjectView>
                
                <PhysicalObjectView physicalObjectType="Runway">
                    <PhysicalShape2D>
                        <Rectangle fill="darkgrey"/>
                    </PhysicalShape2D>
                    
                    <!-- Top line of position lights -->
                    
                    <EmbeddedView offsetX="-49%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-35%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-21%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-7%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="7%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="21%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="35%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="49%" offsetY="44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <!-- Bottom line of position lights -->
                    
                    <EmbeddedView offsetX="-49%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-35%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-21%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-7%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="7%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="21%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="35%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="white" a1="false" v1="red"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="49%" offsetY="-44%">
                        <Shape2D>
                            <Circle r="4">
                                <ShapePropertyMap shapeProperty="fill" property="lightsOn" mapType="equalityCaseWise" a0="true" v0="red" a1="false" v1="white"/>
                            </Circle>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <!-- Runway markers -->
                    
                    <EmbeddedView offsetX="-45%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-35%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-25%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-15%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="-5%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="5%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="15%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="25%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="35%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                    
                    <EmbeddedView offsetX="45%" offsetY="0%">
                        <Shape2D>
                            <Rectangle width="7%" height="5%" fill="white"/>
                        </Shape2D>
                    </EmbeddedView>
                </PhysicalObjectView>
            </Views>
        </AnimationUI>       
    </UserInterface>
</SimulationScenario>
