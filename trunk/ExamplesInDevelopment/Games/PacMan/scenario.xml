<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-9.xsd"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns="http://aor-simulation.org"
 xmlns:aors="http://aor-simulation.org"
 scenarioName="BagMan"
 version="0.9"
 >
    <documentation>
        <dc:creator>Mircea Diaconescu</dc:creator>
        <dc:created>23 Juni 2011</dc:created>
        <dc:title>Bagman</dc:title>
        <CcLicense license="CC BY-SA"/>
        <dc:subject>maze game</dc:subject>
        <aors:shortDescription xmlns="http://www.w3.org/1999/xhtml">
          Reconstruction of the classical <em>PacMan</em> arcade game. 
        	You play Bagman who has to collect all the food pills in the maze while trying to avoid a "meeting" 
        	with any of the ghosts Inky and Blinky that will try to kill you. 
        </aors:shortDescription>
        <aors:shortDescription xmlns="http://www.w3.org/1999/xhtml" xml:lang="de">
          Rekonstruktion des Spieleklassikers <em>PacMan</em>. Als Bagman muss der Spieler alle Futterpillen 
        	im Labyrinth sammeln und dabei darauf achten, das er nicht von einem der beiden Gespenster Inky 
        	und Blinky geschnappt wird. 
    	</aors:shortDescription>
    	<aors:description xmlns="http://www.w3.org/1999/xhtml"> 
    		<p>Reconstruction of the classical <a href="http://en.wikipedia.org/wiki/Pac-Man">PacMan</a> arcade game. 
    		You play Bagman who has to collect all the food pills in the maze while trying to avoid any "meeting" 
    		with one of the ghosts Inky and Blinky that will try to kill you.</p>
    	</aors:description>
    	<aors:description xmlns="http://www.w3.org/1999/xhtml" xml:lang="de">
    		<p>Rekonstruktion des Spieleklassikers <a href="http://en.wikipedia.org/wiki/Pac-Man">PacMan</a>. 
    		Bagman muss alle Futterpillen im Labyrinth sammeln und dabei darauf achten, das er nicht von einem 
    		der beiden Gespenster Inky und Blinky geschnappt wird.</p>
    	</aors:description>
    </documentation>
    <SimulationParameters simulationSteps="100000" stepTimeDelay="50" />
    <SimulationModel modelName="PacMan" modelTitle="Pac Man Classic Arcade Game">        
        <SpaceModel geometry="Euclidean">
            <TwoDimensionalGrid xMax="20" yMax="11">
                <!-- determine the cell role (0 = free to walk into cell, 1 = cell has wall role) -->
                <GridCellProperty name="cellRole" type="Integer" />
            </TwoDimensionalGrid>
        </SpaceModel>
        
        <Statistics>
            <Variable name="numberOfMovements" dataType="Integer"/>
        </Statistics>
        <DataTypes>
            <Enumeration name="Direction">
                <EnumerationLiteral>NONE</EnumerationLiteral>
                <EnumerationLiteral>SOUTH</EnumerationLiteral>
                <EnumerationLiteral>NORTH</EnumerationLiteral>
                <EnumerationLiteral>EAST</EnumerationLiteral>
                <EnumerationLiteral>WEST</EnumerationLiteral>
            </Enumeration>
        </DataTypes>
        <Globals>
            <GlobalVariable dataType="Integer" name="score" />
            <GlobalVariable dataType="Integer" name="passedTime" />
            <GlobalVariable dataType="Integer" name="startTime" />
            <GlobalVariable dataType="Integer" initialValue="3" maxValue="5" minValue="1"
                name="level" />
            <GlobalVariable dataType="Integer" name="MapWidth" />
            <GlobalVariable dataType="Integer" name="MapHeight" />
            <GlobalVariable dataType="Integer" name="remainingPillFoodNumber" />
            <GlobalFunction name="getGameMap" resultType="Array">
                <Body language="JavaScript">
                    <![CDATA[
                        var gameMap = [ 
                            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                            [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],
                            [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
                            [1, 0, 1, 0, 1, 1, 0, 1, 1,-1,-1, 1, 1, 0, 1, 1, 0, 1, 0, 1],
                            [1, 0, 0, 0, 0, 0, 0, 1,-1,-1,-1,-1, 1, 0, 0, 0, 0, 0, 0, 1],
                            [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1],
                            [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
                            [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],
                            [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                        ];
                        
                        return gameMap;
                    ]]>
                </Body>
            </GlobalFunction>
            <GlobalFunction name="getNumberOfFoodCells" resultType="int">
                <Body language="JavaScript">
                    <![CDATA[
                        var result = 0;
                        var map = __Global.getGameMap();
                        var n = map.length;
                        var m = (n > 0 ? map[0].length : 0);
                        for(var i = 0; i < n; i++) {
                            for(var j = 0; j < m; j++) {
                                if(map[i][j] === 0) {
                                    result++;
                                }
                            }
                        }
                        return result;
                    ]]>
                </Body>
            </GlobalFunction>
            <GlobalFunction name="isWallOnCoordinates" resultType="boolean">
                <Parameter name="x" type="int" />
                <Parameter name="y" type="int" />
                <Body language="JavaScript">
                    <![CDATA[
                        var map = __Global.getGameMap();
                        var rows = map.length;
                        
                        return map[rows - y][x-1] === 1;
                    ]]>
                </Body>
            </GlobalFunction>
        </Globals>
        <EntityTypes>
            <!-- The Event that will let the environment knows that the PacMan must move -->
            <ActionEventType name="MovePacMan">
                <!-- The moving X increment/decrement -->
                <Attribute name="x" type="Integer" />
                <!-- The moving Y increment/decrement -->
                <Attribute name="y" type="Integer" />
                <!-- The moving direction - used for some logic purposes -->
                <EnumerationProperty name="direction" type="Direction" />
            </ActionEventType>
            <!-- The event is triggered when the PacMan eats a PillFood -->
            <ActionEventType name="EatPillFood" />
            <!-- The event is triggered when the PacMan game starts -->
            <ActionEventType name="StartGame" />
            <!-- The event is triggered when the PacMan dies -->
            <ActionEventType name="PacManDies" />
            <!-- The event is triggered when the PacMan wins the game - eated all PillFoods -->
            <ActionEventType name="WinGame" />
            <!-- The Lord of the simulation...PacMan -->
            <PhysicalAgentType name="PacMan">
                <!-- flag used to determine if the PacMan has the mouth open or closed -->
                <Attribute initialValue="false" name="mouthOpen" type="Boolean" />
                <!-- the current moving direction -->
                <EnumerationProperty name="movingDirection" type="Direction" />
                <!-- Action rule invoked when the user decides to move to east -->
                <ActionRule agentVariable="pacman" name="MoveEast_ActionRule">
                    <IF language="JavaScript">
                        <![CDATA[
                            !__Global.isWallOnCoordinates(this.pacman.getX() + 1, this.pacman.getY())
                        ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="movingDirection" value="__Direction.EAST" />
                        </UPDATE-AGT>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="MovePacMan">
                                <Slot property="direction" value="__Direction.EAST" />
                                <Slot property="x" value="1" />
                                <Slot property="y" value="0" />
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ActionRule>
                <!-- Action rule invoked when the user decides to move to west -->
                <ActionRule agentVariable="pacman" name="MoveWest_ActionRule">
                    <IF language="JavaScript">
                        <![CDATA[
                           !__Global.isWallOnCoordinates(this.pacman.getX() - 1, this.pacman.getY())
                        ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="movingDirection" value="__Direction.WEST" />
                        </UPDATE-AGT>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="MovePacMan">
                                <Slot property="direction" value="__Direction.WEST" />
                                <Slot property="x" value="-1" />
                                <Slot property="y" value="0" />
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ActionRule>
                <!-- Action rule invoked when the user decides to move to North -->
                <ActionRule agentVariable="pacman" name="MoveNorth_ActionRule">
                    <IF language="JavaScript">
                    <![CDATA[
                        !__Global.isWallOnCoordinates(this.pacman.getX(), this.pacman.getY() + 1)
                    ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="movingDirection" value="__Direction.NORTH" />
                        </UPDATE-AGT>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="MovePacMan">
                                <Slot property="direction" value="__Direction.NORTH" />
                                <Slot property="x" value="0" />
                                <Slot property="y" value="1" />
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ActionRule>
                <!-- Action rule invoked when the user decides to move to South -->
                <ActionRule agentVariable="pacman" name="MoveSouth_ActionRule">
                    <IF language="JavaScript">
                    <![CDATA[
                        !__Global.isWallOnCoordinates(this.pacman.getX(), this.pacman.getY() - 1)
                    ]]>
                    </IF>
                    <THEN>
                        <UPDATE-AGT>
                            <Slot property="movingDirection" value="__Direction.SOUTH" />
                        </UPDATE-AGT>
                        <SCHEDULE-EVT>
                            <ActionEventExpr actionEventType="MovePacMan">
                                <Slot property="direction" value="__Direction.SOUTH" />
                                <Slot property="x" value="0" />
                                <Slot property="y" value="-1" />
                            </ActionEventExpr>
                        </SCHEDULE-EVT>
                    </THEN>
                </ActionRule>
            </PhysicalAgentType>
            <!-- The type that represents the PacMan's enemy GhostBlinky -->
            <PhysicalAgentType name="GhostBlinky">
                <!-- the current moving direction -->
                <EnumerationProperty name="movingDirection" type="__Direction" />
                <Function name="getXIncrement" resultType="int">
                    <Parameter name="pacManX" type="int" />
                    <Parameter name="pacManY" type="int" />
                    <Body language="JavaScript">
                        <![CDATA[
                            var astar = new js.algorithms.ASTAR(__Global.getGameMap(), [0, -1]);
                            var currentX = this.getX() - 1;
                            var currentY = this.getY() - 1;
                            var start = {
                                x: currentX, 
                                y: currentY
                            };
							
							var end = {
								x: pacManX - 1, 
								y: pacManY - 1
							};
							var result = astar.search(start, end);
							
							if(result.length < 1) {
							     return 0;
							} else {
							     var firstNodeFromPath = result[0];
							     return (firstNodeFromPath.x - currentX)
							}
                        ]]>
                    </Body>
                </Function>
                <Function name="getYIncrement" resultType="int">
                    <Parameter name="pacManX" type="int" />
                    <Parameter name="pacManY" type="int" />
                    <Body language="JavaScript">
                        <![CDATA[
                            var astar = new js.algorithms.ASTAR(__Global.getGameMap(), [0, -1]);
                            var currentX = this.getX() - 1;
                            var currentY = this.getY() - 1;
                            var start = {
                                x: currentX, 
                                y: currentY
                            };
							
							var end = {
								x: pacManX - 1, 
								y: pacManY - 1
							};
							var result = astar.search(start, end);
							
							if(result.length < 1) {
							     return 0;
							} else {
							     var firstNodeFromPath = result[0];
							     return (firstNodeFromPath.y - currentY)
							}
                        ]]>
                    </Body>
                </Function>
            </PhysicalAgentType>
            <!-- The type that represents the PacMan's enemy GhostBlinky -->
            <PhysicalAgentType name="GhostInky">
                <!-- the current moving direction -->
                <EnumerationProperty name="movingDirection" type="__Direction" />
                <Function name="getXIncrement" resultType="int">
                    <Parameter name="pacManX" type="int" />
                    <Parameter name="pacManY" type="int" />
                    <Body language="JavaScript">
                        <![CDATA[
                            var astar = new js.algorithms.ASTAR(__Global.getGameMap(), [0, -1]);
                            var currentX = this.getX() - 1;
                            var currentY = this.getY() - 1;
                            var start = {
                                x: currentX, 
                                y: currentY
                            };
							
							var end = {
								x: pacManX - 1, 
								y: pacManY - 1
							};
							var result = astar.search(start, end);
							
							if(result.length < 1) {
							     return 0;
							} else {
							     var firstNodeFromPath = result[0];
							     return (firstNodeFromPath.x - currentX)
							}
                        ]]>
                    </Body>
                </Function>
                <Function name="getYIncrement" resultType="int">
                    <Parameter name="pacManX" type="int" />
                    <Parameter name="pacManY" type="int" />
                    <Body language="JavaScript">
                        <![CDATA[
                            var astar = new js.algorithms.ASTAR(__Global.getGameMap(), [0, -1]);
                            var currentX = this.getX() - 1;
                            var currentY = this.getY() - 1;
                            var start = {
                                x: currentX, 
                                y: currentY
                            };
							
							var end = {
								x: pacManX - 1, 
								y: pacManY - 1
							};
							var result = astar.search(start, end);
							
							if(result.length < 1) {
							     return 0;
							} else {
							     var firstNodeFromPath = result[0];
							     return (firstNodeFromPath.y - currentY)
							}
                        ]]>
                    </Body>
                </Function>
            </PhysicalAgentType>
        </EntityTypes>
        <!-- This rule is used to allow close/open of the PacMan mouth -->
        <EnvironmentRules>
            <!-- The rule executed when the game starts -->
            <EnvironmentRule name="StartGame_Rule">
                <ON-EACH-SIMULATION-STEP />
                <IF language="JavaScript">
                    <![CDATA[
                        __Simulator.getCurrentSimulationStep() === 1
                    ]]>
                </IF>
                <THEN>
                    <UPDATE-ENV>
                        <UpdateGlobalVariable name="startTime">
                            <ValueExpr language="JavaScript">
                                <![CDATA[
                                    (new Date()).getTime()
                                ]]>
                            </ValueExpr>
                        </UpdateGlobalVariable>
                    </UPDATE-ENV>
                    <SCHEDULE-EVT>
                        <CausedEventExpr eventType="StartGame" />
                    </SCHEDULE-EVT>
                </THEN>
            </EnvironmentRule>
            <!-- The rule execute when PacMan eats all PillFood pieces available on the map -->
            <EnvironmentRule name="WinGame_Rule">
                <ON-EACH-SIMULATION-STEP />
                <IF language="JavaScript">
                    <![CDATA[
                    __Global.getRemainingPillFoodNumber() === 0
                    ]]>
                </IF>
                <THEN>
                    <SCHEDULE-EVT>
                        <CausedEventExpr eventType="WinGame" />
                        <CausedEventExpr eventType="StopSimulation" />
                    </SCHEDULE-EVT>
                </THEN>
            </EnvironmentRule>
            <!-- Check if the PacMan is killed by the ghosts - that is, game lost -->
            <EnvironmentRule name="PacManDies_Rule">
                <ON-EACH-SIMULATION-STEP />
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacman" />
                <FOR-ObjectVariable objectIdRef="10000" objectType="GhostBlinky"
                    variable="ghostBlinky" />
                <FOR-ObjectVariable objectIdRef="11000" objectType="GhostInky" variable="ghostInky" />
                <IF language="JavaScript">
                    <![CDATA[
                        (this.pacman.getX() === this.ghostBlinky.getX() && this.pacman.getY() === this.ghostBlinky.getY())
                        || (this.pacman.getX() === this.ghostInky.getX() && this.pacman.getY() === this.ghostInky.getY())
                    ]]>
                </IF>
                <THEN>
                    <SCHEDULE-EVT>
                        <CausedEventExpr eventType="PacManDies" />
                        <CausedEventExpr eventType="StopSimulation" />
                    </SCHEDULE-EVT>
                </THEN>
            </EnvironmentRule>
            <!-- This rule will execute on each step and determine the PacMan mouth state -->
            <EnvironmentRule name="PacManMouthState_Rule">
                <ON-EACH-SIMULATION-STEP />
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacMan" />
                <IF language="JavaScript">
                    <![CDATA[
                        __Simulator.getCurrentSimulationStep() % 5 === 0
                    ]]>
                </IF>
                <THEN>
                    <UPDATE-ENV>
                        <UpdateGlobalVariable name="passedTime">
                            <ValueExpr language="JavaScript">
                                <![CDATA[
                                    parseInt(((new Date()).getTime() - __Global.getStartTime()) / 1000)
                                ]]>
                            </ValueExpr>
                        </UpdateGlobalVariable>
                        <UpdateObject objectVariable="pacMan">
                            <Slot property="mouthOpen">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        !this.pacMan.isMouthOpen()
                                    ]]>
                                </ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </THEN>
            </EnvironmentRule>
            <!-- The PacMan finds PillFood in the cell and will eat it -->
            <EnvironmentRule name="PacManEatPillFood">
                <ON-EACH-SIMULATION-STEP />
                <FOR-DataVariable dataType="Integer" variable="currentPeriod">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                            25 - parseInt(__Simulator.getCurrentSimulationStep() / 100)
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <FOR-DataVariable dataType="Integer" variable="gainedPoints">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                             this.currentPeriod > 1 ? this.currentPeriod : 1
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacman" />
                <IF language="JavaScript">
                    <![CDATA[
                        __Simulator.spaceModel.getGridCell(this.pacman.getX(), this.pacman.getY()).getCellRole() === 2
                    ]]>
                </IF>
                <THEN>
                    <UPDATE-ENV>
                        <IncrementGlobalVariable name="remainingPillFoodNumber" value="-1" />
                        <UpdateGlobalVariable name="score">
                            <ValueExpr language="JavaScript">
                                <![CDATA[
                                   __Global.getScore() +  this.gainedPoints
                                ]]>
                            </ValueExpr>
                        </UpdateGlobalVariable>
                        <UpdateGridCell gridCellVariable="cell">
                            <XCoordinate language="JavaScript">
                                <![CDATA[
                                    this.pacman.getX()
                                ]]>
                            </XCoordinate>
                            <YCoordinate language="JavaScript">
                                <![CDATA[
                                    this.pacman.getY()
                                ]]>
                            </YCoordinate>
                            <Slot property="cellRole" value="0" />
                        </UpdateGridCell>
                    </UPDATE-ENV>
                    <SCHEDULE-EVT>
                        <CausedEventExpr eventType="EatPillFood" />
                    </SCHEDULE-EVT>
                </THEN>
            </EnvironmentRule>
            <!-- Move one object/agent with the given increments/decrements -->
            <EnvironmentRule name="MovePacMan_Rule">
                <WHEN eventType="MovePacMan" eventVariable="moveEvent" />
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacMan" />
                <DO>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="pacMan">
                            <Slot property="x">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        this.pacMan.getX() + this.moveEvent.getX()
                                    ]]>
                                </ValueExpr>
                            </Slot>
                            <Slot property="y">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        this.pacMan.getY() + this.moveEvent.getY()
                                    ]]>
                                </ValueExpr>
                            </Slot>
                        </UpdateObject>
                        <UpdateStatisticsVariable variable="numberOfMovements">
                            <ValueExpr language="JavaScript">
                                <![CDATA[
                                   __SimStatistics.numberOfMovements.getValue() + 1
                                ]]>
                            </ValueExpr>
                        </UpdateStatisticsVariable>
                    </UPDATE-ENV>
                </DO>
            </EnvironmentRule>
            <!-- Decide next movement of the Ghost Blinky (red ghost) -->
            <EnvironmentRule name="MoveGhostsBlinky_Rule">
                <ON-EACH-SIMULATION-STEP />
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacman" />
                <FOR-ObjectVariable objectIdRef="10000" objectType="GhostBlinky" variable="blinky" />
                <FOR-DataVariable dataType="Integer" variable="xIncrement">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                            this.blinky.getXIncrement(this.pacman.getX(), this.pacman.getY())
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <FOR-DataVariable dataType="Integer" variable="yIncrement">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                            this.blinky.getYIncrement(this.pacman.getX(), this.pacman.getY())
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <IF language="JavaScript">
                    <![CDATA[
                        __Simulator.getCurrentSimulationStep() > 25
                        && __Simulator.getCurrentSimulationStep() % (15 - __Global.getLevel() * 2) === 0
                    ]]>
                </IF>
                <THEN>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="blinky">
                            <Slot property="x">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        this.blinky.getX() + this.xIncrement
                                    ]]>
                                </ValueExpr>
                            </Slot>
                            <Slot property="y">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                         this.blinky.getY() + this.yIncrement
                                    ]]>
                                </ValueExpr>
                            </Slot>
                            <Slot property="movingDirection">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        (this.xIncrement === 1 ? __Direction.EAST : 
                                            (this.xIncrement === -1 ? __Direction.WEST : 
                                                (this.yIncrement === 1 ? __Direction.NORTH : 
                                                    (this.yIncrement === -1 ? __Direction.SOUTH : __Direction.NONE))))
                                    ]]>
                                </ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </THEN>
            </EnvironmentRule>
            <!-- Decide next movement of the Ghost Inky (turquoise ghost) -->
            <EnvironmentRule name="MoveGhostsInky_Rule">
                <ON-EACH-SIMULATION-STEP />
                <FOR-ObjectVariable objectIdRef="1" objectType="PacMan" variable="pacman" />
                <FOR-ObjectVariable objectIdRef="11000" objectType="GhostInky" variable="inky" />
                <FOR-DataVariable dataType="Integer" variable="xIncrement">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                            this.inky.getXIncrement(this.pacman.getX(), this.pacman.getY())
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <FOR-DataVariable dataType="Integer" variable="yIncrement">
                    <ValueExpr language="JavaScript">
                        <![CDATA[
                            this.inky.getYIncrement(this.pacman.getX(), this.pacman.getY())
                        ]]>
                    </ValueExpr>
                </FOR-DataVariable>
                <IF language="JavaScript">
                    <![CDATA[
                        __Simulator.getCurrentSimulationStep() > 25
                        && __Simulator.getCurrentSimulationStep() % (17 - __Global.getLevel() * 2) === 0
                    ]]>
                </IF>
                <THEN>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="inky">
                            <Slot property="x">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        this.inky.getX() + this.xIncrement
                                    ]]>
                                </ValueExpr>
                            </Slot>
                            <Slot property="y">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                         this.inky.getY() + this.yIncrement
                                    ]]>
                                </ValueExpr>
                            </Slot>
                            <Slot property="movingDirection">
                                <ValueExpr language="JavaScript">
                                    <![CDATA[
                                        (this.xIncrement === 1 ? __Direction.EAST : 
                                            (this.xIncrement === -1 ? __Direction.WEST : 
                                                (this.yIncrement === 1 ? __Direction.NORTH : 
                                                    (this.yIncrement === -1 ? __Direction.SOUTH : __Direction.NONE))))
                                    ]]>
                                </ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </THEN>
            </EnvironmentRule>
        </EnvironmentRules>
    </SimulationModel>
    <InitialState>
        <!-- the initial score the player get -->
        <GlobalVariable name="score" value="0" />
        <!-- keep tracking of the time past from start of the simulation -->
        <GlobalVariable name="passedTime" value="0" />
        <!-- the map width (number of columns) -->
        <GlobalVariable name="MapWidth">
            <ValueExpr language="JavaScript">
                <![CDATA[
                    __Global.getGameMap()[0].length
                ]]>
            </ValueExpr>
        </GlobalVariable>
        <!-- the map height (number of rows) -->
        <GlobalVariable name="MapHeight">
            <ValueExpr language="JavaScript">
                <![CDATA[
                    __Global.getGameMap().length
                ]]>
            </ValueExpr>
        </GlobalVariable>
        <!-- the initial number of cells that have contains Pill Food -->
        <GlobalVariable name="remainingPillFoodNumber">
            <ValueExpr language="JavaScript">
                <![CDATA[
                    __Global.getNumberOfFoodCells()
                ]]>
            </ValueExpr>
        </GlobalVariable>
        <!-- Pac Man agent -->
        <PhysicalAgent id="1" name="PacMan" type="PacMan" x="10" y="2" />
        <!-- Ghost Blinky agent -->
        <PhysicalAgent id="10000" name="Blinky" type="GhostBlinky" x="9" y="6" />
        <!-- Ghost Inky agent -->
        <PhysicalAgent id="11000" name="Inky" type="GhostInky" x="12" y="6" />
        <InitializationRule name="InitializeMap">
            <ForEachGridCell endX="20" endY="11" gridCellVariable="cell" startX="1" startY="1">
                <Code language="JavaScript">
                    <![CDATA[
                        // get map matrix
                        var map = __Global.getGameMap();
                        
                        // the left-down corner is (1,1) so need to adjust this
                        var yPos = __Global.getMapHeight() - cell.getPosY();
                        
                        // need to do POS - 1 while the space starts with pos (1,1) 
                        // but the Map Matrix starts with (0,0)
                        var xPos = cell.getPosX() - 1;
                        
                        // if the map position is 1 also the cell role is 1 (WALL), if 
                        // the map position is 0 then the cell role will be 2 (PillFood), 
                        // and if the map position is -1 then the cell role is 3 (complete empty)
                        cell.setCellRole(2 - map[yPos][xPos]);
                    ]]>
                </Code>
            </ForEachGridCell>
        </InitializationRule>
    </InitialState>
    <UserInterface supportedLanguages="en">
        <InitialStateUI>
            <GlobalVariableUI variable="level" widget="Slider" label="Difficulty level">
                <Hint>
                    <Text>The level of difficulty: controls the ghosts walking speed.</Text>
                </Hint>
            </GlobalVariableUI>
        </InitialStateUI>
        <AnimationUI showZoomControlPanel="false">
            <aors:StartPageText xmlns="http://www.w3.org/1999/xhtml">
                <aors:HtmlText>
                    <div style="float:left; width: 40%; padding: 7px 50px; text-align: center;">
                        <img src="media/map_level_1_description.png"
                            style="width: 90%; border: 1px solid black;" />
                    </div>
                    <div style="float:left; width: 40%; padding: 7px 0px">
                        <p>You play the role of <b>PacMan</b>, the main character of the classic
                            Pac-Man game.</p>
                        <p>These are the possible actions you can do:</p>
                        <ul>
                            <li>Move the <b>PacMan</b>: <ul>
                                    <li>left: '&#8592;' or '<i>A</i>' keys</li>
                                    <li>right: '&#8594;' or '<i>D</i>' keys</li>
                                    <li>up: '&#8593;' or '<i>W</i>' keys</li>
                                    <li>down: '&#8595;' or '<i>S</i>' keys</li>
                                </ul>
                            </li>
                            <li>Collect the <i>Food Pills</i> from all the cells you enter.</li>
                            <li>Avoid <i>Blinky</i> and <i>Inky</i>, the unfriendly ghosts, that
                                will enjoy eating you.</li>
                        </ul>
                        <p>The goals: <i>guide the PacMan towards the map and collect the food from
                                all cells</i>.</p>
                        <p>If <i>Inky</i> or <i>Bliky</i> will catch you, the game is over, but
                            don't give up, try again!</p>
                    </div>
                </aors:HtmlText>
            </aors:StartPageText>
			<aors:HelpText xmlns="http://www.w3.org/1999/xhtml">
                    <aors:HtmlText>
                        <p>You play the role of <b>PacMan</b>, the main character of the classic
                            Pac-Man game.</p>
                        <p>These are the possible actions you can do:</p>
                        <ul>
                            <li>Move the <b>PacMan</b>: <ul>
                                    <li>left: '&#8592;' or '<i>A</i>' keys</li>
                                    <li>right: '&#8594;' or '<i>D</i>' keys</li>
                                    <li>up: '&#8593;' or '<i>W</i>' keys</li>
                                    <li>down: '&#8595;' or '<i>S</i>' keys</li>
                                </ul>
                            </li>
                            <li>Collect the <i>Food Pills</i> from all the cells you enter.</li>
                            <li>Avoid <i>Blinky</i> and <i>Inky</i>, the unfriendly ghosts, that
                                will enjoy eating you.</li>
                        </ul>
                        <p>The goals: <i>guide the PacMan towards the map and collect the food from
                                all cells</i>.</p>
                        <p>If <i>Inky</i> or <i>Bliky</i> will catch you, the game is over, but
                            don't give up, try again!</p>
                    </aors:HtmlText>
            </aors:HelpText>
            <Views>
                <SpaceView canvasColor="grey">
                    <TwoDimensionalGridSpaceView2D backgroundColor="black">
                        <GridCellPropertyVisualizationMap a0="0" a1="1" a2="3"
                            cellViewProperty="fill" mapType="equalityCaseWise" property="cellRole"
                            v0="black" v1="blue" v2="black" />
                        <GridCellPropertyVisualizationMap a0="2" cellViewProperty="texture"
                            mapType="equalityCaseWise" property="cellRole" v0="PillFood.png" />
                    </TwoDimensionalGridSpaceView2D>
                </SpaceView>
                <PhysicalObjectView physicalObjectIdRef="1">
                    <PhysicalShape2D>
                        <Square>
                            <ShapePropertyVisualizationMap a0="true" a1="false"
                                mapType="equalityCaseWise" property="mouthOpen"
                                shapeProperty="texture" v0="PacMan_open.png" v1="PacMan_close.png" />
                            <ShapePropertyVisualizationMap a0="SOUTH" a1="WEST" a2="NORTH" a3="EAST"
                                mapType="enumerationMap" property="movingDirection"
                                shapeProperty="horizontalFlip" v0="true" v1="true" v2="false"
                                v3="false" />
                            <ShapePropertyVisualizationMap a0="EAST" a1="NORTH" a2="WEST" a3="SOUTH"
                                mapType="enumerationMap" property="movingDirection"
                                shapeProperty="rot" v0="0" v1="90" v2="0" v3="90" />
                        </Square>
                    </PhysicalShape2D>
                </PhysicalObjectView>
                <PhysicalObjectView physicalObjectType="GhostBlinky">
                    <PhysicalShape2D>
                        <Square>
                            <ShapePropertyVisualizationMap a0="EAST" a1="NORTH" a2="WEST" a3="SOUTH"
                                mapType="enumerationMap" property="movingDirection"
                                shapeProperty="texture" v0="red_ghost_look_east.png"
                                v1="red_ghost_look_north.png" v2="red_ghost_look_west.png"
                                v3="red_ghost_look_south.png" v4="red_ghost_look_none.png" />
                        </Square>
                    </PhysicalShape2D>
                </PhysicalObjectView>
                <PhysicalObjectView physicalObjectType="GhostInky">
                    <PhysicalShape2D>
                        <Square>
                            <ShapePropertyVisualizationMap a0="EAST" a1="NORTH" a2="WEST" a3="SOUTH"
                                mapType="enumerationMap" property="movingDirection"
                                shapeProperty="texture" v0="turquoise_ghost_look_east.png"
                                v1="turquoise_ghost_look_north.png"
                                v2="turquoise_ghost_look_west.png"
                                v3="turquoise_ghost_look_south.png"
                                v4="turquoise_ghost_look_none.png" />
                        </Square>
                    </PhysicalShape2D>
                </PhysicalObjectView>
                <EventAppearance eventType="EatPillFood">
                    <Sound soundFile="eating" />
                </EventAppearance>
                <EventAppearance eventType="StartGame">
                    <Sound soundFile="start" />
                </EventAppearance>
                <EventAppearance eventType="PacManDies">
                    <Sound soundFile="die" />
                </EventAppearance>
                <EventAppearance eventType="WinGame">
                    <Sound soundFile="win" />
                </EventAppearance>
            </Views>
            <AgentControlUI initiallyPlayedAgent="PacMan">
                <AgentControlByAgentType type="PacMan">
                    <TopOutputPanel>
                        <OutputFieldGroup>
                            <OutputField label="Remaining food">
                                <Hint>
                                    <Text>The number of remaining food pieces on the map.</Text>
                                </Hint>
                                <Source>
                                    <GlobalVariable name="remainingPillFoodNumber" />
                                </Source>
                            </OutputField>
                            <OutputField label="Score">
                                <Hint>
                                    <Text>Your current score.</Text>
                                </Hint>
                                <Source>
                                    <GlobalVariable name="score" />
                                </Source>
                            </OutputField>
                            <OutputField label="Elapsed time">
                                <Hint>
                                    <Text>The time passed from simulation start, up to now.</Text>
                                </Hint>
                                <Format decimalPlaces="0">
                                    <Time>s</Time>
                                </Format>
                                <Source>
                                    <GlobalVariable name="passedTime" />
                                </Source>
                            </OutputField>
                        </OutputFieldGroup>
                    </TopOutputPanel>
                    <BottomOutputPanel>
                        <OutputFieldGroup>
                            <OutputField label="Number of visited cells">
                                <Hint>
                                    <Text>The number of movements you have made.</Text>
                                </Hint>
                                <Source>
                                    <StatisticsVariable name="numberOfMovements" />
                                </Source>
                            </OutputField>
                        </OutputFieldGroup>
                    </BottomOutputPanel>
                    <UserActionEventListener>
                        <WHEN>
                            <KeyboardEventExpr keyIdentifier="Right" />
                            <KeyboardEventExpr keyIdentifier="D" />
                        </WHEN>
                        <EXECUTE actionRule="MoveEast_ActionRule" />
                    </UserActionEventListener>
                    <UserActionEventListener>
                        <WHEN>
                            <KeyboardEventExpr keyIdentifier="Left" />
                            <KeyboardEventExpr keyIdentifier="A" />
                        </WHEN>
                        <EXECUTE actionRule="MoveWest_ActionRule" />
                    </UserActionEventListener>
                    <UserActionEventListener>
                        <WHEN>
                            <KeyboardEventExpr keyIdentifier="Up" />
                            <KeyboardEventExpr keyIdentifier="W" />
                        </WHEN>
                        <EXECUTE actionRule="MoveNorth_ActionRule" />
                    </UserActionEventListener>
                    <UserActionEventListener>
                        <WHEN>
                            <KeyboardEventExpr keyIdentifier="Down" />
                            <KeyboardEventExpr keyIdentifier="S" />
                        </WHEN>
                        <EXECUTE actionRule="MoveSouth_ActionRule" />
                    </UserActionEventListener>
                </AgentControlByAgentType>
            </AgentControlUI>
        </AnimationUI>
    </UserInterface>
</SimulationScenario>
