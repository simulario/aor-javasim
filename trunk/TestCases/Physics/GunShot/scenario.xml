<?xml version="1.0" encoding="UTF-8"?>

<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-8-4.xsd"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns="http://aor-simulation.org"
 xmlns:aors="http://aor-simulation.org"
 version="0.8.4"
 scenarioName="GunShot">
  <SimulationParameters simulationSteps="3000" timeUnit="ms"/>

  <SimulationModel modelName="GunShot" modelTitle="Gun Shot with Gravitation Effect">
    <documentation>
      <dc:description xml:lang="en">
        Emulate a gun shot by following the Physics laws and considering environment gravitation. 
        It is possible to change parameters like shot speed, shot angle or environment gravitation value.
      </dc:description>
      <dc:creator>Mircea Diaconescu</dc:creator>
      <dc:created>20101020</dc:created>
      <dc:modified>201103028</dc:modified>
    </documentation>

    <SpaceModel geometry="Euclidean" spatialDistanceUnit="m">
      <TwoDimensional_LateralView xMax="2100" yMax="700"/>
    </SpaceModel>

    <Statistics>
      <Variable name="maxHeight" dataType="Float" initialValue="0"/>
    </Statistics>
    
    <Globals>
      <GlobalVariable name="simluationSlowDownRatio" dataType="Float" minValue="1" maxValue="10" initialValue="5"/>
      <GlobalVariable name="gravitation" dataType="Float" initialValue="9.81"/>
      <GlobalVariable name="gunRectRadius" dataType="Float" initialValue="105"/>
      <GlobalVariable name="gunRectCenterX" dataType="Float" initialValue="105"/>
      <GlobalVariable name="gunRectCenterY" dataType="Float" initialValue="80"/>      
    </Globals>
    
    
    <EntityTypes>
      <ExogenousEventType name="Shot" periodicity="1">
        <StopCondition language="Java JavaScript"><![CDATA[this.getOccurrenceTime() > 1]]></StopCondition>
      </ExogenousEventType>
      <ExogenousEventType name="Step" periodicity="1"/>
      <CausedEventType name="MaxHeightReached">
        <Attribute type="Float" name="maxHeight"/>
      </CausedEventType>
      <PhysicalObjectType name ="Ground" />
      <PhysicalObjectType name="Bullet">
        <Attribute type="Float" name="distance"/>
        <Attribute type="Boolean" name="maxHeightReached" initialValue="false"/>
        <Attribute type="Boolean" name="vMaxSliderCreated" initialValue="false"/>
      </PhysicalObjectType>
      <PhysicalObjectType name="Gun">
        <InheritedAttributeSettings attribute="x" initialValue="105"/>
        <InheritedAttributeSettings attribute="y" initialValue="80"/>
        <InheritedAttributeSettings attribute="width" initialValue="210"/>
        <InheritedAttributeSettings attribute="height" initialValue="160"/>
        <InheritedAttributeSettings attribute="rotZ" minValue="0" maxValue="90" initialValue="45"/>
        <Attribute type="Float" name="shotVelocity" minValue="50" maxValue="150" initialValue="75"/>
        <Function name="getShotAngleInRadians" resultType="double">
          <Body language="Java JavaScript">
            <![CDATA[
              return (this.getRotZ() * Math.PI) / 180;
            ]]>
          </Body>
        </Function>
        
      </PhysicalObjectType>
      <PhysicalObjectType name="PathPoint"/>
      
      <PhysicalObjectType name="HorizontalBar"/>
      <PhysicalObjectType name="HorizontalSlider"/>
      
      <PhysicalObjectType name="VerticalBar"/>
      <PhysicalObjectType name="VerticalSlider"/>
    </EntityTypes>
    
    <EnvironmentRules>
      <EnvironmentRule name="ShotBulletRule">
        <WHEN eventType="Shot" eventVariable="shotEvent"/>
        <FOR-ObjectVariable variable="gun" objectType="Gun"/>
        <DO>
          <UPDATE-ENV>
            <Create>
              <PhysicalObject type="Bullet" id="2" name="Bomb">
                <Slot property="distance" value="0"/>
                <Slot property="x">
                  <ValueExpr language="JavaScript"><![CDATA[sim.controller.Global.getGunRectCenterX() + sim.controller.Global.getGunRectRadius() * Math.cos(this.gun.getShotAngleInRadians())]]></ValueExpr>
                  <ValueExpr language="Java"><![CDATA[Global.getGunRectCenterX() + Global.getGunRectRadius() * Math.cos(this.gun.getShotAngleInRadians())]]></ValueExpr>
                </Slot>
                <Slot property="y">
                  <ValueExpr language="JavaScript"><![CDATA[sim.controller.Global.getGunRectCenterY() + sim.controller.Global.getGunRectRadius() * Math.sin(this.gun.getShotAngleInRadians())]]></ValueExpr>
                  <ValueExpr language="Java"><![CDATA[Global.getGunRectCenterY() + Global.getGunRectRadius() * Math.sin(this.gun.getShotAngleInRadians())]]></ValueExpr>
                </Slot>
                <Slot property="vx" value="100">
                  <ValueExpr language="Java JavaScript"><![CDATA[this.gun.getShotVelocity()]]></ValueExpr>
                </Slot>
                <Slot property="width" value="40"/>
                <Slot property="height" value="40"/>
              </PhysicalObject>
            </Create>
          </UPDATE-ENV>
        </DO>
      </EnvironmentRule>
      
      <EnvironmentRule name="MoveBulletRule">
        <WHEN eventType="Step" eventVariable="stepEvent"/>
        <FOR-ObjectVariable variable="bullet" objectType="Bullet" objectIdRef="2"/>
        <FOR-ObjectVariable variable="hSlider" objectType="HorizontalSlider" objectIdRef="101"/>
        <FOR-ObjectVariable variable="vSlider" objectType="VerticalSlider" objectIdRef="201"/>
        <FOR-ObjectVariable variable="gun" objectType="Gun"/>
        <FOR-DataVariable variable="currentTime" dataType="Float">
          <ValueExpr language="Java JavaScript"><![CDATA[this.stepEvent.getOccurrenceTime()/__Global.getSimluationSlowDownRatio()]]></ValueExpr>
        </FOR-DataVariable>
        <IF language="Java JavaScript"><![CDATA[this.bullet.getY() - this.bullet.getHeight() / 2.0 > 0]]></IF>
        <THEN>
          <UPDATE-ENV>
            <UpdateObject objectVariable="bullet">
              <Slot property="distance">
                <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getVx() * this.currentTime]]></ValueExpr>
              </Slot>
              <Slot property="x">
                <ValueExpr language="JavaScript">
                  <![CDATA[sim.controller.Global.getGunRectCenterX() + sim.controller.Global.getGunRectRadius() * Math.cos(this.gun.getShotAngleInRadians()) + this.gun.getShotVelocity() *  Math.cos(this.gun.getShotAngleInRadians()) * this.currentTime]]>
                </ValueExpr>
                <ValueExpr language="Java">
                  <![CDATA[Global.getGunRectCenterX() + Global.getGunRectRadius() * Math.cos(this.gun.getShotAngleInRadians()) + this.gun.getShotVelocity() *  Math.cos(this.gun.getShotAngleInRadians()) * this.currentTime]]>
                </ValueExpr>
              </Slot>
              <Slot property="y">
                <ValueExpr language="JavaScript">
                  <![CDATA[sim.controller.Global.getGunRectCenterY() + sim.controller.Global.getGunRectRadius() * Math.sin(this.gun.getShotAngleInRadians()) + this.gun.getShotVelocity() *  Math.sin(this.gun.getShotAngleInRadians()) * this.currentTime - (sim.controller.Global.getGravitation() / 2.0) * this.currentTime * this.currentTime]]>
                </ValueExpr>
                <ValueExpr language="Java">
                  <![CDATA[Global.getGunRectCenterY() + Global.getGunRectRadius() * Math.sin(this.gun.getShotAngleInRadians()) + this.gun.getShotVelocity() *  Math.sin(this.gun.getShotAngleInRadians()) * this.currentTime - (Global.getGravitation() / 2.0) * this.currentTime * this.currentTime]]>
                </ValueExpr>
              </Slot>
            </UpdateObject>
            
            <UpdateObject objectVariable="hSlider">
              <Slot property="x">
                <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getX()]]></ValueExpr>
              </Slot>
            </UpdateObject>
            
            <UpdateObject objectVariable="vSlider">
              <Slot property="y">
                <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getY()]]></ValueExpr>
              </Slot>
            </UpdateObject>
          </UPDATE-ENV>
        </THEN>
        <ELSE>
          <UPDATE-ENV>
            <UpdateObject objectVariable="bullet">
              <Slot property="y">
                <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getHeight()/2]]></ValueExpr>
              </Slot>
            </UpdateObject>
            <UpdateObject objectVariable="vSlider">
              <Slot property="y" value="0"/>
            </UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="StopSimulationEvent"/>
          </SCHEDULE-EVT>
        </ELSE>
      </EnvironmentRule>
      
      <EnvironmentRule name="MaxHeightReachedRule">
        <WHEN eventType="Step" eventVariable="stepEvent"/>
        <FOR-ObjectVariable variable="bullet" objectIdRef="2" objectType="Bullet"/>
        <IF language="JavaScript"><![CDATA[sim.controller.SimStatistics.maxHeight.getValue() < this.bullet.getY()]]></IF>
        <IF language="Java"><![CDATA[SimStatistics.maxHeight.getValue() < this.bullet.getY()]]></IF>
        <THEN>
          <UPDATE-ENV>
            <UpdateStatisticsVariable variable="maxHeight">
              <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getY()]]></ValueExpr>
            </UpdateStatisticsVariable>
          </UPDATE-ENV>
        </THEN>
        <ELSE>
          <UPDATE-ENV>
            <UpdateObject objectVariable="bullet">
              <Slot property="maxHeightReached" value="true"/>
            </UpdateObject>
          </UPDATE-ENV>
        </ELSE>
      </EnvironmentRule>
      
      <EnvironmentRule name="CreateMaxHeightSliderRule">
        <WHEN eventType="Step" eventVariable="stepEvent"/>
        <FOR-ObjectVariable variable="bullet" objectIdRef="2" objectType="Bullet"/>
        <IF language="Java JavaScript"><![CDATA[this.bullet.isMaxHeightReached()  && !this.bullet.isVMaxSliderCreated()]]></IF>
        <THEN>
          <UPDATE-ENV>
            <Create>
              <PhysicalObject type="VerticalSlider">
                <Slot property="x">
                  <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getX()]]></ValueExpr>
                </Slot>
                <Slot property="y">
                  <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getY()]]></ValueExpr>
                </Slot>
                <Slot property="width" value="100"/>
              </PhysicalObject>
            </Create>
            <UpdateObject objectVariable="bullet">
              <Slot property="vMaxSliderCreated" value="true"/>
            </UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="MaxHeightReached" >
              <Slot property="maxHeight">
                <ValueExpr language="JavaScript"><![CDATA[sim.controller.SimStatistics.maxHeight.getValue()]]></ValueExpr>
                <ValueExpr language="Java"><![CDATA[SimStatistics.maxHeight.getValue()]]></ValueExpr>
              </Slot>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </THEN>
      </EnvironmentRule>
      
      <EnvironmentRule name="DrawBulletPathRule">
        <WHEN eventType="Step" eventVariable="stepEvent"/>
        <FOR-ObjectVariable variable="bullet" objectType="Bullet" objectIdRef="2"/>
        <IF language="Java JavaScript"><![CDATA[this.stepEvent.getOccurrenceTime() % sim.controller.Global.getSimluationSlowDownRatio() == 0]]></IF>
        <THEN>
          <UPDATE-ENV>
            <Create>
              <PhysicalObject type="PathPoint" name="PathPoint">
                <Slot property="x">
                  <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getX()]]></ValueExpr>
                </Slot>
                <Slot property="y">
                  <ValueExpr language="Java JavaScript"><![CDATA[this.bullet.getY()]]></ValueExpr>
                </Slot>
                <Slot property="width" value="5"/>
              </PhysicalObject>
            </Create>
          </UPDATE-ENV>
        </THEN>
      </EnvironmentRule>
    </EnvironmentRules>
    
  </SimulationModel>
  

  <InitialState>
    <PhysicalObject objectVariable="gun" type="Gun" name="Gun" id="1"/>

    <PhysicalObject type="HorizontalBar" name="HorizontalBar" id="100" x="1050" y="600" z="1" width="2100" height="21"/>
    <PhysicalObject type="HorizontalSlider" name="HorizontalSlider" id="101" y="600" z="2" width="11" height="42">
      <Slot property="x">
        <ValueExpr language="JavaScript"><![CDATA[sim.controller.Global.getGunRectCenterX() + sim.controller.Global.getGunRectRadius() * Math.cos(gun.getShotAngleInRadians())]]></ValueExpr>
        <ValueExpr language="Java"><![CDATA[Global.getGunRectCenterX() + Global.getGunRectRadius() * Math.cos(gun.getShotAngleInRadians())]]></ValueExpr>
      </Slot>
    </PhysicalObject>

    <PhysicalObject type="VerticalBar" name="VerticalBar" id="200" x="2000" z="1" y="350" width="21" height="700"/>
    <PhysicalObject type="VerticalSlider" name="VerticalSlider" id="201" x="2000" z="2" width="42" height="11">
      <Slot property="y">
        <ValueExpr language="JavaScript"><![CDATA[sim.controller.Global.getGunRectCenterY() + sim.controller.Global.getGunRectRadius() * Math.sin(gun.getShotAngleInRadians())]]></ValueExpr>
        <ValueExpr language="Java"><![CDATA[Global.getGunRectCenterY() + Global.getGunRectRadius() * Math.sin(gun.getShotAngleInRadians())]]></ValueExpr>    
      </Slot>
    </PhysicalObject>

    <ExogenousEvent type="Shot" occurrenceTime="1"/>
    <ExogenousEvent type="Step" occurrenceTime="1"/>

   
  </InitialState>

  <UserInterface supportedLanguages="en de">
    <InitialStateUI>
      
      <GlobalVariableUI variable="simluationSlowDownRatio" widget="Slider" sliderStepSize="1">
        <Label>
          <Text>Slow Down Ratio</Text>
          <Text xml:lang="en">Slow Down Ratio</Text>
          <Text xml:lang="de">Verlangsamen Verhältnis</Text>
        </Label>
        <Hint>
          <Text>The ratio for slowing down the simulation</Text>
          <Text xml:lang="en">The ratio for slowing down the simulation</Text>
          <Text xml:lang="de">Das Verhältnis zur Verlangsamung der Simulation</Text>
        </Hint>
      </GlobalVariableUI>
      
      <GlobalVariableUI variable="gravitation">
        <Label>
          <Text xml:lang="de">Gravitation</Text>
          <Text xml:lang="en">Gravitation</Text>
        </Label>
        <Hint>
          <Text>The gravitation in the environment</Text>
          <Text xml:lang="en">The gravitation in the environment</Text>
          <Text xml:lang="de">Die Gravitation in die Umwelt</Text>
        </Hint>
        <Format decimalPlaces="2">
          <Physics>m/s²</Physics>
        </Format>
      </GlobalVariableUI>
      
      <ObjectUI objectType="Gun" maxNmrOfInstances="1" minNmrOfInstances="1">
        <PropertyUI property="rotZ" widget="Slider">
          <Label>
            <Text>Shot Angle</Text>
            <Text xml:lang="en">Shot Angle</Text>
            <Text xml:lang="de">Schusswinkel</Text>
          </Label>
          <Hint>
            <Text>The shot angle for the bomb</Text>
            <Text xml:lang="de">Der Schuss Winkel für die Bombe</Text>
            <Text xml:lang="en">The shot angle for the bomb</Text>
          </Hint>
          <Format decimalPlaces="0">
            <Math>°</Math>
          </Format>
        </PropertyUI>
        <PropertyUI property="shotVelocity" widget="Slider" sliderStepSize="5">
          <Label>
            <Text>Shot Velocity</Text>
            <Text xml:lang="en">Shot Velocity</Text>
            <Text xml:lang="de">Schussgeschwindigkeit</Text>
          </Label>
          <Hint>
            <Text>The shoot velocity of the bomb</Text>
            <Text xml:lang="en">The shoot velocity of the bomb</Text>
            <Text xml:lang="de">Das Shooting Geschwindigkeit für die Bombe</Text>
          </Hint>
          <Format decimalPlaces="0">
            <Physics>m/s</Physics>
          </Format>
        </PropertyUI>
      </ObjectUI>      
    </InitialStateUI>
    
    <AnimationUI>
      <aors:DisplayDescription  xmlns="http://www.w3.org/1999/xhtml">
        <aors:HtmlText>
          <p>The example provides a easy way to understand basic kinematics rules under the effect of gravitation.
          When the simulation starts, the bomb is thrown by the cannon under a specified angle and with a specified speed. 
          The gravitation as well as the shot initial velocity has impact over the trajectory and determine the maximum distance reached by the bomb.</p>
          <p> The following parameters allows you to control the cannon and the simulation behavior:
            <ul style="margin: 20px;">
              <li><i>Slow Down Ratio</i> : helps to observe the movement of the bomb with a slow motion effect or with an increased speed.</li>
              <li><i>Velocity</i> : lets you specifying the initial velocity for the bomb. Note that the velocity decreases under gravitation effect.</li>
              <li><i>Gravitation</i> : the gravitation of the environment (e.g. you are able to simulate the movement of the bomb on Earth or on Moon).</li>
              <li><i>Shot Angle</i> : the angle under which the bomb is thrown by the cannon.</li>         
            </ul>
          </p>
        </aors:HtmlText>
        <aors:HtmlText xml:lang="en">
          <p>The example provides a easy way to understand basic kinematics rules under the effect of gravitation.
            When the simulation starts, the bomb is thrown by the cannon under a specified angle and with a specified speed. 
            The gravitation as well as the shot initial velocity has impact over the trajectory and determine the maximum distance reached by the bomb.</p>
          <p> The following parameters allows you to control the cannon and the simulation behavior:
            <ul style="margin: 20px;">
              <li><i>Slow Down Ratio</i> : helps to observe the movement of the bomb with a slow motion effect or with an increased speed.</li>
              <li><i>Velocity</i> : lets you specifying the initial velocity for the bomb. Note that the velocity decreases under gravitation effect.</li>
              <li><i>Gravitation</i> : the gravitation of the environment (e.g. you are able to simulate the movement of the bomb on Earth or on Moon).</li>
              <li><i>Shot Angle</i> : the angle under which the bomb is thrown by the cannon.</li>         
            </ul>
          </p>
        </aors:HtmlText>
      </aors:DisplayDescription>
      
      <Views>
        <SpaceView canvasColorRGB="220 220 220">
          <TwoDimensionalSpaceView2D backgroundColor="lightgrey"/>
        </SpaceView>

        <PhysicalObjectView physicalObjectType="PathPoint">
          <PhysicalShape2D>
            <Circle fill="blue"/>
          </PhysicalShape2D>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectType="Gun">
          <PhysicalShape2D>
            <Rectangle texture="cannon.png"/>
          </PhysicalShape2D>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectIdRef="2" physicalObjectType="Bullet">
          <PhysicalShape2D>
            <Rectangle texture="projectil.png"/>
          </PhysicalShape2D>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectType="HorizontalSlider">
          <PhysicalShape2D>
            <Rectangle fill="red" stroke="blue" strokeWidth="1"/>
          </PhysicalShape2D>
          <DisplayInfo property="x" content="m"/>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectType="HorizontalBar">
          <PhysicalShape2D>
            <Rectangle fill="white" stroke="blue" strokeWidth="1"/>
          </PhysicalShape2D>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectType="VerticalSlider">
          <PhysicalShape2D>
            <Rectangle fill="red" stroke="blue" strokeWidth="1" positioning="CenterBottom"/>
          </PhysicalShape2D>
          <DisplayInfo property="y" content="m"/>
        </PhysicalObjectView>

        <PhysicalObjectView physicalObjectType="VerticalBar">
          <PhysicalShape2D>
            <Rectangle fill="white" stroke="blue" strokeWidth="1"/>
          </PhysicalShape2D>
        </PhysicalObjectView>
      </Views>
    </AnimationUI>
  </UserInterface>
</SimulationScenario>
