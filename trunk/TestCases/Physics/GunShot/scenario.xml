<?xml version="1.0" encoding="UTF-8"?>

<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://aor-simulation.org ../../../AORSL/AORSL_0-8-4.xsd"
    xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://aor-simulation.org" version="0.8.4"
    scenarioName="GunShot">
    <SimulationParameters simulationSteps="300" timeUnit="s"/>

    <SimulationModel modelName="GunShot" modelTitle="Gun Shot with Gravitation Effect">
        <documentation>
            <dc:description>Emulate a gun shot by following Physics lows and using
                gravitation.</dc:description>
            <dc:creator>Mircea Diaconescu</dc:creator>
        </documentation>

        <SpaceModel geometry="Euclidean" spatialDistanceUnit="m">
            <TwoDimensional_LateralView xMax="5000" yMax="3000"/>
        </SpaceModel>

        <Globals>
            <GlobalVariable name="gravitation" dataType="Float"/>
            <GlobalVariable name="PI" dataType="Float"/>
            <GlobalVariable name="shotAngle" dataType="Float"/>
            <GlobalVariable name="startX" dataType="Float"/>
            <GlobalVariable name="startY" dataType="Float"/>
            <GlobalFunction name="debug" resultType="double">
                <Parameter name="toPrintValue" type="double"/>
                <Body language="Java">
                    System.out.println(toPrintValue);
                    
                    return 1;
                </Body>
            </GlobalFunction>
            
        </Globals>


        <EntityTypes>
            <ExogenousEventType name="Shut" periodicity="1"/>
            <PhysicalObjectType name="Bullet"/>
            <PhysicalObjectType name="Gun"/>
        </EntityTypes>

        <EnvironmentRules>
            <EnvironmentRule name="ShutBulletRule">
                <WHEN eventType="Shut" eventVariable="shutEvent"/>
                <IF language="Java">shutEvent.getOccurrenceTime() == 1</IF>
                <THEN>
                    <UPDATE-ENV>
                        <Create>
                            <PhysicalObject type="Bullet" id="2">
                                <Slot property="x">
                                    <ValueExpr language="Java">Global.getStartX()</ValueExpr>
                                </Slot>
                                <Slot property="y">
                                    <ValueExpr language="Java">Global.getStartY()</ValueExpr>
                                </Slot>
                                <Slot property="vx" value="5"/>
                                <Slot property="vy" value="5"/>
                                <Slot property="width" value="113"/>
                                <Slot property="height" value="112"/>
                            </PhysicalObject>
                        </Create>
                    </UPDATE-ENV>
                </THEN>
            </EnvironmentRule>

            <EnvironmentRule name="MoveBulletRule">
                <WHEN eventType="Shut" eventVariable="shutEvent"/>
                <FOR objectVariable="bullet" objectType="Bullet" objectIdRef="2"/>
                <IF language="Java">shutEvent.getOccurrenceTime() >1</IF>
                <THEN>
                    <UPDATE-ENV>
                        <UpdateObject objectVariable="bullet">
                            <Slot property="x">
                                <ValueExpr language="Java">Global.getStartX() + bullet.getVx()*java.lang.Math.cos(Global.getShotAngle())*shutEvent.getOccurrenceTime()</ValueExpr>
                            </Slot>
                            <Slot property="y">
                                <ValueExpr language="Java">
                                    <![CDATA[
                                        Global.getStartY() + bullet.getX() * java.lang.Math.tan(Global.getShotAngle()) 
                                        - Global.getGravitation() * java.lang.Math.pow(bullet.getX(), 2)
                                        /(2*5*5*java.lang.Math.pow(java.lang.Math.cos(Global.getShotAngle()), 2))*java.lang.Math.cos(Global.getShotAngle()))
                                    *Global.debug(bullet.getY()
                                    ]]>
                                </ValueExpr>
                            </Slot>
                        </UpdateObject>
                    </UPDATE-ENV>
                </THEN>
            </EnvironmentRule>
        </EnvironmentRules>

    </SimulationModel>

    <InitialState>
        <PhysicalObject type="Gun" id="1" x="400" y="350" width="645" height="750"/>
        <ExogenousEvent type="Shut" occurrenceTime="1"/>
        
        <GlobalVariable name="startX" value="520"/>
        <GlobalVariable name="startY" value="700"/>
        <GlobalVariable name="gravitation" value="9.81"/>
        <GlobalVariable name="PI">
            <ValueExpr language="Java">java.lang.Math.PI</ValueExpr>
        </GlobalVariable>
        <GlobalVariable name="shotAngle">
            <ValueExpr language="Java">java.lang.Math.PI/4</ValueExpr>
        </GlobalVariable>
    </InitialState>

    <UserInterface>
        <AnimationUI>
            <Views>
                <SpaceView canvasColor="grey">
                    <TwoDimensionalSpaceView2D backgroundColor="lightgrey"/>
                </SpaceView>

                <PhysicalObjectView physicalObjectIdRef="1" physicalObjectType="Gun">
                    <PhysicalShape2D>
                        <Rectangle texture="colt45.png"/>
                    </PhysicalShape2D>
                </PhysicalObjectView>

                <PhysicalObjectView physicalObjectIdRef="2" physicalObjectType="Bullet">
                    <PhysicalShape2D>
                        <Rectangle texture="bullet.png"/>
                    </PhysicalShape2D>
                    <DisplayInfo property="x" content="m"></DisplayInfo>
                </PhysicalObjectView>
            </Views>
        </AnimationUI>

    </UserInterface>
</SimulationScenario>
