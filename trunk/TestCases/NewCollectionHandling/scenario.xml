<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://aor-simulation.org ../../../AOR-JSim_v.2.1/AORSL/AORSL_0-8-4.xsd"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns="http://aor-simulation.org"
 xmlns:aors="http://aor-simulation.org"
 version="0.8.4"
 scenarioName="SingleServiceQueue_withMeanResponseTimeStatistics"
 scenarioTitle="A single service queue with customer objects creation using a FIFO buffer for the service queue."
 simulationManagerDirectory="../../..">

  <SimulationParameters simulationSteps="10000" stepDuration="1" timeUnit="min"/>

  <SimulationModel modelName="SingleServiceQueue_withMeanResponseTimeStatistics"
    modelTitle="A single service queue with customer objects creation using a FIFO buffer for the service queue including the customer in service as the first/topmost item">

    <documentation>
      <dc:creator>Gerd Wagner</dc:creator>
      <dc:created>20081001</dc:created>
      <dc:contributor>Jens Werner</dc:contributor>
      <dc:modified>20081105</dc:modified>
      <dc:description>Customers arrive at random times at a service desk where they have to wait in a queue when the service desk is busy. The time between two customer arrivals is uniformly distributed between 1 and 8 minutes. The times for completing a service vary from 1 to 6 minutes, with probabilities 0.1, 0.2, 0.3, 0.25, 0.1, 0.05, respectively. Two statistics are to be collected: mean response time (length of time a customer spends in the system) and mean proportion of customers who spend 5 or more minutes in the system (the latter is not yet implemented). An arriving customer is represented by a newly generated object, which is destroyed again, when this customer leaves the system. The customer in service is represented by the first/topmost item in the First-In-First-Out queue, while the remaining items of the queue represent the waiting line.</dc:description>
      <processModelDiagram>BPMN-Diagram.png</processModelDiagram>
    </documentation>

    <Statistics>
      <Variable name="nmrOfDepartures" dataType="Integer"/>
      <Variable name="cumulativeResponseTime" dataType="Integer"/>
      <Variable name="meanResponseTime" dataType="Float">
        <Source computeOnlyAtEnd="true">
        <ValueExpr language="Java"> (float)SimStatistics.cumulativeResponseTime.getValue()
        / SimStatistics.nmrOfDepartures.getValue() </ValueExpr>
        </Source>
      </Variable> 
    </Statistics>
    <Globals>
    	<GlobalVariable name="customerQueue" refDataType="Customer" upperMultiplicity="unbounded"/>
      <GlobalFunction name="randomServiceTime" resultType="Integer">
        <Body language="Java"><![CDATA[
		int r = Random.uniformInt(0,99);
		if (r<10) return 1; 		// with probability 0.10
		else if (r<30) return 2;	// with probability 0.20
		else if (r<60) return 3;	// with probability 0.30
		else if (r<85) return 4;	// with probability 0.25
		else if (r<95) return 5;	// with probability 0.10
		else return 6;				// with probability 0.05
        ]]></Body>
      </GlobalFunction>
    </Globals>

    <EntityTypes>
      <!-- =================================================== -->
      <ExogenousEventType name="CustomerArrival">
        <!-- =================================================== -->
        <Periodicity>
          <DiscreteRandomVariable>
          	<UniformInt lowerBound="1" upperBound="8" />
          </DiscreteRandomVariable>
        </Periodicity>
      </ExogenousEventType>
      <!-- =================================================== -->
      <CausedEventType name="CustomerDeparture"/>
      <!-- =================================================== -->
      <ObjectType name="Customer">
      <!-- =================================================== -->
        <Attribute name="arrivalTime" type="Integer"/>
      </ObjectType>
    	<!-- =================================================== -->
    	<ObjectType name="ServiceDesk">
   		<!-- =================================================== -->
    		<Attribute name="isBusy" type="Boolean"/>
    		<ReferenceProperty name="customerQueue" type="Customer" upperMultiplicity="unbounded"/>
    	</ObjectType>
    </EntityTypes>

    <EnvironmentRules>
      <!-- =================================================== -->
      <EnvironmentRule name="ArrivalRule">
        <!-- =================================================== -->
        <documentation>
          <dc:description>When a new customer arrives, a new customer object is created and added to the customer queue. 
          	Then, if the service desk is not busy, the customer is going to be serviced and hence the service desk gets busy, 
          	and for ending the service, a departure event (with a delay being set to a random service time) is scheduled.</dc:description>
        </documentation>
        <WHEN eventType="CustomerArrival" eventVariable="e"/>
      	<FOR-ObjectVariable variable="sd" objectName="ServiceDesk"/>
        <DO>
          <UPDATE-ENV>
            <Create>
<!--
OLD code       	<Object type="Customer" addToCollection="CustomerQueue">
                                        ******************************
-->
            		<Object type="Customer" objectVariable="c">
              		<Slot property="arrivalTime">
                  <ValueExpr language="Java">e.getOccurrenceTime()</ValueExpr>
                </Slot>
              </Object>
            </Create>
          	<UpdateMultiValuedGlobalVariable name="customerQueue">
          		<AddLast itemVariable="c"/>          		
          	</UpdateMultiValuedGlobalVariable>
          	<UpdateObject objectVariable="sd">
          		<MultiValuedSlot property="customerQueue">
          			<AddLast itemVariable="c"/>
          		</MultiValuedSlot>
          	</UpdateObject>
          </UPDATE-ENV>
        </DO>
        <IF language="Java">! sd.isIsBusy() </IF>
        <THEN>
          <UPDATE-ENV>
          	<UpdateObject objectVariable="sd">
          		<Slot property="isBusy" value="true"/>
          	</UpdateObject>
          </UPDATE-ENV>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="CustomerDeparture">
            	<Delay><ValueExpr language="Java">Global.randomServiceTime()</ValueExpr></Delay>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </THEN>
      </EnvironmentRule>
      <!-- =================================================== -->
      <EnvironmentRule name="DepartureRule">
        <!-- =================================================== -->
        <documentation>
          <dc:description>When a customer departs, if the waiting line is empty (the queue size is equal to 0), 
          	the service desk is no longer busy. Otherwise, the next customer will be serviced, 
          	so a new future departure event is created (with a delay given by the random service time), 
          	and the queue size is decremented by 1.</dc:description>
        </documentation>
        <WHEN eventType="CustomerDeparture" eventVariable="e"/>
      	<FOR-ObjectVariable variable="sd" objectName="ServiceDesk"/>
<!--
      	<FOR objectType="Collection" objectVariable="q" objectName="CustomerQueue"/>
-->
      	<DO>
          <UPDATE-ENV>
<!--
            <RemoveObjectFromCollection collectionName="CustomerQueue" itemObjectVariable="o"/>
-->
          	<UpdateMultiValuedGlobalVariable name="customerQueue">
          		<RemoveFirst itemVariable="c"/>
          	</UpdateMultiValuedGlobalVariable>
          	<UpdateObject objectVariable="sd">
          		<MultiValuedSlot property="customerQueue">
          			<RemoveFirst itemVariable="c"/>
          		</MultiValuedSlot>
          	</UpdateObject>
          	
            <UpdateStatisticsVariable variable="nmrOfDepartures">
              <ValueExpr language="Java">
SimStatistics.nmrOfDepartures.getValue() + 1
              </ValueExpr>
            </UpdateStatisticsVariable>
            <UpdateStatisticsVariable variable="cumulativeResponseTime">
              <ValueExpr language="Java"><![CDATA[
SimStatistics.cumulativeResponseTime.getValue() + e.getOccurrenceTime() - c.getArrivalTime()              	
              	]]></ValueExpr>
            </UpdateStatisticsVariable>
          	
            <DestroyObject objectType="Customer" objectVariable="c"/>
          </UPDATE-ENV>
        </DO>
        <IF language="Java"> sd.getAllCustomerQueues().size() == 0 </IF>
        <THEN>
          <UPDATE-ENV>
          	<UpdateObject objectVariable="sd">
          		<Slot property="isBusy" value="false"/>
          	</UpdateObject>
          </UPDATE-ENV>
        </THEN>
        <ELSE>
          <SCHEDULE-EVT>
            <CausedEventExpr eventType="CustomerDeparture">
            	<Delay><ValueExpr language="Java">Global.randomServiceTime()</ValueExpr></Delay>
            </CausedEventExpr>
          </SCHEDULE-EVT>
        </ELSE>
      </EnvironmentRule>
    </EnvironmentRules>
<!--
  	<Collections>
      <Collection id="2" name="CustomerQueue" type="FIFO_QUEUE" itemType="Customer"/>
    </Collections>
-->
  </SimulationModel>

  <!-- =================================================== -->
  <InitialState>
  <!-- =================================================== -->
  	<GlobalVariable name="customerQueue">
  		<ValueExpr language="Java"><![CDATA[ new ArrayList<Customer>() ]]></ValueExpr>
  		<ValueExpr language="JavaScript"> new js.util.ArrayList() </ValueExpr>
  	</GlobalVariable>
  	<Object type="ServiceDesk" id="1" name="ServiceDesk">
  		<Slot property="isBusy" value="false"/>
  		<Slot property="customerQueue">
  			<ValueExpr language="Java"><![CDATA[ new ArrayList<Customer>() ]]></ValueExpr>
  			<ValueExpr language="JavaScript"> new js.util.ArrayList() </ValueExpr>
  		</Slot>
  	</Object>
    <ExogenousEvent type="CustomerArrival" occurrenceTime="1"/>
  </InitialState>
  
  <!-- =================================================== -->
  <UserInterface>
  <!-- =================================================== -->
    <StatisticsUI>
      <StatisticsVariableUI variable="meanResponseTime">
        <Label>
          <Text xml:lang="en">Mean Response Time</Text>
        </Label>
        <Hint>
          <Text xml:lang="en">What is the average lenght of time the customer spends in the system ?</Text>
        </Hint>
        <Format decimalPlaces="1" />
      </StatisticsVariableUI>
    </StatisticsUI>
  </UserInterface>
</SimulationScenario>
