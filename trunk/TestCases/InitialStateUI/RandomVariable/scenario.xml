<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>

<SimulationScenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://aor-simulation.org ../../../ext/aorsl/AORSL-0-8-2.xsd"
  xmlns="http://aor-simulation.org" xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:aors="http://aor-simulation.org" version="0.8.3" scenarioName="PredatorAndPrey"
  scenarioTitle="predator and prey ecosystem simulation" simulationManagerDirectory="../../..">

  <SimulationParameters simulationSteps="5000" stepDuration="10" timeUnit="ms" stepTimeDelay="100"/>
    <SimulationModel modelName="PredatorAndPrey" modelTitle="predator and prey ecosystem simulation ">
        <documentation>
            <dc:creator>Roland Koelbel</dc:creator>
            <dc:created>20090627</dc:created>
            <dc:description>
                This simulation simulates a predator and prey ecosystem. 
                The predators use the prey as their food ressource.
                On the other hand the prey needs food to survive. 
                Food itself regrows randomly depending on the pressence of a food ressource.
            </dc:description>
        </documentation>

        <!-- The grid model where the scenario takes place. -->
        <SpaceModel  geometry="Toroidal"  spatialDistanceUnit="m">
            <TwoDimensional xMax="800" yMax="600" />
        </SpaceModel>
        
        <Statistics>
            <!-- the number of all prey alive -->
            <Variable name="prey" dataType="Integer" displayName=" prey"  initialValue="50">
                <ValueExpr language="Java">SimStatistics.prey.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number of all predators alive -->
            <Variable name="predators" dataType="Integer" displayName=" predators"  initialValue="5" >
                <ValueExpr language="Java">SimStatistics.predators.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number prey which died because of age -->
            <Variable name="diedPrey" dataType="Integer" displayName=" died prey"  initialValue="0" >
                <ValueExpr language="Java">SimStatistics.diedPrey.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number of prey killed by predators -->
            <Variable name="killedPrey" dataType="Integer" displayName=" killed prey"  initialValue="0" >
                <ValueExpr language="Java">SimStatistics.killedPrey.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number of predators which died because of age -->
            <Variable name="diedPredators" dataType="Integer" displayName=" died predators"  initialValue="0" >
                <ValueExpr language="Java">SimStatistics.diedPredators.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number of predators which were born -->
            <Variable name="bornPredators" dataType="Integer" displayName=" born predators"  initialValue="0" >
                <ValueExpr language="Java">SimStatistics.bornPredators.getValue()</ValueExpr>
            </Variable>
            
            <!-- the number of prey which were born -->
            <Variable name="bornPrey" dataType="Integer" displayName=" born prey"  initialValue="0" >
                <ValueExpr language="Java">SimStatistics.bornPrey.getValue()</ValueExpr>
            </Variable>
        </Statistics>        
        
        <!-- The data types to differ a specimen between predator and prey. -->
        <DataTypes>
            
            <Enumeration name="SpecimenType">
                <EnumerationLiteral>PREY</EnumerationLiteral>
                <EnumerationLiteral>PREDATOR</EnumerationLiteral>
            </Enumeration>
            
            <Enumeration name="EyeSizeEnumLit">
			    <EnumerationLiteral>SMALL</EnumerationLiteral>
			    <EnumerationLiteral>MEDIUM</EnumerationLiteral>
			    <EnumerationLiteral>LARGE</EnumerationLiteral>
		    </Enumeration>
		    
		    <Enumeration name="EyeStateEnumLit">
			     <EnumerationLiteral>OPEN</EnumerationLiteral>
			     <EnumerationLiteral>CLOSED</EnumerationLiteral>
		    </Enumeration>
		    
		    <Enumeration name="EyeColorEnumLit">
			     <EnumerationLiteral>BLUE</EnumerationLiteral>
			     <EnumerationLiteral>GREEN</EnumerationLiteral>
			     <EnumerationLiteral>GREY</EnumerationLiteral>
		    </Enumeration>
		    
        </DataTypes>
        
        <!-- Events, Agents and their rules that are involved in the scenario. -->
        <EntityTypes>
            
            <!-- A new simuation step event and its periodicity. -->
            <ExogenousEventType name="NextSimulationStep">
                <Periodicity language="Java"><![CDATA[ 1 ]]></Periodicity>
            </ExogenousEventType>
            
            <!-- Event indicates that a specimen should take the necessary actions to prepare moving. -->
            <PerceptionEventType name="PrepareToMove"/>
            
            <!-- Event indicates that a prey specimen is eating one point of food. -->
            <PerceptionEventType name="EatFood"/>
            
            <!-- A perception event which is triggered if a specimen moves to another cell which is occupied by another specimen. -->
            <PerceptionEventType name="PerceiveSpecimen">
                <ReferenceProperty name="perceivedSpecimen" type="Specimen"/>
            </PerceptionEventType>

            <!-- The move event indicates that a specimen is moving. -->
            <ActionEventType name="Move"/>
            
            <!-- The specimen is going to die. -->
            <ActionEventType name="Die"/>
            
            <!-- A new prey specimen is going to be produced. -->
            <ActionEventType name="ProduceNewPrey">
                <ReferenceProperty name="mother" type="Specimen"/>
                <ReferenceProperty name="father" type="Specimen"/>
            </ActionEventType>
            
            <!-- A new predator specimen is going to be produced. -->
            <ActionEventType name="ProduceNewPredator">
                <ReferenceProperty name="mother" type="Specimen"/>
                <ReferenceProperty name="father" type="Specimen"/>
            </ActionEventType>
            
            <!-- After eating one point of food by a prey the food degrades. -->
            <ActionEventType name="DegradeFood"/>
            
            <!-- If a food ressource is available, the food regrows. -->
            <CausedEventType name="GrowFood">
                <ReferenceProperty name="foodRessource" type="FoodRessource"/>
            </CausedEventType>
            
            <CausedEventType name="DecreaseNumberOfPrey"/>
            <CausedEventType name="DecreaseNumberOfPredator"/>
            
            <!-- If a predator perceives a prey a KillPrey event is triggered. -->
            <ActionEventType name="KillPrey">
                <ReferenceProperty name="prey" type="Specimen"/>
            </ActionEventType>
            
            <!-- An invisible physical agent which moves randomly on the map and is responsible for food regrowing. -->
            <PhysicalAgentType name="FoodRessource"/>            
            
            <!-- The supertype Specimen which handles rules, which have predator and prey in common. -->
            <PhysicalAgentType name="Specimen">
                
                <Attribute type="Integer" name="energy" maxValue="200" minValue="10"/>
                <Attribute type="Integer" name="age" maxValue="100" minValue="0"/>
                
                <Attribute type="Integer" name="maxAge"/>
                <Attribute type="Integer" name="sex"/>
                <Attribute type="Integer" name="perceivedSpecimenId"/>
                <EnumerationProperty name="specimenType" type="SpecimenType"/>
                
                <AgentRule name="DieRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            If a specimen has reached its maximum age or if it has not enough energy it dies.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="PrepareToMove"/>
                    <IF language="Java"><![CDATA[ s.getAge() >= s.getMaxAge() || s.getEnergy() <= 1 ]]></IF>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="Die"/>
                    </SCHEDULE-EVT>
                </AgentRule>
                
                <AgentRule name="PrepareToMoveRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            For the preparation to move, the specimen consumes one energy point and gets older by one point.
                            Afterwards the actual moving is scheduled.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="PrepareToMove"/>
                    <UPDATE-AGT>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="energy">
                            <ValueExpr language="Java"><![CDATA[ s.getEnergy() - 1 ]]></ValueExpr>
                        </Slot>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="age">
                            <ValueExpr language="Java"><![CDATA[ s.getAge() + 1 ]]></ValueExpr>
                        </Slot>
                    </UPDATE-AGT>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="Move"/>
                    </SCHEDULE-EVT>
                </AgentRule>
            </PhysicalAgentType>
            
            <PhysicalAgentType name="Prey" superType="Specimen">
            
               <EnumerationProperty name="eyeSizeEnumLit" type="EyeSizeEnumLit"/>
                <AgentRule name="PerceivePreyRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            If a prey specimen perceives another prey, and one of them is female and the other one male, 
                            a new prey specimen is to be created.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="PerceiveSpecimen" eventVariable="e"/>
                    <IF language="Java"><![CDATA[ 
                            e.getPerceivedSpecimen().getSpecimenType() == SpecimenType.PREY && 
                            ((s.getSex() == 1 && e.getPerceivedSpecimen().getSex() == 2) ||
                            (s.getSex() == 2 && e.getPerceivedSpecimen().getSex() == 1))
                        ]]></IF>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="ProduceNewPrey">
                            <Slot xsi:type="aors:OpaqueExprSlot" property="father">
                                <ValueExpr language="Java"><![CDATA[ (s.getSex() == 2) ? ((Specimen) s.getAgentObject()) : e.getPerceivedSpecimen() ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="mother">
                                <ValueExpr language="Java"><![CDATA[ (s.getSex() == 1) ? ((Specimen) s.getAgentObject()) : e.getPerceivedSpecimen() ]]></ValueExpr>
                            </Slot>
                        </ActionEventExpr>
                    </SCHEDULE-EVT>
                </AgentRule>
                
                <AgentRule name="EatFoodRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            If the prey enters a new cell which contains food and the prey is not full it consumes one food point
                            and gains therefore 5 energy points.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="EatFood"/>
                    <IF language="Java"><![CDATA[ s.getEnergy() <= 500 ]]></IF>
                    <UPDATE-AGT>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="energy">
                            <ValueExpr language="Java"><![CDATA[ s.getEnergy() + 5 ]]></ValueExpr>
                        </Slot>
                    </UPDATE-AGT>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="DegradeFood"/>
                    </SCHEDULE-EVT>
                </AgentRule>
            </PhysicalAgentType>
            
            <PhysicalAgentType name="Predator" superType="Specimen">
                <EnumerationProperty name="eyeColorEnumLit" type="EyeColorEnumLit"/>
                <AgentRule name="PerceivePredatorRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            If a predator specimen perceives another predator, and one of them is female and the other one male, 
                            a new predator specimen is to be created.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="PerceiveSpecimen" eventVariable="e"/>
                    <IF language="Java"><![CDATA[ 
                            e.getPerceivedSpecimen().getSpecimenType() == SpecimenType.PREDATOR && 
                            ((s.getSex() == 1 && e.getPerceivedSpecimen().getSex() == 2) ||
                            (s.getSex() == 2 && e.getPerceivedSpecimen().getSex() == 1))
                        ]]></IF>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="ProduceNewPredator">
                            <Slot xsi:type="aors:OpaqueExprSlot" property="father">
                                <ValueExpr language="Java"><![CDATA[ s.getSex() == 2 ? ((Specimen) s.getAgentObject()) : e.getPerceivedSpecimen() ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="mother">
                                <ValueExpr language="Java"><![CDATA[ s.getSex() == 1 ? ((Specimen) s.getAgentObject()) : e.getPerceivedSpecimen() ]]></ValueExpr>
                            </Slot>
                        </ActionEventExpr>                        
                    </SCHEDULE-EVT>
                </AgentRule>
                
                <AgentRule name="PerceivePreyRule" agentVariable="s">
                    <documentation>
                        <dc:description>
                            If a predator perceives a prey specimen, it is going to be killed and the predator
                            gains 100 energy points.
                        </dc:description>
                    </documentation>
                    <WHEN eventType="PerceiveSpecimen" eventVariable="e"/>
                    <IF language="Java"><![CDATA[ 
                            e.getPerceivedSpecimen().getSpecimenType() == SpecimenType.PREY && 
                            s.getEnergy() <= 500
                            ]]></IF>
                    <UPDATE-AGT>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="energy">
                            <ValueExpr language="Java"><![CDATA[ s.getEnergy() + 100 ]]></ValueExpr>
                        </Slot>
                    </UPDATE-AGT>
                    <SCHEDULE-EVT>
                        <ActionEventExpr actionEventType="KillPrey">
                            <Slot xsi:type="aors:OpaqueExprSlot" property="prey">
                                <ValueExpr language="Java"><![CDATA[ e.getPerceivedSpecimen() ]]></ValueExpr>
                            </Slot>
                        </ActionEventExpr>
                    </SCHEDULE-EVT>
                </AgentRule>
            </PhysicalAgentType>
            
        </EntityTypes>
        
        <EnvironmentRules>
            <EnvironmentRule name="FoodRessourceNextSimulationStepRule">
                <documentation>
                    <dc:description>
                        On each simulation step the food ressources are moved randomly on the map.
                        After moving, new food will be grown.
                    </dc:description>
                </documentation>
                <WHEN eventType="NextSimulationStep" eventVariable="e"/>
                <FOR objectVariable="f" objectType="FoodRessource"/>
                <UPDATE-ENV>
                    <UpdateObject objectVariable="f">
                        <Slot xsi:type="aors:OpaqueExprSlot" property="x">
                            <ValueExpr language="Java"><![CDATA[ Simulator.spaceModel.newX(f, Random.uniformInt(1, (int) Simulator.spaceModel.getXMax())) ]]></ValueExpr>
                        </Slot>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="y">
                            <ValueExpr language="Java"><![CDATA[ Simulator.spaceModel.newY(f, Random.uniformInt(1, (int) Simulator.spaceModel.getYMax())) ]]></ValueExpr>
                        </Slot>
                    </UpdateObject>
                </UPDATE-ENV>
                <SCHEDULE-EVT>
                    <CausedEventExpr eventType="GrowFood">
                        <Condition language="Java"><![CDATA[ Simulator.spaceModel.getGridCell((int) f.getX(), (int) f.getY()).getFoodLevel() < 4 ]]></Condition>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="foodRessource">
                            <ValueExpr language="Java"><![CDATA[ f ]]></ValueExpr>
                        </Slot>
                    </CausedEventExpr>
                </SCHEDULE-EVT>
            </EnvironmentRule>
            
            <EnvironmentRule name="PreyNextSimulationStepRule">
                <documentation>
                    <dc:description>
                        At each simulation step the prey specimens are asked to prepare themselves for moving.
                    </dc:description>
                </documentation>
                <WHEN eventType="NextSimulationStep" eventVariable="e"/>
                <FOR objectVariable="prey" objectType="Prey"/>
                <SCHEDULE-EVT>
                    <PerceptionEventExpr eventType="PrepareToMove">
                        <PerceiverIdRef language="Java"><![CDATA[ prey.getId() ]]></PerceiverIdRef>
                    </PerceptionEventExpr>
                </SCHEDULE-EVT>
            </EnvironmentRule>
            
            <EnvironmentRule name="PredatorNextSimulationStepRule">
                <documentation>
                    <dc:description>
                        At each simulation step the predator specimens are asked to prepare themselves for moving.
                    </dc:description>
                </documentation>
                <WHEN eventType="NextSimulationStep" eventVariable="e"/>
                <FOR objectVariable="predator" objectType="Predator"/>
                <SCHEDULE-EVT>
                    <PerceptionEventExpr eventType="PrepareToMove">
                        <PerceiverIdRef language="Java"><![CDATA[ predator.getId() ]]></PerceiverIdRef>
                    </PerceptionEventExpr>
                </SCHEDULE-EVT>
            </EnvironmentRule>
            
            <EnvironmentRule name="DieRule">
                <documentation>
                    <dc:description>
                        If a specimen is going to die, it is destroyed and removed from the map.
                    </dc:description>
                </documentation>
                <WHEN eventType="Die" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getActor() ]]></ObjectRef>
                </FOR>
                <UPDATE-ENV>
                    <UpdateGridCell>
                        <XCoordinate language="Java"><![CDATA[ (int) s.getX() ]]></XCoordinate>
                        <YCoordinate language="Java"><![CDATA[ (int) s.getY() ]]></YCoordinate>
                        <Slot xsi:type="aors:SimpleSlot" property="specimenId" value="0"/>
                    </UpdateGridCell>
                    <DestroyObject objectVariable="s"/>
                </UPDATE-ENV>
                <SCHEDULE-EVT>
                    <CausedEventExpr eventType="DecreaseNumberOfPrey">
                        <Condition language="Java"><![CDATA[ s.getSpecimenType() == SpecimenType.PREY ]]></Condition>
                    </CausedEventExpr>
                    
                    <CausedEventExpr eventType="DecreaseNumberOfPredator">
                        <Condition language="Java"><![CDATA[ s.getSpecimenType() == SpecimenType.PREDATOR ]]></Condition>
                    </CausedEventExpr>
                </SCHEDULE-EVT>
            </EnvironmentRule>
            
            <EnvironmentRule name="MoveRule">
                <documentation>
                    <dc:description>
                        The actual moving of a specimen. The specimenId attribute of the current cell is set to zero,
                        the specimenId of the cell, the specimen will go, is temporarily saved in the 
                        perceivedSpecimenId attribute and afterwards the specimenId of the new cell is overwritten.
                        If the perceivedSpecimenId is not null, another specimen is perceived and the corresponding event is triggerd.
                        If the specimen is a prey and the new cell contains food, an eat food event is scheduled.
                    </dc:description>
                </documentation>
                <WHEN eventType="Move" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getActor() ]]></ObjectRef>
                </FOR>
                <UPDATE-ENV>
                    <UpdateGridCell>
                        <XCoordinate language="Java"><![CDATA[ (int) s.getX() ]]></XCoordinate>
                        <YCoordinate language="Java"><![CDATA[ (int) s.getY() ]]></YCoordinate>
                        <Slot xsi:type="aors:SimpleSlot" property="specimenId" value="0"/>
                    </UpdateGridCell>
                    <UpdateObject objectVariable="s">
                        <Slot xsi:type="aors:OpaqueExprSlot" property="x">
                            <ValueExpr language="Java"><![CDATA[ Simulator.spaceModel.newX(s, Random.uniformInt(2) - 1) ]]></ValueExpr>
                        </Slot>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="y">
                            <ValueExpr language="Java"><![CDATA[ Simulator.spaceModel.newY(s, Random.uniformInt(2) - 1) ]]></ValueExpr>
                        </Slot>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="perceivedSpecimenId">
                            <ValueExpr language="Java"><![CDATA[ Simulator.spaceModel.getGridCell((int) s.getX(), (int) s.getY()).getSpecimenId() ]]></ValueExpr>
                        </Slot>
                    </UpdateObject>
                    <UpdateGridCell>
                        <XCoordinate language="Java"><![CDATA[ (int) s.getX() ]]></XCoordinate>
                        <YCoordinate language="Java"><![CDATA[ (int) s.getY() ]]></YCoordinate>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="specimenId">
                            <ValueExpr language="Java"><![CDATA[ s.getId() ]]></ValueExpr>
                        </Slot>
                    </UpdateGridCell>
                </UPDATE-ENV>
                <SCHEDULE-EVT>
                    <PerceptionEventExpr eventType="PerceiveSpecimen">
                        <Condition language="Java"><![CDATA[ s.getPerceivedSpecimenId() != 0 ]]></Condition>
                        <PerceiverIdRef language="Java"><![CDATA[ s.getId() ]]></PerceiverIdRef>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="perceivedSpecimen">
                            <ValueExpr language="Java"><![CDATA[ (Specimen) getEnvironmentSimulator().getPhysAgentById(s.getPerceivedSpecimenId()) ]]></ValueExpr>
                        </Slot>
                    </PerceptionEventExpr>
                    
                    <PerceptionEventExpr eventType="EatFood">
                        <Condition language="Java"><![CDATA[ 
                                s.getSpecimenType() == SpecimenType.PREY && 
                                Simulator.spaceModel.getGridCell((int) s.getX(), (int) s.getY()).getFoodLevel() > 0 
                                ]]></Condition>
                        <PerceiverIdRef language="Java"><![CDATA[ s.getId() ]]></PerceiverIdRef>
                    </PerceptionEventExpr>
                </SCHEDULE-EVT>
            </EnvironmentRule>
            
            <EnvironmentRule name="ProduceNewPreyRule">
                <documentation>
                    <dc:description>
                        A new prey is produced if both parents are older than 20. This is necessary to prevent child abuse.
                        
                    </dc:description>
                </documentation>
                <WHEN eventType="ProduceNewPrey" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getActor() ]]></ObjectRef>
                </FOR>
                <IF language="Java"><![CDATA[ e.getMother().getAge() >= 50 && e.getFather().getAge() > 50 && Random.uniformInt(1,3) == 1 ]]></IF>
                <UPDATE-ENV>
                    <Create>
                        <PhysicalAgent type="Prey">
                            <Slot xsi:type="aors:OpaqueExprSlot" property="x">
                                <ValueExpr language="Java"><![CDATA[ s.getX() ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="y">
                                <ValueExpr language="Java"><![CDATA[ s.getY() ]]></ValueExpr>
                            </Slot>
                            <Slot  xsi:type="aors:OpaqueExprSlot" property="sex">
                                <ValueExpr language="Java"><![CDATA[ Random.uniformInt(1,2) ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="specimenType">
                                <ValueExpr language="Java"><![CDATA[ SpecimenType.PREY ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="maxAge">
                                <ValueExpr language="Java"><![CDATA[ Random.uniformInt(3000, 5000) ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="energy">
                                <ValueExpr language="Java"><![CDATA[ (e.getMother().getEnergy() / 2) > 20 ? 20 : (e.getMother().getEnergy() / 2) ]]></ValueExpr>
                            </Slot>
                            <Slot  xsi:type="aors:SimpleSlot" property="age" value="0"/>
                        </PhysicalAgent>
                    </Create>
                    
                    <UpdateStatisticsVariable variable="prey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.prey.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                    
                    <UpdateStatisticsVariable variable="bornPrey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.bornPrey.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                </UPDATE-ENV>
            </EnvironmentRule>

            <EnvironmentRule name="ProduceNewPredatorRule">
                <documentation>
                    <dc:description>
                        A new prey is produced if both parents are older than 50. This is necessary to prevent child abuse.
                    </dc:description>
                </documentation>
                <WHEN eventType="ProduceNewPredator" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getActor() ]]></ObjectRef>
                </FOR>
                <IF language="Java"><![CDATA[ e.getMother().getAge() > 50 && e.getFather().getAge() > 50 && Random.uniformInt(1,3) == 1 ]]></IF>
                <UPDATE-ENV>
                    <Create>
                        <PhysicalAgent type="Predator">
                            <Slot xsi:type="aors:OpaqueExprSlot" property="x">
                                <ValueExpr language="Java"><![CDATA[ s.getX() ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="y">
                                <ValueExpr language="Java"><![CDATA[ s.getY() ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="sex">
                                <ValueExpr language="Java"><![CDATA[ Random.uniformInt(1,2) ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="specimenType">
                                <ValueExpr language="Java"><![CDATA[ SpecimenType.PREDATOR ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="energy">
                                <ValueExpr language="Java"><![CDATA[ (e.getMother().getEnergy() / 2) > 20 ? 20 : (e.getMother().getEnergy() / 2) ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:OpaqueExprSlot" property="maxAge">
                                <ValueExpr language="Java"><![CDATA[ Random.uniformInt(3000, 5000) ]]></ValueExpr>
                            </Slot>
                            <Slot xsi:type="aors:SimpleSlot" property="age" value="0"/>
                        </PhysicalAgent>
                    </Create>
                    
                    <UpdateStatisticsVariable variable="predators">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.predators.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                    
                    <UpdateStatisticsVariable variable="bornPredators">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.bornPredators.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                </UPDATE-ENV>
            </EnvironmentRule>
            
            <EnvironmentRule name="DegradeFoodRule">
                <documentation>
                    <dc:description>
                        If a prey specimen has consumed a food point, the food gets degraded.
                    </dc:description>
                </documentation>
                <WHEN eventType="DegradeFood" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getActor() ]]></ObjectRef>
                </FOR>
                <UPDATE-ENV>
                    <UpdateGridCell gridCellVariable="g">
                        <XCoordinate language="Java"><![CDATA[ (int) s.getX() ]]></XCoordinate>
                        <YCoordinate language="Java"><![CDATA[ (int) s.getY() ]]></YCoordinate>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="foodLevel">
                            <ValueExpr language="Java"><![CDATA[ g.getFoodLevel() - 1 ]]></ValueExpr>
                        </Slot>
                    </UpdateGridCell>
                </UPDATE-ENV>
            </EnvironmentRule>
            
            <EnvironmentRule name="GrowFoodRule">
                <documentation>
                    <dc:description>
                        If a food ressources moves to a new cell, new food is grown if the food has not reached its maximum level.
                    </dc:description>
                </documentation>
                <WHEN eventType="GrowFood" eventVariable="e"/>
                <FOR objectVariable="f" objectType="FoodRessource">
                    <ObjectRef language="Java"><![CDATA[ e.getFoodRessource() ]]></ObjectRef>
                </FOR>
                <UPDATE-ENV>
                    <UpdateGridCell gridCellVariable="g">
                        <XCoordinate language="Java"><![CDATA[ (int) f.getX() ]]></XCoordinate>
                        <YCoordinate language="Java"><![CDATA[ (int) f.getY() ]]></YCoordinate>
                        <Slot xsi:type="aors:OpaqueExprSlot" property="foodLevel">
                            <ValueExpr language="Java"><![CDATA[ g.getFoodLevel() + 1 ]]></ValueExpr>
                        </Slot>
                    </UpdateGridCell>
                </UPDATE-ENV>
            </EnvironmentRule>
            
            <EnvironmentRule name="KillPreyRule">
                <documentation>
                    <dc:description>
                        When a predator kills a prey specimen, the prey specimen is destroyed and removed from the map.
                    </dc:description>
                </documentation>
                <WHEN eventType="KillPrey" eventVariable="e"/>
                <FOR objectVariable="s" objectType="Specimen">
                    <ObjectRef language="Java"><![CDATA[ e.getPrey() ]]></ObjectRef>
                </FOR>
                <UPDATE-ENV>
                    <DestroyObject objectVariable="s"/>
                    
                    <UpdateStatisticsVariable variable="killedPrey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.killedPrey.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                    
                    <UpdateStatisticsVariable variable="prey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.prey.getValue() - 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                </UPDATE-ENV>
            </EnvironmentRule>
            
            <EnvironmentRule name="DecreaseNumberOfPredatorRule">
                <WHEN eventType="DecreaseNumberOfPredator"/>
                <UPDATE-ENV>
                    <UpdateStatisticsVariable variable="predators">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.predators.getValue() - 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                    
                    <UpdateStatisticsVariable variable="diedPredators">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.diedPredators.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                </UPDATE-ENV>
            </EnvironmentRule>

            <EnvironmentRule name="DecreaseNumberOfPreyRule">
                <WHEN eventType="DecreaseNumberOfPrey"/>
                <UPDATE-ENV>
                    <UpdateStatisticsVariable variable="prey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.prey.getValue() - 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                    
                    <UpdateStatisticsVariable variable="diedPrey">
                        <ValueExpr language="Java"><![CDATA[ SimStatistics.diedPrey.getValue() + 1 ]]></ValueExpr>
                    </UpdateStatisticsVariable>
                </UPDATE-ENV>
            </EnvironmentRule>
        </EnvironmentRules>
    </SimulationModel>
    
    <InitialState>	
        <PhysicalAgents type="Prey" rangeStartID="1" rangeEndID="50" hasRandomPosition="true" perceptionRadius="3">
            
            <Slot property="sex">
				<RandomVariable>
					<Uniform>
						<LowerBoundExpr language="Java">java_10</LowerBoundExpr>
						<LowerBoundExpr language="JavaScript">js_10</LowerBoundExpr>
						<LowerBoundExpr language="PHP">php_10</LowerBoundExpr>
						
						<UpperBoundExpr language="Java">java_100</UpperBoundExpr>
						<UpperBoundExpr language="JavaScript">js_100</UpperBoundExpr>
						<UpperBoundExpr language="PHP">php_100</UpperBoundExpr>
					</Uniform>
				</RandomVariable>
			</Slot>
			
			<Slot property="age">
				<RandomVariable>
				<Uniform>
					<LowerBoundExpr language="Java">java_1</LowerBoundExpr>
					<LowerBoundExpr language="JavaScript">js_1</LowerBoundExpr>
					<LowerBoundExpr language="PHP">php_1</LowerBoundExpr>
					
					<UpperBoundExpr language="Java">java_500</UpperBoundExpr>
					<UpperBoundExpr language="JavaScript">js_500</UpperBoundExpr>
					<UpperBoundExpr language="PHP">php_500</UpperBoundExpr>
				</Uniform>
				</RandomVariable>
			</Slot>
		
			<Slot property="maxAge"> 
				<RandomVariable>
					<Binomial>
						<N-Expr language="Java">5</N-Expr>
						<N-Expr language="JavaScript">5</N-Expr>
						<N-Expr language="PHP">5</N-Expr>
						
						<P-Expr language="Java">0.5</P-Expr>
						<P-Expr language="JavaScript">0.5</P-Expr>
						<P-Expr language="PHP">0.5</P-Expr>
					</Binomial>
				</RandomVariable>
			</Slot>
			
			<Slot property="energy">
				<RandomVariable>
					<Triangular>
						<LowerBoundExpr language="Java">6</LowerBoundExpr>
						<LowerBoundExpr language="JavaScript">6</LowerBoundExpr>
						<LowerBoundExpr language="PHP">6</LowerBoundExpr>
						
						<UpperBoundExpr language="Java">8</UpperBoundExpr>
						<UpperBoundExpr language="JavaScript">8</UpperBoundExpr>
						<UpperBoundExpr language="PHP">8</UpperBoundExpr>
						
						<ModeExpr language="Java">9</ModeExpr>
						<ModeExpr language="JavaScript">9</ModeExpr>
						<ModeExpr language="PHP">9</ModeExpr>
					</Triangular>
				</RandomVariable>
			</Slot>
            
        </PhysicalAgents>
        
        <PhysicalAgents type="Predator" rangeStartID="100" rangeEndID="104" hasRandomPosition="true" perceptionRadius="3">
            
           <Slot property="sex">
				<RandomVariable>
					<Gamma>
						<ShapeExpr language="Java">1</ShapeExpr>
						<ShapeExpr language="JavaScript">2</ShapeExpr>
						<ShapeExpr language="PHP">3</ShapeExpr>
						
						<RateExpr language="Java">2</RateExpr>
						<RateExpr language="JavaScript">3</RateExpr>
						<RateExpr language="PHP">4</RateExpr>
					</Gamma>
				</RandomVariable>
			</Slot>
			
			<Slot property="age">
				<RandomVariable>
					<LogNormal>
						<MeanExpr language="Java">8</MeanExpr>
						<MeanExpr language="JavaScript">8</MeanExpr>
						<MeanExpr language="PHP">8</MeanExpr>
						
						<StandardDeviationExpr language="Java">9</StandardDeviationExpr>
						<StandardDeviationExpr language="JavaScript">9</StandardDeviationExpr>
						<StandardDeviationExpr language="PHP">9</StandardDeviationExpr>
						
					</LogNormal>
				</RandomVariable>
			</Slot>
			
			<Slot property="maxAge"> 
				<RandomVariable>
					<Weibull>
						<ShapeExpr language="Java">2</ShapeExpr>
						<ShapeExpr language="JavaScript">2</ShapeExpr>
						<ShapeExpr language="PHP">2</ShapeExpr>
						
						<ScaleExpr language="Java">4</ScaleExpr>
						<ScaleExpr language="JavaScript">4</ScaleExpr>
						<ScaleExpr language="PHP">4</ScaleExpr>
					</Weibull>
				</RandomVariable>
			</Slot>
			
			<Slot property="energy">
				<RandomVariable>
					<Poisson>
						<LambdaExpr language="Java">7</LambdaExpr>
						<LambdaExpr language="JavaScript">7</LambdaExpr>
						<LambdaExpr language="PHP">7</LambdaExpr>
					</Poisson>
				</RandomVariable>
			</Slot>
            
        </PhysicalAgents>
        
       
        
        <GridCells>
            <Slot xsi:type="aors:SimpleSlot" property="foodLevel" value="4"/>
            <Slot xsi:type="aors:SimpleSlot" property="specimenId" value="0"/>
        </GridCells>
        
        <ExogenousEvent occurrenceTime="1" type="NextSimulationStep"/>
    </InitialState>
    
    <Views>
        <SpaceView>
            <Grid>
                <VisualizationMap cellViewProperty="fill" cellProperty="foodLevel" caseWise="true" v0="rgb(216,167,99)" a0="1" v1="rgb(170,198,99)" a1="2" v2="rgb(147,198,44)" a2="3" v3="rgb(103,198,44)" a3="4" v4="rgb(0,169,44)"/>
            </Grid>
        </SpaceView>
        
        <View physicalObjectType="Prey" shape2D="rectangle">
            <!--<DisplayInfo property="energy"></DisplayInfo>-->
            <ShapeSlot shapeProperty="fill" value="white"/>
            <VisualizationMap property="width" shapeProperty="width" caseWise="false" a0="8"/>
            <VisualizationMap property="width" shapeProperty="height" caseWise="false" a0="8"/>
        </View>
        
        <View physicalObjectType="Predator" shape2D="rectangle">
            <!--<DisplayInfo property="energy"></DisplayInfo>-->
            <ShapeSlot shapeProperty="fill" value="black"/>
            <VisualizationMap property="width" shapeProperty="width" caseWise="false" a0="8"/>
            <VisualizationMap property="width" shapeProperty="height" caseWise="false" a0="8"/>
        </View>
        
        <EventAppearance eventType="KillPrey" soundFile="sheep.mp3"/>
    </Views>
    
<UserInterface>

	<InitialStateUI>  
	   
       <EventUI eventType="NextSimulationStep" nmrOfInstances="1">
           <PropertyUI property="occurrenceTime">
                <Label>
					<Text xml:lang="en">OccurrenceTime</Text>
					<Text xml:lang="de">AuftretenZeit</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">When will the event occur?</Text>
					<Text xml:lang="de">Wann wird das ereignis auftreten?</Text>
				</Hint>
			</PropertyUI>	
        </EventUI>
      
       
       <AgentUI agentType="Prey"  nmrOfInstances="2">
			<PropertyUI property="hasRandomPosition">
			   <Label>
					<Text xml:lang="en">hasRandomPositionEN</Text>
					<Text xml:lang="de">hasRandomPositionDE</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">hasRandomPositionEN</Text>
					<Text xml:lang="de">hasRandomPositionDE</Text>
				</Hint> 
			</PropertyUI>
			
			<PropertyUI property="perceptionRadius">
			   <Label>
					<Text xml:lang="en">perceptionRadiusEN</Text>
					<Text xml:lang="de">perceptionRadiusDE</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">perceptionRadiusEN</Text>
					<Text xml:lang="de">perceptionRadiusDE</Text>
				</Hint> 
			</PropertyUI>			
			
			<PropertyUI property="sex">
			   <Label>
					<Text xml:lang="en">Sex</Text>
					<Text xml:lang="de">Geschlecht</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">sex-en</Text>
					<Text xml:lang="de">geschlecht-de</Text>
				</Hint> 
			</PropertyUI>
			
			
			<PropertyUI property="age">
			   <Label>
					<Text xml:lang="en">Age</Text>
					<Text xml:lang="de">Alter</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">Age-en</Text>
					
				</Hint> 
			</PropertyUI>
			
			<PropertyUI property="maxAge">
			   <Label>
					<Text xml:lang="en">maxAge</Text>
					<Text xml:lang="de">maxAlter</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">Age-en</Text>
					
				</Hint> 
			</PropertyUI>
			
			
			
			<PropertyUI property="energy">
			   <Label>
					<Text xml:lang="en">energy-en</Text>
					<Text xml:lang="de">energy-de</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">energy-en</Text>
					
				</Hint> 
			</PropertyUI>
			
		</AgentUI>
		
		<AgentUI agentType="Predator" nmrOfInstances="2">
			
			<PropertyUI property="hasRandomPosition">
			   <Label>
					<Text xml:lang="en">hasRandomPositionEN</Text>
					<Text xml:lang="de">hasRandomPositionDE</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">hasRandomPositionEN</Text>
					<Text xml:lang="de">hasRandomPositionDE</Text>
				</Hint> 
			</PropertyUI>
			
			<PropertyUI property="perceptionRadius">
			   <Label>
					<Text xml:lang="en">perceptionRadiusEN</Text>
					<Text xml:lang="de">perceptionRadiusDE</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">perceptionRadiusEN</Text>
					<Text xml:lang="de">perceptionRadiusDE</Text>
				</Hint> 
			</PropertyUI>			
			
			
			<PropertyUI property="sex">
			   <Label>
					<Text xml:lang="en">Sex</Text>
					<Text xml:lang="de">Geschlecht</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">sex-en</Text>
					<Text xml:lang="de">geschlecht-de</Text>
				</Hint> 
			</PropertyUI>
			
			<PropertyUI property="age">
			   <Label>
					<Text xml:lang="en">Age</Text>
					<Text xml:lang="de">Alter</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">Age-en</Text>
					
				</Hint> 
			</PropertyUI>
			
			
			
			<PropertyUI property="maxAge">
			   <Label>
					<Text xml:lang="en">maxAge-en</Text>
					<Text xml:lang="de">maxAge-de</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">maxAge-en</Text>
					<Text xml:lang="de">maxAge-de</Text>
				</Hint> 
			</PropertyUI>
			
			<PropertyUI property="energy">
			   <Label>
					<Text xml:lang="en">energy-en</Text>
					<Text xml:lang="de">energy-de</Text>
				</Label>
				<Hint>
					<Text xml:lang="en">energy-en</Text>
					
				</Hint> 
			</PropertyUI>
			
			
		</AgentUI>
		
		
		
		
	</InitialStateUI>
</UserInterface>
</SimulationScenario>

