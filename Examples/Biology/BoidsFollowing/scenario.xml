<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="prettyprint.xsl"?>
<SimulationScenario xmlns="http://aor-simulation.org" xmlns:aors="http://aor-simulation.org" xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://aor-simulation.org ../../../ext/aorsl/AORSL-0-8-3.xsd"
  version="0.8.3" simulationManagerDirectory="../../.." scenarioName="BoidsFollowing" scenarioTitle="Boids: Slaves Follow Their Master">

  <SimulationParameters simulationSteps="20000" stepDuration="1" timeUnit="s" stepTimeDelay="20" randomSeed="100"/>
  <SimulationModel modelName="BoidsFollowing" modelTitle="BoidsFollowing" autoKinematics="true" autoImpulse="false">
    <documentation>
      <dc:creator>Stefan Boecker</dc:creator>
      <dc:created>20081103</dc:created>
      <dc:modified>20090707</dc:modified>
      <dc:contributor>Gerd Wagner</dc:contributor>
      <dc:contributor>Mircea Diaconescu</dc:contributor>
    </documentation>
    
    <SpaceModel geometry="Toroidal" spatialDistanceUnit="cm">
      <TwoDimensional xMax="800" yMax="600" />
    </SpaceModel>
   
    <!--<SpaceModel dimensions="2" geometry="Toroidal" xMax="800" yMax="600" spatialDistanceUnit="cm"/>-->

    <EntityTypes>
      <!-- Defines a new boid move direction -->
      <ActionEventType name="ChangeDirection">
        <Attribute name="x" type="Float"/>
        <Attribute name="y" type="Float"/>
        <Attribute name="vx" type="Float"/>
        <Attribute name="vy" type="Float"/>
      </ActionEventType>

      <!-- Defines a new boid velocity on X and Y axis  -->
      <ActionEventType name="ChangeVelocity">
        <Attribute name="vx" type="Float"/>
        <Attribute name="vy" type="Float"/>
      </ActionEventType>

      <!-- Defines a new leader boid velocity on the X and Y axis -->
      <ActionEventType name="LeaderChangeVelocity">
        <Attribute name="vx" type="Float"/>
        <Attribute name="vy" type="Float"/>
      </ActionEventType>

      <PhysicalObjectType name="Checkpoint" idPerceivable="true"/>

      <!-- ======================================================================= -->
      <PhysicalAgentType name="LeaderBoid" idPerceivable="true" autoPerception="true">
        <!-- ======================================================================= -->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <ReactionRule name="CheckpointPerception_Rule" agentVariable="leaderBoid">
          <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <documentation>
            <dc:description> Establish the movement of the leader boid based on the reached checkpoints. </dc:description>
          </documentation>
          <WHEN eventType="PhysicalObjectPerceptionEvent" physicalObjectType="Checkpoint" eventVariable="evt"/>
          <DO>
            <SCHEDULE-EVT>
              <ActionEventExpr actionEventType="LeaderChangeVelocity">
                <Slot property="vx">
                  <ValueExpr language="Java"> evt.getPerceivedPhysicalObjectIdRef() == 1000 ? 0 : evt.getPerceivedPhysicalObjectIdRef() == 1001 ?
                    0.005 : evt.getPerceivedPhysicalObjectIdRef() == 1002 ? 0 : - 0.005 </ValueExpr>
                </Slot>
                <Slot property="vy">
                  <ValueExpr language="Java"> evt.getPerceivedPhysicalObjectIdRef() == 1000 ? 0.005 : evt.getPerceivedPhysicalObjectIdRef() == 1001 ?
                    0 : evt.getPerceivedPhysicalObjectIdRef() == 1002 ? -0.005 : 0 </ValueExpr>
                </Slot>
              </ActionEventExpr>
            </SCHEDULE-EVT>
          </DO>
        </ReactionRule>
      </PhysicalAgentType>

      <!-- ================================================================================== -->
      <PhysicalAgentType name="Boid" memorySize="0" autoPerception="true">
        <!-- ================================================================================== -->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <ReactionRule name="LeaderPerceptionChangeDirection_AgentRule" agentVariable="boid">
          <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
          <WHEN eventType="PhysicalObjectPerceptionEvent" physicalObjectType="LeaderBoid" eventVariable="evt"/>
          <DO>
            <SCHEDULE-EVT>
              <ActionEventExpr actionEventType="ChangeDirection">
                <Slot property="x">
                  <ValueExpr language="Java">evt.getPerceivedPhysicalObject().getX()</ValueExpr>
                </Slot>
                <Slot property="y">
                  <ValueExpr language="Java">evt.getPerceivedPhysicalObject().getY()</ValueExpr>
                </Slot>
                <Slot property="vx">
                  <ValueExpr language="Java">evt.getPerceivedPhysicalObject().getVx()</ValueExpr>
                </Slot>
                <Slot property="vy">
                  <ValueExpr language="Java">evt.getPerceivedPhysicalObject().getVy()</ValueExpr>
                </Slot>
              </ActionEventExpr>
            </SCHEDULE-EVT>
          </DO>
        </ReactionRule>
      </PhysicalAgentType>
    </EntityTypes>

    <EnvironmentRules>
      <!-- ====================================== -->
      <EnvironmentRule name="BoidChangeDirection_Rule">
        <!-- ====================================== -->
        <WHEN eventType="ChangeDirection" eventVariable="evt"/>
        <FOR objectVariable="b" objectType="Boid">
          <ObjectRef language="Java">evt.getActor()</ObjectRef>
        </FOR>
        <FOR dataType="Float" dataVariable="dep">
          <ValueExpr language="Java">Random.uniform(0,0.005)</ValueExpr>
        </FOR>
        <FOR dataType="Float" dataVariable="depStep">
          <ValueExpr language="Java">Random.uniform(30,50)</ValueExpr>
        </FOR>
        <DO>
          <UPDATE-ENV>
            <UpdateObject objectVariable="b">
              <Slot property="vx">
                <ValueExpr language="Java">
                  <![CDATA[
									(evt.getX() - 25*Random.uniform(1,5)*Math.signum(evt.getVx()) > b.getX()) 
										? b.getVx() + Math.abs((evt.getVx() - b.getVx())/depStep + dep) 
										: b.getVx() - Math.abs((evt.getVx() - b.getVx())/depStep - dep)
								]]>
                </ValueExpr>
              </Slot>
              <Slot property="vy">
                <ValueExpr language="Java">
                  <![CDATA[
									(evt.getY() - 25*Random.uniform(1,5)*Math.signum(evt.getVy()) > b.getY()) 
										? b.getVy() + Math.abs((evt.getVy() - b.getVy())/depStep + dep) 
										: b.getVy() - Math.abs((evt.getVy() - b.getVy())/depStep - dep)
								]]>
                </ValueExpr>
              </Slot>
            </UpdateObject>
          </UPDATE-ENV>
        </DO>
      </EnvironmentRule>

      <!-- =========================================== -->
      <EnvironmentRule name="BoidLeaderChangeVelocity_Rule">
        <!-- =========================================== -->
        <WHEN eventType="LeaderChangeVelocity" eventVariable="evt"/>
        <DO>
          <UPDATE-ENV>
            <UpdateObject>
              <ObjectRef objectType="LeaderBoid" language="Java">evt.getActor()</ObjectRef>
              <Slot property="vx">
                <ValueExpr language="Java">evt.getVx()</ValueExpr>
              </Slot>
              <Slot property="vy">
                <ValueExpr language="Java">evt.getVy()</ValueExpr>
              </Slot>
            </UpdateObject>
          </UPDATE-ENV>
        </DO>
      </EnvironmentRule>

      <EnvironmentRule name="RotateBoidLeader_Rule">
        <ON-EACH-SIMULATION-STEP/>
        <FOR objectIdRef="1" objectType="LeaderBoid" objectVariable="leader"/>
        <DO>
          <UPDATE-ENV>
            <UpdateObject objectVariable="leader">
              <Slot property="rotationAngleZ">
                <ValueExpr language="Java">leader.getRotationAngleZ()+1</ValueExpr>
              </Slot>
            </UpdateObject>
          </UPDATE-ENV>
        </DO>
      </EnvironmentRule>

    </EnvironmentRules>
  </SimulationModel>

  <InitialState>
    <!-- create and intialize the check points -->
    <PhysicalObject type="Checkpoint" id="1000" width="5" height="5" x="200" y="200"/>
    <PhysicalObject type="Checkpoint" id="1001" width="5" height="5" x="200" y="400"/>
    <PhysicalObject type="Checkpoint" id="1002" width="5" height="5" x="600" y="400"/>
    <PhysicalObject type="Checkpoint" id="1003" width="5" height="5" x="600" y="200"/>

    <!-- create the initialize the leader boid -->
    <PhysicalAgent type="LeaderBoid" id="1" name="Leader" m="1" perceptionRadius="1" width="10" height="10" x="200" y="200" vx="0" vy="0.005"/>


    <!-- Create and initialize slave boids that follows the leader -->
    <PhysicalAgents type="Boid" rangeStartID="101" rangeEndID="110" m="1" width="10" height="10" perceptionRadius="250">
      <Slot property="x">
        <ValueExpr language="Java">Random.uniform(100, 300)</ValueExpr>
      </Slot>
      <Slot property="y">
        <ValueExpr language="Java">Random.uniform(100, 300)</ValueExpr>
      </Slot>
      <Slot property="vx">
        <ValueExpr language="Java">0.0</ValueExpr>
      </Slot>
      <Slot property="vy">
        <ValueExpr language="Java">0.0</ValueExpr>
      </Slot>
    </PhysicalAgents>
  </InitialState>
  
  <UserInterface>
    <AnimationUI>
      <Views>
        <PhysicalObjectView physicalObjectType="Boid">
          <PhysicalShape2D>
            <Triangle fill="blue"/>
          </PhysicalShape2D>
        </PhysicalObjectView>
        <PhysicalObjectView physicalObjectType="LeaderBoid">
          <PhysicalShape2D>
            <Square fill="red"/>
          </PhysicalShape2D>
        </PhysicalObjectView>
        <PhysicalObjectView physicalObjectType="Checkpoint">
          <PhysicalShape2D>
            <Square fill="green"/>
          </PhysicalShape2D>
        </PhysicalObjectView>
      </Views>
    </AnimationUI>
    
  </UserInterface>
</SimulationScenario>
